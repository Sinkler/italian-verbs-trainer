!function(e){function t(a){if(n[a])return n[a].exports;var o=n[a]={exports:{},id:a,loaded:!1};return e[a].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="/dist/",t(0)}([function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _react = __webpack_require__(81);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(86);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _app = __webpack_require__(83);\n\nvar _app2 = _interopRequireDefault(_app);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_reactDom2.default.render(_react2.default.createElement(_app2.default, null), document.getElementById('root'));\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/index.jsx\n// module id = 0\n// module chunks = 0\n//# sourceURL=webpack:///./src/js/index.jsx?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/invariant.js\n// module id = 1\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/invariant.js?")},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/reactProdInvariant.js\n// module id = 2\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/reactProdInvariant.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = __webpack_require__(10);\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (false) {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/warning.js\n// module id = 3\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/warning.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar DOMProperty = __webpack_require__(15);\nvar ReactDOMComponentFlags = __webpack_require__(55);\n\nvar invariant = __webpack_require__(1);\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentTree.js\n// module id = 4\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMComponentTree.js?")},function(module,exports){eval("'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/object-assign/index.js\n// module id = 5\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/object-assign/index.js?")},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/ExecutionEnvironment.js\n// module id = 6\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/ExecutionEnvironment.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\nvar debugTool = null;\n\nif (false) {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstrumentation.js\n// module id = 7\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactInstrumentation.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar CallbackQueue = __webpack_require__(53);\nvar PooledClass = __webpack_require__(13);\nvar ReactFeatureFlags = __webpack_require__(58);\nvar ReactReconciler = __webpack_require__(16);\nvar Transaction = __webpack_require__(27);\n\nvar invariant = __webpack_require__(1);\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.type.isReactTopLevelWrapper) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdates.js\n// module id = 8\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactUpdates.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar PooledClass = __webpack_require__(13);\n\nvar emptyFunction = __webpack_require__(10);\nvar warning = __webpack_require__(3);\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (false) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (false) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (false) {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (false) {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (false) {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticEvent.js\n// module id = 9\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticEvent.js?");
},function(module,exports){eval('"use strict";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/emptyFunction.js\n// module id = 10\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/emptyFunction.js?')},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactCurrentOwner.js\n// module id = 11\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactCurrentOwner.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = __webpack_require__(50);\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (false) {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/fbjs/lib/warning.js\n// module id = 12\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/~/fbjs/lib/warning.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/PooledClass.js\n// module id = 13\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/PooledClass.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = __webpack_require__(32);\nvar setInnerHTML = __webpack_require__(29);\n\nvar createMicrosoftUnsafeLocalFunction = __webpack_require__(40);\nvar setTextContent = __webpack_require__(70);\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMLazyTree.js\n// module id = 14\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/DOMLazyTree.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (false) {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (false) {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   *\n   * autofocus is predefined, because adding it to the property whitelist\n   * causes unintended side effects.\n   *\n   * @type {Object}\n   */\n  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMProperty.js\n// module id = 15\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/DOMProperty.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactRef = __webpack_require__(123);\nvar ReactInstrumentation = __webpack_require__(7);\n\nvar warning = __webpack_require__(3);\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n  ) {\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (false) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconciler.js\n// module id = 16\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactReconciler.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(30);\n\nvar ReactChildren = __webpack_require__(165);\nvar ReactComponent = __webpack_require__(48);\nvar ReactPureComponent = __webpack_require__(170);\nvar ReactClass = __webpack_require__(166);\nvar ReactDOMFactories = __webpack_require__(167);\nvar ReactElement = __webpack_require__(18);\nvar ReactPropTypes = __webpack_require__(168);\nvar ReactVersion = __webpack_require__(171);\n\nvar onlyChild = __webpack_require__(172);\nvar warning = __webpack_require__(12);\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (false) {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (false) {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\nmodule.exports = React;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/React.js\n// module id = 17\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/React.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(30);\n\nvar ReactCurrentOwner = __webpack_require__(11);\n\nvar warning = __webpack_require__(12);\nvar canDefineProperty = __webpack_require__(79);\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = __webpack_require__(77);\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (false) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (false) {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (false) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (false) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (false) {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElement.js\n// module id = 18\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactElement.js?");
},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/reactProdInvariant.js\n// module id = 19\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/reactProdInvariant.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/fbjs/lib/invariant.js\n// module id = 20\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/~/fbjs/lib/invariant.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar EventPluginRegistry = __webpack_require__(33);\nvar EventPluginUtils = __webpack_require__(34);\nvar ReactErrorUtils = __webpack_require__(38);\n\nvar accumulateInto = __webpack_require__(64);\nvar forEachAccumulated = __webpack_require__(65);\nvar invariant = __webpack_require__(1);\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginHub.js\n// module id = 21\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/EventPluginHub.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = __webpack_require__(21);\nvar EventPluginUtils = __webpack_require__(34);\n\nvar accumulateInto = __webpack_require__(64);\nvar forEachAccumulated = __webpack_require__(65);\nvar warning = __webpack_require__(3);\n\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (false) {\n    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPropagators.js\n// module id = 22\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/EventPropagators.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstanceMap.js\n// module id = 23\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactInstanceMap.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(9);\n\nvar getEventTarget = __webpack_require__(43);\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticUIEvent.js\n// module id = 24\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticUIEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar EventPluginRegistry = __webpack_require__(33);\nvar ReactEventEmitterMixin = __webpack_require__(115);\nvar ViewportMetrics = __webpack_require__(63);\n\nvar getVendorPrefixedEventName = __webpack_require__(148);\nvar isEventSupported = __webpack_require__(44);\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === 'topWheel') {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === 'topScroll') {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening.topBlur = true;\n          isListening.topFocus = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactBrowserEventEmitter.js\n// module id = 25\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactBrowserEventEmitter.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(24);\nvar ViewportMetrics = __webpack_require__(63);\n\nvar getEventModifierState = __webpack_require__(42);\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticMouseEvent.js\n// module id = 26\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticMouseEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\nvar OBSERVED_ERROR = {};\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar TransactionImpl = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nmodule.exports = TransactionImpl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Transaction.js\n// module id = 27\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/Transaction.js?")},function(module,exports){eval("/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/escapeTextContentForBrowser.js\n// module id = 28\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/escapeTextContentForBrowser.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(6);\nvar DOMNamespaces = __webpack_require__(32);\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = __webpack_require__(40);\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setInnerHTML.js\n// module id = 29\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/setInnerHTML.js?")},function(module,exports){eval("'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/object-assign/index.js\n// module id = 30\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/~/object-assign/index.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = __webpack_require__(14);\nvar Danger = __webpack_require__(92);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactInstrumentation = __webpack_require__(7);\n\nvar createMicrosoftUnsafeLocalFunction = __webpack_require__(40);\nvar setInnerHTML = __webpack_require__(29);\nvar setTextContent = __webpack_require__(70);\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (false) {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (false) {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (false) {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (false) {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: { toIndex: update.toIndex, content: update.content.toString() }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (false) {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (false) {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (false) {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (false) {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: { fromIndex: update.fromIndex }\n            });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMChildrenOperations.js\n// module id = 31\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/DOMChildrenOperations.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMNamespaces.js\n// module id = 32\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/DOMNamespaces.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\n  if (false) {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames:  false ? {} : null,\n  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (injectedEventPluginOrder) {\n    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var pluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = pluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n      // that it is not undefined.\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n      for (var phase in phasedRegistrationNames) {\n        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n          continue;\n        }\n        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n        if (pluginModule) {\n          return pluginModule;\n        }\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    eventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (false) {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginRegistry.js\n// module id = 33\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/EventPluginRegistry.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar ReactErrorUtils = __webpack_require__(38);\n\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (false) {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (false) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (false) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (false) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginUtils.js\n// module id = 34\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/EventPluginUtils.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/KeyEscapeUtils.js\n// module id = 35\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/KeyEscapeUtils.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar React = __webpack_require__(17);\nvar ReactPropTypesSecret = __webpack_require__(121);\n\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: React.PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/LinkedValueUtils.js\n// module id = 36\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/LinkedValueUtils.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentEnvironment.js\n// module id = 37\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactComponentEnvironment.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a) {\n  try {\n    func(a);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (false) {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n      var boundFunc = func.bind(null, a);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      // $FlowFixMe https://github.com/facebook/flow/issues/2336\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactErrorUtils.js\n// module id = 38\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactErrorUtils.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar ReactCurrentOwner = __webpack_require__(11);\nvar ReactInstanceMap = __webpack_require__(23);\nvar ReactInstrumentation = __webpack_require__(7);\nvar ReactUpdates = __webpack_require__(8);\n\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (false) {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (false) {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (false) {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (false) {\n      ReactInstrumentation.debugTool.onSetState();\n      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdateQueue.js\n// module id = 39\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactUpdateQueue.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js\n// module id = 40\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventCharCode.js\n// module id = 41\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getEventCharCode.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventModifierState.js\n// module id = 42\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getEventModifierState.js?");
},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventTarget.js\n// module id = 43\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getEventTarget.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(6);\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isEventSupported.js\n// module id = 44\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/isEventSupported.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/shouldUpdateReactComponent.js\n// module id = 45\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/shouldUpdateReactComponent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar emptyFunction = __webpack_require__(10);\nvar warning = __webpack_require__(3);\n\nvar validateDOMNesting = emptyFunction;\n\nif (false) {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n\n      case 'pre':\n      case 'listing':\n\n      case 'table':\n\n      case 'hr':\n\n      case 'xmp':\n\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/validateDOMNesting.js\n// module id = 46\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/validateDOMNesting.js?")},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/shallowEqual.js\n// module id = 47\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/shallowEqual.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(19);\n\nvar ReactNoopUpdateQueue = __webpack_require__(49);\n\nvar canDefineProperty = __webpack_require__(79);\nvar emptyObject = __webpack_require__(51);\nvar invariant = __webpack_require__(20);\nvar warning = __webpack_require__(12);\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (false) {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponent.js\n// module id = 48\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactComponent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = __webpack_require__(12);\n\nfunction warnNoop(publicInstance, callerName) {\n  if (false) {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactNoopUpdateQueue.js\n// module id = 49\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactNoopUpdateQueue.js?")},function(module,exports){eval('"use strict";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/fbjs/lib/emptyFunction.js\n// module id = 50\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/~/fbjs/lib/emptyFunction.js?')},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/fbjs/lib/emptyObject.js\n// module id = 51\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/~/fbjs/lib/emptyObject.js?");
},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSProperty.js\n// module id = 52\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/CSSProperty.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PooledClass = __webpack_require__(13);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\n\nvar CallbackQueue = function () {\n  function CallbackQueue(arg) {\n    _classCallCheck(this, CallbackQueue);\n\n    this._callbacks = null;\n    this._contexts = null;\n    this._arg = arg;\n  }\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._callbacks.push(callback);\n    this._contexts = this._contexts || [];\n    this._contexts.push(context);\n  };\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.notifyAll = function notifyAll() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    var arg = this._arg;\n    if (callbacks && contexts) {\n      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i], arg);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  };\n\n  CallbackQueue.prototype.checkpoint = function checkpoint() {\n    return this._callbacks ? this._callbacks.length : 0;\n  };\n\n  CallbackQueue.prototype.rollback = function rollback(len) {\n    if (this._callbacks && this._contexts) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  };\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.reset = function reset() {\n    this._callbacks = null;\n    this._contexts = null;\n  };\n\n  /**\n   * `PooledClass` looks for this.\n   */\n\n\n  CallbackQueue.prototype.destructor = function destructor() {\n    this.reset();\n  };\n\n  return CallbackQueue;\n}();\n\nmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CallbackQueue.js\n// module id = 53\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/CallbackQueue.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(15);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactInstrumentation = __webpack_require__(7);\n\nvar quoteAttributeValueForBrowser = __webpack_require__(149);\nvar warning = __webpack_require__(3);\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (false) {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (false) {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (false) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (false) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMPropertyOperations.js\n// module id = 54\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/DOMPropertyOperations.js?")},function(module,exports){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentFlags.js\n// module id = 55\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMComponentFlags.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar LinkedValueUtils = __webpack_require__(36);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactUpdates = __webpack_require__(8);\n\nvar warning = __webpack_require__(3);\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (false) {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelect.js\n// module id = 56\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMSelect.js?")},function(module,exports){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEmptyComponent.js\n// module id = 57\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactEmptyComponent.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactFeatureFlags.js\n// module id = 58\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactFeatureFlags.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar invariant = __webpack_require__(1);\n\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around host tags.\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    _assign(tagToComponentClass, componentClasses);\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactHostComponent.js\n// module id = 59\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactHostComponent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMSelection = __webpack_require__(108);\n\nvar containsNode = __webpack_require__(153);\nvar focusNode = __webpack_require__(74);\nvar getActiveElement = __webpack_require__(75);\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInputSelection.js\n// module id = 60\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactInputSelection.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar DOMLazyTree = __webpack_require__(14);\nvar DOMProperty = __webpack_require__(15);\nvar React = __webpack_require__(17);\nvar ReactBrowserEventEmitter = __webpack_require__(25);\nvar ReactCurrentOwner = __webpack_require__(11);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactDOMContainerInfo = __webpack_require__(102);\nvar ReactDOMFeatureFlags = __webpack_require__(104);\nvar ReactFeatureFlags = __webpack_require__(58);\nvar ReactInstanceMap = __webpack_require__(23);\nvar ReactInstrumentation = __webpack_require__(7);\nvar ReactMarkupChecksum = __webpack_require__(118);\nvar ReactReconciler = __webpack_require__(16);\nvar ReactUpdateQueue = __webpack_require__(39);\nvar ReactUpdates = __webpack_require__(8);\n\nvar emptyObject = __webpack_require__(73);\nvar instantiateReactComponent = __webpack_require__(68);\nvar invariant = __webpack_require__(1);\nvar setInnerHTML = __webpack_require__(29);\nvar shouldUpdateReactComponent = __webpack_require__(45);\nvar warning = __webpack_require__(3);\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (false) {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (false) {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (false) {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (false) {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (false) {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (false) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (false) {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMount.js\n// module id = 61\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactMount.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar React = __webpack_require__(17);\n\nvar invariant = __webpack_require__(1);\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (React.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactNodeTypes.js\n// module id = 62\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactNodeTypes.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ViewportMetrics.js\n// module id = 63\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ViewportMetrics.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/accumulateInto.js\n// module id = 64\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/accumulateInto.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/forEachAccumulated.js\n// module id = 65\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/forEachAccumulated.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = __webpack_require__(62);\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getHostComponentFromComposite.js\n// module id = 66\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getHostComponentFromComposite.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(6);\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getTextContentAccessor.js\n// module id = 67\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getTextContentAccessor.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar ReactCompositeComponent = __webpack_require__(99);\nvar ReactEmptyComponent = __webpack_require__(57);\nvar ReactHostComponent = __webpack_require__(59);\n\nvar getNextDebugID = __webpack_require__(146);\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (false) {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (false) {\n    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (false) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/instantiateReactComponent.js\n// module id = 68\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/instantiateReactComponent.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isTextInputElement.js\n// module id = 69\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/isTextInputElement.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(6);\nvar escapeTextContentForBrowser = __webpack_require__(28);\nvar setInnerHTML = __webpack_require__(29);\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setTextContent.js\n// module id = 70\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/setTextContent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar ReactCurrentOwner = __webpack_require__(11);\nvar REACT_ELEMENT_TYPE = __webpack_require__(114);\n\nvar getIteratorFn = __webpack_require__(145);\nvar invariant = __webpack_require__(1);\nvar KeyEscapeUtils = __webpack_require__(35);\nvar warning = __webpack_require__(3);\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (false) {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (false) {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/traverseAllChildren.js\n// module id = 71\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/traverseAllChildren.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = __webpack_require__(10);\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (false) {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/EventListener.js\n// module id = 72\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/EventListener.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/emptyObject.js\n// module id = 73\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/emptyObject.js?")},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/focusNode.js\n// module id = 74\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/focusNode.js?")},function(module,exports){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/{\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/getActiveElement.js\n// module id = 75\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/getActiveElement.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(19);\n\nvar ReactCurrentOwner = __webpack_require__(11);\n\nvar invariant = __webpack_require__(20);\nvar warning = __webpack_require__(12);\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar setItem;\nvar getItem;\nvar removeItem;\nvar getItemIDs;\nvar addRoot;\nvar removeRoot;\nvar getRootIDs;\n\nif (canUseCollections) {\n  var itemMap = new Map();\n  var rootIDSet = new Set();\n\n  setItem = function (id, item) {\n    itemMap.set(id, item);\n  };\n  getItem = function (id) {\n    return itemMap.get(id);\n  };\n  removeItem = function (id) {\n    itemMap['delete'](id);\n  };\n  getItemIDs = function () {\n    return Array.from(itemMap.keys());\n  };\n\n  addRoot = function (id) {\n    rootIDSet.add(id);\n  };\n  removeRoot = function (id) {\n    rootIDSet['delete'](id);\n  };\n  getRootIDs = function () {\n    return Array.from(rootIDSet.keys());\n  };\n} else {\n  var itemByKey = {};\n  var rootByKey = {};\n\n  // Use non-numeric keys to prevent V8 performance issues:\n  // https://github.com/facebook/react/pull/7232\n  var getKeyFromID = function (id) {\n    return '.' + id;\n  };\n  var getIDFromKey = function (key) {\n    return parseInt(key.substr(1), 10);\n  };\n\n  setItem = function (id, item) {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  };\n  getItem = function (id) {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  };\n  removeItem = function (id) {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  };\n  getItemIDs = function () {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  };\n\n  addRoot = function (id) {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  };\n  removeRoot = function (id) {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  };\n  getRootIDs = function () {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  };\n}\n\nvar unmountedIDs = [];\n\nfunction purgeDeep(id) {\n  var item = getItem(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    removeItem(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = getItem(id);\n    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = getItem(nextChildID);\n      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent id is missing.\n      }\n      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    var item = {\n      element: element,\n      parentID: parentID,\n      text: null,\n      childIDs: [],\n      isMounted: false,\n      updateCount: 0\n    };\n    setItem(id, item);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = getItem(id);\n    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = getItem(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = getItem(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var name = getDisplayName(topElement);\n      var owner = topElement._owner;\n      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = getItem(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = getItem(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = getItem(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = getItem(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = getItem(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRootIDs: getRootIDs,\n  getRegisteredIDs: getItemIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponentTreeHook.js\n// module id = 76\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactComponentTreeHook.js?")},function(module,exports){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementSymbol.js\n// module id = 77\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactElementSymbol.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (false) {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypeLocationNames.js\n// module id = 78\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactPropTypeLocationNames.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (false) {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/canDefineProperty.js\n// module id = 79\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/canDefineProperty.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/getIteratorFn.js\n// module id = 80\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/getIteratorFn.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = __webpack_require__(17);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/react.js\n// module id = 81\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/react.js?")},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/~/node-libs-browser/~/process/browser.js\n// module id = 82\n// module chunks = 0\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(81);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _foldToAscii = __webpack_require__(85);\n\nvar _foldToAscii2 = _interopRequireDefault(_foldToAscii);\n\nvar _verbs = __webpack_require__(84);\n\nvar _verbs2 = _interopRequireDefault(_verbs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nString.prototype.capitalizeFirstLetter = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nvar pronouns = ['io', 'tu', 'lui/lei', 'noi', 'voi', 'loro'];\nvar tenses = [{\n    slug: 'presentIndicative',\n    name: 'Indicativo Presente',\n    active: true,\n    id: 1\n}, {\n    slug: 'pastIndicative',\n    name: 'Indicativo Passato Prossimo',\n    active: false,\n    id: 2\n}, {\n    slug: 'imperfectIndicative',\n    name: 'Indicativo Imperfetto',\n    active: false,\n    id: 3\n}, {\n    slug: 'pluperfectIndicative',\n    name: 'Indicativo Trapassato Prossimo',\n    active: false,\n    id: 4\n}, {\n    slug: 'pastRemoteIndicative',\n    name: 'Indicativo Passato Remoto',\n    active: false,\n    id: 5\n}, {\n    slug: 'pluperfectRemoteIndicative',\n    name: 'Indicativo Trapassato Remoto',\n    active: false,\n    id: 6\n}, {\n    slug: 'futureIndicative',\n    name: 'Indicativo Futuro Semplice',\n    active: false,\n    id: 7\n}, {\n    slug: 'futurePerfectIndicative',\n    name: 'Indicativo Futuro Anteriore',\n    active: false,\n    id: 8\n}, {\n    slug: 'presentSubjunctive',\n    name: 'Congiuntivo Presente',\n    active: false,\n    id: 9\n}, {\n    slug: 'imperfectSubjunctive',\n    name: 'Congiuntivo Passato',\n    active: false,\n    id: 10\n}, {\n    slug: 'pastSubjunctive',\n    name: 'Congiuntivo Imperfetto',\n    active: false,\n    id: 11\n}, {\n    slug: 'pluperfectSubjunctive',\n    name: 'Congiuntivo Trapassato',\n    active: false,\n    id: 12\n}, {\n    slug: 'presentConditional',\n    name: 'Condizionale Presente',\n    active: false,\n    id: 13\n}, {\n    slug: 'pastConditional',\n    name: 'Condizionale Passate',\n    active: false,\n    id: 14\n}, {\n    slug: 'imperative',\n    name: 'Imperativo',\n    pronouns: [1, 5],\n    active: false,\n    id: 15\n}];\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction clearInput(input) {\n    var fold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var result = input.trim().toLowerCase().replace(/\\s\\s+/g, ' ');\n    if (fold) {\n        result = _foldToAscii2.default.fold(result);\n    }\n    return result;\n}\n\nfunction clearAnswer(answer) {\n    return answer.split(';').map(function (item) {\n        return item.trim();\n    });\n}\n\nvar Form = _react2.default.createClass({\n    displayName: 'Form',\n\n    getInitialState: function getInitialState() {\n        return {\n            is_valid: true,\n            questionPronoun: '',\n            questionVerb: '',\n            questionTense: '',\n            questionAnswer: '',\n            answerIsEmpty: true,\n            result: '',\n            resultText: '',\n            resultAnswer: '',\n            resultTranslate: []\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        this.updateQuestion();\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (this.props.tenses != nextProps.tenses) {\n            this.updateQuestion();\n        }\n    },\n    onFieldChange: function onFieldChange(fieldName, e) {\n        if (this.state[fieldName] != !e.target.value.trim().length) {\n            //noinspection JSCheckFunctionSignatures\n            this.setState(_defineProperty({}, fieldName, !e.target.value.trim().length));\n        }\n    },\n    onSubmitHandler: function onSubmitHandler(e) {\n        e.preventDefault();\n        !this.state.resultText ? this.showAnswer() : this.updateQuestion();\n    },\n    updateQuestion: function updateQuestion() {\n        var _this = this;\n\n        var active_tenses = this.props.tenses.filter(function (item) {\n            return item.active;\n        });\n        if (!active_tenses.length) {\n            //noinspection JSCheckFunctionSignatures\n            this.setState({ is_valid: false });\n            return;\n        }\n        //noinspection JSUnresolvedVariable\n        var random_verb = getRandomInt(0, this.props.verbs.length);\n        var random_tense = getRandomInt(0, active_tenses.length);\n        var tense = active_tenses[random_tense];\n        var random_pronoun = getRandomInt(tense.pronouns ? tense.pronouns[0] : 0, tense.pronouns ? tense.pronouns[1] : pronouns.length);\n        //noinspection JSUnresolvedVariable\n        var verb_obj = this.props.verbs[random_verb];\n        var infinitive = clearInput(verb_obj.verb);\n        var answer = verb_obj[tense.slug][random_pronoun];\n        var translate = [];\n        //noinspection JSUnresolvedVariable\n        this.props.translations.forEach(function (item) {\n            var t = item.data[infinitive];\n            if (t) {\n                translate.push({\n                    lang: item.lang,\n                    name: t\n                });\n            }\n        });\n        var state = {\n            is_valid: true,\n            questionVerb: infinitive.capitalizeFirstLetter(),\n            questionPronoun: pronouns[random_pronoun].capitalizeFirstLetter(),\n            questionTense: tense.name,\n            questionAnswer: clearInput(answer, true),\n            answerIsEmpty: true,\n            result: '',\n            resultText: '',\n            resultAnswer: pronouns[random_pronoun].capitalizeFirstLetter() + ' ' + clearInput(answer),\n            resultTranslate: translate\n        };\n        this.setState(state, function () {\n            var answer_field = _this.inputAnswer;\n            answer_field.value = '';\n            answer_field.focus();\n        });\n    },\n    showAnswer: function showAnswer() {\n        var _this2 = this;\n\n        var answer = clearInput(this.inputAnswer.value, true);\n        if (!answer.length) {\n            return;\n        }\n        var is_right = clearAnswer(this.state.questionAnswer).indexOf(answer) != -1;\n        //noinspection JSCheckFunctionSignatures\n        var state = {\n            result: is_right,\n            resultText: is_right ? 'Yes!' : 'No!'\n        };\n        this.setState(state, function () {\n            return _this2.button.focus();\n        });\n        this.props.update(is_right);\n    },\n    render: function render() {\n        var _this3 = this;\n\n        var translations = this.state.resultTranslate.map(function (item) {\n            //noinspection HtmlUnknownAttribute\n            return _react2.default.createElement(\n                'span',\n                { key: item.lang },\n                _react2.default.createElement(\n                    'span',\n                    { className: 'label' },\n                    item.lang.toUpperCase()\n                ),\n                '\\xA0',\n                item.name,\n                '\\xA0'\n            );\n        });\n        //noinspection HtmlUnknownAttribute,CheckTagEmptyBody\n        return _react2.default.createElement(\n            'div',\n            null,\n            this.state.is_valid && _react2.default.createElement(\n                'form',\n                { className: 'form', onSubmit: this.onSubmitHandler },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'callout' },\n                    _react2.default.createElement(\n                        'p',\n                        { title: 'Pronoun' },\n                        _react2.default.createElement('i', { className: 'fi-torsos-male-female' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            this.state.questionPronoun\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        { title: 'Verb' },\n                        _react2.default.createElement('i', { className: 'fi-foot' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            this.state.questionVerb\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        { title: 'Tense' },\n                        _react2.default.createElement('i', { className: 'fi-clock' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            this.state.questionTense\n                        )\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'input-group' },\n                    _react2.default.createElement('input', {\n                        type: 'text',\n                        className: 'input-group-field',\n                        defaultValue: '',\n                        onChange: this.onFieldChange.bind(this, 'answerIsEmpty'),\n                        placeholder: 'type answer here',\n                        disabled: this.state.resultText,\n                        ref: function ref(input) {\n                            _this3.inputAnswer = input;\n                        },\n                        lang: 'it', autoComplete: 'off', autoCorrect: 'off', autoCapitalize: 'off', spellCheck: 'false' }),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'input-group-button' },\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                className: 'button' + (this.state.resultText ? ' success' : ''),\n                                type: 'submit',\n                                disabled: !this.state.resultText && this.state.answerIsEmpty,\n                                ref: function ref(input) {\n                                    _this3.button = input;\n                                } },\n                            this.state.resultText ? 'Next' : 'Submit'\n                        )\n                    )\n                ),\n                this.state.resultText && _react2.default.createElement(\n                    'div',\n                    { className: 'callout ' + (this.state.result ? 'success' : 'alert') },\n                    _react2.default.createElement(\n                        'p',\n                        { title: 'Result' },\n                        _react2.default.createElement('i', { className: 'fi-' + (this.state.result ? 'check' : 'x') }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            this.state.resultText\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        { title: 'Full answer' },\n                        _react2.default.createElement('i', { className: 'fi-pencil' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            this.state.resultAnswer\n                        )\n                    ),\n                    this.state.resultTranslate && _react2.default.createElement(\n                        'p',\n                        { title: 'Translation' },\n                        translations\n                    )\n                )\n            ),\n            !this.state.is_valid && _react2.default.createElement(\n                'div',\n                { className: 'callout alert' },\n                'Select at least one tense'\n            )\n        );\n    }\n});\n\nvar Counts = _react2.default.createClass({\n    displayName: 'Counts',\n\n    render: function render() {\n        return _react2.default.createElement(\n            'div',\n            { className: 'row' },\n            _react2.default.createElement(\n                'div',\n                { className: 'small-6 columns' },\n                _react2.default.createElement(\n                    'p',\n                    null,\n                    'Right'\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'stat' },\n                    this.props.counts[0]\n                )\n            ),\n            _react2.default.createElement(\n                'div',\n                { className: 'small-6 columns' },\n                _react2.default.createElement(\n                    'p',\n                    null,\n                    'Wrong'\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'stat' },\n                    this.props.counts[1]\n                )\n            )\n        );\n    }\n});\n\nvar Tenses = _react2.default.createClass({\n    displayName: 'Tenses',\n\n    getInitialState: function getInitialState() {\n        return {\n            tenses: false,\n            links: false\n        };\n    },\n    onCheck: function onCheck(e) {\n        this.props.update(e.target.value, e.target.checked);\n    },\n    onToggleTenses: function onToggleTenses(e) {\n        e.preventDefault();\n        //noinspection JSCheckFunctionSignatures\n        this.setState({ tenses: !this.state.tenses });\n    },\n    onChangeVerbs: function onChangeVerbs(params, e) {\n        e.preventDefault();\n        window.location.hash = '#' + params;\n        location.reload();\n    },\n    onToggleResources: function onToggleResources(e) {\n        e.preventDefault();\n        //noinspection JSCheckFunctionSignatures\n        this.setState({ links: !this.state.links });\n    },\n    render: function render() {\n        var _this4 = this;\n\n        var data = this.props.tenses;\n        if (!data) {\n            return null;\n        }\n        var tenses = data.map(function (item) {\n            //noinspection HtmlUnknownAttribute\n            return _react2.default.createElement(\n                'div',\n                { key: item.id },\n                _react2.default.createElement(\n                    'label',\n                    null,\n                    _react2.default.createElement('input', {\n                        type: 'checkbox',\n                        value: item.id,\n                        checked: item.active,\n                        onChange: _this4.onCheck }),\n                    item.name\n                )\n            );\n        });\n        var hash = window.location.hash;\n        //noinspection CheckTagEmptyBody\n        return _react2.default.createElement(\n            'div',\n            { className: 'toggles text-center' },\n            _react2.default.createElement('br', null),\n            _react2.default.createElement(\n                'a',\n                {\n                    className: 'button ' + (this.state.tenses ? 'primary' : 'secondary'),\n                    onClick: this.onToggleTenses },\n                'Select tenses'\n            ),\n            _react2.default.createElement(\n                'a',\n                {\n                    className: 'button ' + (!hash || hash == '#duolingo' ? 'primary' : 'secondary'),\n                    onClick: this.onChangeVerbs.bind(this, 'duolingo') },\n                'Duolingo list'\n            ),\n            _react2.default.createElement(\n                'a',\n                {\n                    className: 'button ' + (hash == '#swadesh' ? 'primary' : 'secondary'),\n                    onClick: this.onChangeVerbs.bind(this, 'swadesh') },\n                'Swadesh list'\n            ),\n            _react2.default.createElement(\n                'a',\n                {\n                    className: 'button ' + (hash == '#short' ? 'primary' : 'secondary'),\n                    onClick: this.onChangeVerbs.bind(this, 'short') },\n                'Short common list'\n            ),\n            _react2.default.createElement(\n                'a',\n                {\n                    href: 'https://github.com/Sinkler/italian-verbs-trainer',\n                    className: 'button secondary' },\n                _react2.default.createElement('i', { className: 'fi-social-github' })\n            ),\n            _react2.default.createElement(\n                'a',\n                {\n                    className: 'button ' + (this.state.links ? 'primary' : 'secondary'),\n                    onClick: this.onToggleResources },\n                _react2.default.createElement('i', { className: 'fi-link' })\n            ),\n            this.state.tenses && _react2.default.createElement(\n                'fieldset',\n                { className: 'fieldset text-left' },\n                _react2.default.createElement(\n                    'legend',\n                    null,\n                    'Select tenses'\n                ),\n                tenses\n            ),\n            this.state.links && _react2.default.createElement(\n                'p',\n                { className: 'links' },\n                _react2.default.createElement(\n                    'a',\n                    { href: 'https://facebook.github.io/react/', target: '_blank' },\n                    'React'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'https://babeljs.io/', target: '_blank' },\n                    'Babel'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'https://webpack.js.org/', target: '_blank' },\n                    'Webpack'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'http://foundation.zurb.com/', target: '_blank' },\n                    'Foundation'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'http://zurb.com/playground/foundation-icon-fonts-3', target: '_blank' },\n                    'Foundation Icon Fonts'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'https://github.com/mplatt/fold-to-ascii-js', target: '_blank' },\n                    'Ascii Folder'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'http://twitter.github.io/twemoji/', target: '_blank' },\n                    'Twemoji'\n                ),\n                _react2.default.createElement(\n                    'a',\n                    { href: 'https://icons8.com', target: '_blank' },\n                    'Icons8'\n                )\n            )\n        );\n    }\n});\n\nvar App = _react2.default.createClass({\n    displayName: 'App',\n\n    componentWillMount: function componentWillMount() {\n        var hash = window.location.hash;\n        if (hash == '#swadesh') {\n            _verbs2.default.verbs = _verbs2.default.verbs.filter(function (item) {\n                return item.is_swadesh;\n            });\n        } else if (hash == '#short') {\n            _verbs2.default.verbs = _verbs2.default.verbs_short;\n        }\n    },\n    getInitialState: function getInitialState() {\n        return {\n            tenses: tenses,\n            counts: [0, 0]\n        };\n    },\n    updateForm: function updateForm(is_right) {\n        var counts = this.state.counts;\n        counts[is_right ? 0 : 1]++;\n        //noinspection JSCheckFunctionSignatures\n        this.setState({ counts: counts });\n    },\n    updateTenses: function updateTenses(id, is_checked) {\n        //noinspection JSCheckFunctionSignatures\n        this.setState({\n            tenses: this.state.tenses.map(function (item) {\n                if (item.id == id) {\n                    item.active = is_checked;\n                }\n                return item;\n            })\n        });\n    },\n    render: function render() {\n        //noinspection JSUnresolvedVariable\n        var flag = twemoji.parse('&#x1f1ee;&#x1f1f9;', { size: 32 });\n        //noinspection CheckTagEmptyBody,HtmlUnknownAttribute\n        return _react2.default.createElement(\n            'div',\n            { className: 'row' },\n            _react2.default.createElement(\n                'div',\n                { className: 'small-12 large-7 large-centered columns' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'text-center' },\n                    _react2.default.createElement(\n                        'h1',\n                        null,\n                        _react2.default.createElement('span', { dangerouslySetInnerHTML: { __html: flag } }),\n                        ' Italian Verbs Trainer'\n                    )\n                ),\n                _react2.default.createElement(Form, {\n                    verbs: _verbs2.default.verbs,\n                    translations: _verbs2.default.translations,\n                    tenses: this.state.tenses,\n                    update: this.updateForm }),\n                _react2.default.createElement(Counts, {\n                    counts: this.state.counts }),\n                _react2.default.createElement(Tenses, {\n                    tenses: this.state.tenses,\n                    update: this.updateTenses })\n            )\n        );\n    }\n});\n\nexports.default = App;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/app.jsx\n// module id = 83\n// module chunks = 0\n//# sourceURL=webpack:///./src/js/app.jsx?")},function(module,exports){eval('"use strict";Object.defineProperty(exports,"__esModule",{value:true});var verbs_short=[{"futurePerfectIndicative":["avr\\xF2 amato","avrai amato","avr\\xE0 amato","avremo amato","avrete amato","avranno amato"],"presentSubjunctive":["ami","ami","ami","amiamo","amiate","amino"],"pastRemoteIndicative":["amai","amasti","am\\xF2","amammo","amaste","amarono"],"pluperfectIndicative":["avevo amato","avevi amato","aveva amato","avevamo amato","avevate amato","avevano amato"],"imperfectSubjunctive":["abbia amato","abbia amato","abbia amato","abbiamo amato","abbiate amato","abbiano amato"],"pastConditional":["avrei amato","avresti amato","avrebbe amato","avremmo amato","avreste amato","avrebbero amato"],"pastSubjunctive":["amassi","amassi","amasse","amassimo","amaste","amassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi amato","avessi amato","avesse amato","avessimo amato","aveste amato","avessero amato"],"imperfectIndicative":["amavo","amavi","amava","amavamo","amavate","amavano"],"pluperfectRemoteIndicative":["ebbi amato","avesti amato","ebbe amato","avemmo amato","aveste amato","ebbero amato"],"verb":"amare","imperative":["ama","ami","amiamo","amate","amino"],"presentIndicative":["amo","ami","ama","amiamo","amate","amano"],"presentConditional":["amerei","ameresti","amerebbe","ameremmo","amereste","amerebbero"],"impersonalForms":["amare","amante","amando","amato","avere amato","avendo amato","avente amato"],"pastIndicative":["ho amato","hai amato","ha amato","abbiamo amato","avete amato","hanno amato"],"futureIndicative":["amer\\xF2","amerai","amer\\xE0","ameremo","amerete","ameranno"]},{"futurePerfectIndicative":["sar\\xF2 andato","sarai andato","sar\\xE0 andato","saremo andati","sarete andati","saranno andati"],"presentSubjunctive":["vada","vada","vada","andiamo","andiate","vadano"],"pastRemoteIndicative":["andai","andasti","and\\xF2","andammo","andaste","andarono"],"pluperfectIndicative":["ero andato","eri andato","era andato","eravamo andati","eravate andati","erano andati"],"imperfectSubjunctive":["sia andato","sia andato","sia andato","siamo andati","siate andati","siano andati"],"pastConditional":["sarei andato","saresti andato","sarebbe andato","saremmo andati","sareste andati","sarebbero andati"],"pastSubjunctive":["andassi","andassi","andasse","andassimo","andaste","andassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi andato","fossi andato","fosse andato","fossimo andati","foste andati","fossero andati"],"imperfectIndicative":["andavo","andavi","andava","andavamo","andavate","andavano"],"pluperfectRemoteIndicative":["fui andato","fosti andato","fu andato","fummo andati","foste andati","furono andati"],"verb":"andare","imperative":["va\'; vai","vada","andiamo","andate","vadano"],"presentIndicative":["vado; vo","vai","va","andiamo","andate","vanno"],"presentConditional":["andrei","andresti","andrebbe","andremmo","andreste","andrebbero"],"impersonalForms":["andare","andante","andando","andato","essere andato","essendo andato","essente andato"],"pastIndicative":["sono andato","sei andato","\\xE8 andato","siamo andati","siete andati","sono andati"],"futureIndicative":["andr\\xF2","andrai","andr\\xE0","andremo","andrete","andranno"]},{"futurePerfectIndicative":["sar\\xF2 apparito; apparso","sarai apparito; apparso","sar\\xE0 apparito; apparso","saremo apparito; apparsi","sarete apparito; apparsi","saranno apparito; apparsi"],"presentSubjunctive":["appaia; apparisca","appaia; apparisca","appaia; apparisca","appariamo","appariate","appaiano; appariscano"],"pastRemoteIndicative":["apparii; apparvi; apparsi","apparisti","appar\\xEC; apparve; apparse","apparimmo","appariste","apparirono; apparvero; apparsero"],"pluperfectIndicative":["ero apparito; apparso","eri apparito; apparso","era apparito; apparso","eravamo apparito; apparsi","eravate apparito; apparsi","erano apparito; apparsi"],"imperfectSubjunctive":["sia apparito; apparso","sia apparito; apparso","sia apparito; apparso","siamo apparito; apparsi","siate apparito; apparsi","siano apparito; apparsi"],"pastConditional":["sarei apparito; apparso","saresti apparito; apparso","sarebbe apparito; apparso","saremmo apparito; apparsi","sareste apparito; apparsi","sarebbero apparito; apparsi"],"pastSubjunctive":["apparissi","apparissi","apparisse","apparissimo","appariste","apparissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi apparito; apparso","fossi apparito; apparso","fosse apparito; apparso","fossimo apparito; apparsi","foste apparito; apparsi","fossero apparito; apparsi"],"imperfectIndicative":["apparivo","apparivi","appariva","apparivamo","apparivate","apparivano"],"pluperfectRemoteIndicative":["fui apparito; apparso","fosti apparito; apparso","fu apparito; apparso","fummo apparito; apparsi","foste apparito; apparsi","furono apparito; apparsi"],"verb":"apparire","imperative":["appari; apparisci","appaia; apparisca","appariamo","apparite","appaiano; appariscano"],"presentIndicative":["appaio; apparisco","appari; apparisci","appare; apparisce","appariamo","apparite","appaiono; appariscono"],"presentConditional":["apparirei; apparrei","appariresti; apparresti","apparirebbe; apparrebbe","appariremmo; apparremmo","apparireste; apparreste","apparirebbero; apparrebbero"],"impersonalForms":["apparire","apparente","apparendo","apparito; apparso","essere apparito; apparso","essendo apparito; apparso","essente apparito; apparso"],"pastIndicative":["sono apparito; apparso","sei apparito; apparso","\\xE8 apparito; apparso","siamo apparito; apparsi","siete apparito; apparsi","sono apparito; apparsi"],"futureIndicative":["apparir\\xF2; apparr\\xF2","apparirai; apparrai","apparir\\xE0; apparr\\xE0","appariremo; apparremo","apparirete; apparrete","appariranno; apparranno"]},{"futurePerfectIndicative":["avr\\xF2 aperto","avrai aperto","avr\\xE0 aperto","avremo aperto","avrete aperto","avranno aperto"],"presentSubjunctive":["apra","apra","apra","apriamo","apriate","aprano"],"pastRemoteIndicative":["aprii; apersi","apristi","apr\\xEC; aperse","aprimmo","apriste","aprirono; apersero"],"pluperfectIndicative":["avevo aperto","avevi aperto","aveva aperto","avevamo aperto","avevate aperto","avevano aperto"],"imperfectSubjunctive":["abbia aperto","abbia aperto","abbia aperto","abbiamo aperto","abbiate aperto","abbiano aperto"],"pastConditional":["avrei aperto","avresti aperto","avrebbe aperto","avremmo aperto","avreste aperto","avrebbero aperto"],"pastSubjunctive":["aprissi","aprissi","aprisse","aprissimo","apriste","aprissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi aperto","avessi aperto","avesse aperto","avessimo aperto","aveste aperto","avessero aperto"],"imperfectIndicative":["aprivo","aprivi","apriva","aprivamo","aprivate","aprivano"],"pluperfectRemoteIndicative":["ebbi aperto","avesti aperto","ebbe aperto","avemmo aperto","aveste aperto","ebbero aperto"],"verb":"aprire","imperative":["apri","apra","apriamo","aprite","aprano"],"presentIndicative":["apro","apri","apre","apriamo","aprite","aprono"],"presentConditional":["aprirei","apriresti","aprirebbe","apriremmo","aprireste","aprirebbero"],"impersonalForms":["aprire","aprente","aprendo","aperto","avere aperto","avendo aperto","avente aperto"],"pastIndicative":["ho aperto","hai aperto","ha aperto","abbiamo aperto","avete aperto","hanno aperto"],"futureIndicative":["aprir\\xF2","aprirai","aprir\\xE0","apriremo","aprirete","apriranno"]},{"futurePerfectIndicative":["avr\\xF2 avuto","avrai avuto","avr\\xE0 avuto","avremo avuto","avrete avuto","avranno avuto"],"presentSubjunctive":["abbia","abbia","abbia","abbiamo","abbiate","abbiano"],"pastRemoteIndicative":["ebbi","avesti","ebbe","avemmo","aveste","ebbero"],"pluperfectIndicative":["avevo avuto","avevi avuto","aveva avuto","avevamo avuto","avevate avuto","avevano avuto"],"imperfectSubjunctive":["abbia avuto","abbia avuto","abbia avuto","abbiamo avuto","abbiate avuto","abbiano avuto"],"pastConditional":["avrei avuto","avresti avuto","avrebbe avuto","avremmo avuto","avreste avuto","avrebbero avuto"],"pastSubjunctive":["avessi","avessi","avesse","avessimo","aveste","avessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi avuto","avessi avuto","avesse avuto","avessimo avuto","aveste avuto","avessero avuto"],"imperfectIndicative":["avevo","avevi","aveva","avevamo","avevate","avevano"],"pluperfectRemoteIndicative":["ebbi avuto","avesti avuto","ebbe avuto","avemmo avuto","aveste avuto","ebbero avuto"],"verb":"avere","imperative":["abbi","abbia","abbiamo","abbiate","abbiano"],"presentIndicative":["ho","hai","ha","abbiamo","avete","hanno"],"presentConditional":["avrei","avresti","avrebbe","avremmo","avreste","avrebbero"],"impersonalForms":["avere","avente","avendo","avuto","avere avuto","avendo avuto","avente avuto"],"pastIndicative":["ho avuto","hai avuto","ha avuto","abbiamo avuto","avete avuto","hanno avuto"],"futureIndicative":["avr\\xF2","avrai","avr\\xE0","avremo","avrete","avranno"]},{"futurePerfectIndicative":["avr\\xF2 avvertito","avrai avvertito","avr\\xE0 avvertito","avremo avvertito","avrete avvertito","avranno avvertito"],"presentSubjunctive":["avverta","avverta","avverta","avvertiamo","avvertiate","avvertano"],"pastRemoteIndicative":["avvertii","avvertisti","avvert\\xEC","avvertimmo","avvertiste","avvertirono"],"pluperfectIndicative":["avevo avvertito","avevi avvertito","aveva avvertito","avevamo avvertito","avevate avvertito","avevano avvertito"],"imperfectSubjunctive":["abbia avvertito","abbia avvertito","abbia avvertito","abbiamo avvertito","abbiate avvertito","abbiano avvertito"],"pastConditional":["avrei avvertito","avresti avvertito","avrebbe avvertito","avremmo avvertito","avreste avvertito","avrebbero avvertito"],"pastSubjunctive":["avvertissi","avvertissi","avvertisse","avvertissimo","avvertiste","avvertissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi avvertito","avessi avvertito","avesse avvertito","avessimo avvertito","aveste avvertito","avessero avvertito"],"imperfectIndicative":["avvertivo","avvertivi","avvertiva","avvertivamo","avvertivate","avvertivano"],"pluperfectRemoteIndicative":["ebbi avvertito","avesti avvertito","ebbe avvertito","avemmo avvertito","aveste avvertito","ebbero avvertito"],"verb":"avvertire","imperative":["avverti","avverta","avvertiamo","avvertite","avvertano"],"presentIndicative":["avverto","avverti","avverte","avvertiamo","avvertite","avvertono"],"presentConditional":["avvertirei","avvertiresti","avvertirebbe","avvertiremmo","avvertireste","avvertirebbero"],"impersonalForms":["avvertire","avvertente","avvertendo","avvertito","avere avvertito","avendo avvertito","avente avvertito"],"pastIndicative":["ho avvertito","hai avvertito","ha avvertito","abbiamo avvertito","avete avvertito","hanno avvertito"],"futureIndicative":["avvertir\\xF2","avvertirai","avvertir\\xE0","avvertiremo","avvertirete","avvertiranno"]},{"futurePerfectIndicative":["avr\\xF2 bevuto","avrai bevuto","avr\\xE0 bevuto","avremo bevuto","avrete bevuto","avranno bevuto"],"presentSubjunctive":["beva","beva","beva","beviamo","beviate","bevano"],"pastRemoteIndicative":["bevvi; bevetti","bevesti","bevve; bevette","bevemmo","beveste","bevvero; bevettero"],"pluperfectIndicative":["avevo bevuto","avevi bevuto","aveva bevuto","avevamo bevuto","avevate bevuto","avevano bevuto"],"imperfectSubjunctive":["abbia bevuto","abbia bevuto","abbia bevuto","abbiamo bevuto","abbiate bevuto","abbiano bevuto"],"pastConditional":["avrei bevuto","avresti bevuto","avrebbe bevuto","avremmo bevuto","avreste bevuto","avrebbero bevuto"],"pastSubjunctive":["bevessi","bevessi","bevesse","bevessimo","beveste","bevessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi bevuto","avessi bevuto","avesse bevuto","avessimo bevuto","aveste bevuto","avessero bevuto"],"imperfectIndicative":["bevevo","bevevi","beveva","bevevamo","bevevate","bevevano"],"pluperfectRemoteIndicative":["ebbi bevuto","avesti bevuto","ebbe bevuto","avemmo bevuto","aveste bevuto","ebbero bevuto"],"verb":"bere","imperative":["bevi","beva","beviamo","bevete","bevano"],"presentIndicative":["bevo","bevi","beve","beviamo","bevete","bevono"],"presentConditional":["berrei","berresti","berrebbe","berremmo","berreste","berrebbero"],"impersonalForms":["bere; bevere","bevente","bevendo","bevuto","avere bevuto","avendo bevuto","avente bevuto"],"pastIndicative":["ho bevuto","hai bevuto","ha bevuto","abbiamo bevuto","avete bevuto","hanno bevuto"],"futureIndicative":["berr\\xF2","berrai","berr\\xE0","berremo","berrete","berranno"]},{"futurePerfectIndicative":["avr\\xF2 bollito","avrai bollito","avr\\xE0 bollito","avremo bollito","avrete bollito","avranno bollito"],"presentSubjunctive":["bollisca","bollisca","bollisca","bolliamo","bolliate","bolliscano"],"pastRemoteIndicative":["bollii","bollisti","boll\\xEC","bollimmo","bolliste","bollirono"],"pluperfectIndicative":["avevo bollito","avevi bollito","aveva bollito","avevamo bollito","avevate bollito","avevano bollito"],"imperfectSubjunctive":["abbia bollito","abbia bollito","abbia bollito","abbiamo bollito","abbiate bollito","abbiano bollito"],"pastConditional":["avrei bollito","avresti bollito","avrebbe bollito","avremmo bollito","avreste bollito","avrebbero bollito"],"pastSubjunctive":["bollissi","bollissi","bollisse","bollissimo","bolliste","bollissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi bollito","avessi bollito","avesse bollito","avessimo bollito","aveste bollito","avessero bollito"],"imperfectIndicative":["bollivo","bollivi","bolliva","bollivamo","bollivate","bollivano"],"pluperfectRemoteIndicative":["ebbi bollito","avesti bollito","ebbe bollito","avemmo bollito","aveste bollito","ebbero bollito"],"verb":"bollire","imperative":["bollisci","bollisca","bolliamo","bollite","bolliscano"],"presentIndicative":["bollisco","bollisci","bollisce","bolliamo","bollite","bolliscono"],"presentConditional":["bollirei","bolliresti","bollirebbe","bolliremmo","bollireste","bollirebbero"],"impersonalForms":["bollire","bollente","bollendo","bollito","avere bollito","avendo bollito","avente bollito"],"pastIndicative":["ho bollito","hai bollito","ha bollito","abbiamo bollito","avete bollito","hanno bollito"],"futureIndicative":["bollir\\xF2","bollirai","bollir\\xE0","bolliremo","bollirete","bolliranno"]},{"futurePerfectIndicative":["sar\\xF2 caduto","sarai caduto","sar\\xE0 caduto","saremo caduti","sarete caduti","saranno caduti"],"presentSubjunctive":["cada","cada","cada","cadiamo","cadiate","cadano"],"pastRemoteIndicative":["caddi","cadesti","cadde","cademmo","cadeste","caddero"],"pluperfectIndicative":["ero caduto","eri caduto","era caduto","eravamo caduti","eravate caduti","erano caduti"],"imperfectSubjunctive":["sia caduto","sia caduto","sia caduto","siamo caduti","siate caduti","siano caduti"],"pastConditional":["sarei caduto","saresti caduto","sarebbe caduto","saremmo caduti","sareste caduti","sarebbero caduti"],"pastSubjunctive":["cadessi","cadessi","cadesse","cadessimo","cadeste","cadessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi caduto","fossi caduto","fosse caduto","fossimo caduti","foste caduti","fossero caduti"],"imperfectIndicative":["cadevo","cadevi","cadeva","cadevamo","cadevate","cadevano"],"pluperfectRemoteIndicative":["fui caduto","fosti caduto","fu caduto","fummo caduti","foste caduti","furono caduti"],"verb":"cadere","imperative":["cadi","cada","cadiamo","cadete","cadano"],"presentIndicative":["cado","cadi","cade","cadiamo","cadete","cadono"],"presentConditional":["cadrei","cadresti","cadrebbe","cadremmo","cadreste","cadrebbero"],"impersonalForms":["cadere","cadente","cadendo","caduto","essere caduto","essendo caduto","essente caduto"],"pastIndicative":["sono caduto","sei caduto","\\xE8 caduto","siamo caduti","siete caduti","sono caduti"],"futureIndicative":["cadr\\xF2","cadrai","cadr\\xE0","cadremo","cadrete","cadranno"]},{"futurePerfectIndicative":["avr\\xF2 capito","avrai capito","avr\\xE0 capito","avremo capito","avrete capito","avranno capito"],"presentSubjunctive":["capisca","capisca","capisca","capiamo","capiate","capiscano"],"pastRemoteIndicative":["capii","capisti","cap\\xEC","capimmo","capiste","capirono"],"pluperfectIndicative":["avevo capito","avevi capito","aveva capito","avevamo capito","avevate capito","avevano capito"],"imperfectSubjunctive":["abbia capito","abbia capito","abbia capito","abbiamo capito","abbiate capito","abbiano capito"],"pastConditional":["avrei capito","avresti capito","avrebbe capito","avremmo capito","avreste capito","avrebbero capito"],"pastSubjunctive":["capissi","capissi","capisse","capissimo","capiste","capissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi capito","avessi capito","avesse capito","avessimo capito","aveste capito","avessero capito"],"imperfectIndicative":["capivo","capivi","capiva","capivamo","capivate","capivano"],"pluperfectRemoteIndicative":["ebbi capito","avesti capito","ebbe capito","avemmo capito","aveste capito","ebbero capito"],"verb":"capire","imperative":["capisci","capisca","capiamo","capite","capiscano"],"presentIndicative":["capisco","capisci","capisce","capiamo","capite","capiscono"],"presentConditional":["capirei","capiresti","capirebbe","capiremmo","capireste","capirebbero"],"impersonalForms":["capire","capente","capendo","capito","avere capito","avendo capito","avente capito"],"pastIndicative":["ho capito","hai capito","ha capito","abbiamo capito","avete capito","hanno capito"],"futureIndicative":["capir\\xF2","capirai","capir\\xE0","capiremo","capirete","capiranno"]},{"futurePerfectIndicative":["avr\\xF2 ceduto; cesso","avrai ceduto; cesso","avr\\xE0 ceduto; cesso","avremo ceduto; cesso","avrete ceduto; cesso","avranno ceduto; cesso"],"presentSubjunctive":["ceda","ceda","ceda","cediamo","cediate","cedano"],"pastRemoteIndicative":["cessi; cedei; cedetti","cedesti","cesse; ced\\xE9; cedette","cedemmo","cedeste","cessero; cederono; cedettero"],"pluperfectIndicative":["avevo ceduto; cesso","avevi ceduto; cesso","aveva ceduto; cesso","avevamo ceduto; cesso","avevate ceduto; cesso","avevano ceduto; cesso"],"imperfectSubjunctive":["abbia ceduto; cesso","abbia ceduto; cesso","abbia ceduto; cesso","abbiamo ceduto; cesso","abbiate ceduto; cesso","abbiano ceduto; cesso"],"pastConditional":["avrei ceduto; cesso","avresti ceduto; cesso","avrebbe ceduto; cesso","avremmo ceduto; cesso","avreste ceduto; cesso","avrebbero ceduto; cesso"],"pastSubjunctive":["cedessi","cedessi","cedesse","cedessimo","cedeste","cedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ceduto; cesso","avessi ceduto; cesso","avesse ceduto; cesso","avessimo ceduto; cesso","aveste ceduto; cesso","avessero ceduto; cesso"],"imperfectIndicative":["cedevo","cedevi","cedeva","cedevamo","cedevate","cedevano"],"pluperfectRemoteIndicative":["ebbi ceduto; cesso","avesti ceduto; cesso","ebbe ceduto; cesso","avemmo ceduto; cesso","aveste ceduto; cesso","ebbero ceduto; cesso"],"verb":"cedere","imperative":["cedi","ceda","cediamo","cedete","cedano"],"presentIndicative":["cedo","cedi","cede","cediamo","cedete","cedono"],"presentConditional":["cederei","cederesti","cederebbe","cederemmo","cedereste","cederebbero"],"impersonalForms":["cedere","cedente","cedendo","ceduto; cesso","avere ceduto; cesso","avendo ceduto; cesso","avente ceduto; cesso"],"pastIndicative":["ho ceduto; cesso","hai ceduto; cesso","ha ceduto; cesso","abbiamo ceduto; cesso","avete ceduto; cesso","hanno ceduto; cesso"],"futureIndicative":["ceder\\xF2","cederai","ceder\\xE0","cederemo","cederete","cederanno"]},{"futurePerfectIndicative":["avr\\xF2 cercato","avrai cercato","avr\\xE0 cercato","avremo cercato","avrete cercato","avranno cercato"],"presentSubjunctive":["cerchi","cerchi","cerchi","cerchiamo","cerchiate","cerchino"],"pastRemoteIndicative":["cercai","cercasti","cerc\\xF2","cercammo","cercaste","cercarono"],"pluperfectIndicative":["avevo cercato","avevi cercato","aveva cercato","avevamo cercato","avevate cercato","avevano cercato"],"imperfectSubjunctive":["abbia cercato","abbia cercato","abbia cercato","abbiamo cercato","abbiate cercato","abbiano cercato"],"pastConditional":["avrei cercato","avresti cercato","avrebbe cercato","avremmo cercato","avreste cercato","avrebbero cercato"],"pastSubjunctive":["cercassi","cercassi","cercasse","cercassimo","cercaste","cercassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cercato","avessi cercato","avesse cercato","avessimo cercato","aveste cercato","avessero cercato"],"imperfectIndicative":["cercavo","cercavi","cercava","cercavamo","cercavate","cercavano"],"pluperfectRemoteIndicative":["ebbi cercato","avesti cercato","ebbe cercato","avemmo cercato","aveste cercato","ebbero cercato"],"verb":"cercare","imperative":["cerca","cerchi","cerchiamo","cercate","cerchino"],"presentIndicative":["cerco","cerchi","cerca","cerchiamo","cercate","cercano"],"presentConditional":["cercherei","cercheresti","cercherebbe","cercheremmo","cerchereste","cercherebbero"],"impersonalForms":["cercare","cercante","cercando","cercato","avere cercato","avendo cercato","avente cercato"],"pastIndicative":["ho cercato","hai cercato","ha cercato","abbiamo cercato","avete cercato","hanno cercato"],"futureIndicative":["cercher\\xF2","cercherai","cercher\\xE0","cercheremo","cercherete","cercheranno"]},{"futurePerfectIndicative":["avr\\xF2 chiesto","avrai chiesto","avr\\xE0 chiesto","avremo chiesto","avrete chiesto","avranno chiesto"],"presentSubjunctive":["chieda","chieda","chieda","chiediamo","chiediate","chiedano"],"pastRemoteIndicative":["chiesi","chiedesti","chiese","chiedemmo","chiedeste","chiesero"],"pluperfectIndicative":["avevo chiesto","avevi chiesto","aveva chiesto","avevamo chiesto","avevate chiesto","avevano chiesto"],"imperfectSubjunctive":["abbia chiesto","abbia chiesto","abbia chiesto","abbiamo chiesto","abbiate chiesto","abbiano chiesto"],"pastConditional":["avrei chiesto","avresti chiesto","avrebbe chiesto","avremmo chiesto","avreste chiesto","avrebbero chiesto"],"pastSubjunctive":["chiedessi","chiedessi","chiedesse","chiedessimo","chiedeste","chiedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi chiesto","avessi chiesto","avesse chiesto","avessimo chiesto","aveste chiesto","avessero chiesto"],"imperfectIndicative":["chiedevo","chiedevi","chiedeva","chiedevamo","chiedevate","chiedevano"],"pluperfectRemoteIndicative":["ebbi chiesto","avesti chiesto","ebbe chiesto","avemmo chiesto","aveste chiesto","ebbero chiesto"],"verb":"chiedere","imperative":["chiedi","chieda","chiediamo","chiedete","chiedano"],"presentIndicative":["chiedo","chiedi","chiede","chiediamo","chiedete","chiedono"],"presentConditional":["chiederei","chiederesti","chiederebbe","chiederemmo","chiedereste","chiederebbero"],"impersonalForms":["chiedere","chiedente","chiedendo","chiesto","avere chiesto","avendo chiesto","avente chiesto"],"pastIndicative":["ho chiesto","hai chiesto","ha chiesto","abbiamo chiesto","avete chiesto","hanno chiesto"],"futureIndicative":["chieder\\xF2","chiederai","chieder\\xE0","chiederemo","chiederete","chiederanno"]},{"futurePerfectIndicative":["avr\\xF2 chiuso","avrai chiuso","avr\\xE0 chiuso","avremo chiuso","avrete chiuso","avranno chiuso"],"presentSubjunctive":["chiuda","chiuda","chiuda","chiudiamo","chiudiate","chiudano"],"pastRemoteIndicative":["chiusi","chiudesti","chiuse","chiudemmo","chiudeste","chiusero"],"pluperfectIndicative":["avevo chiuso","avevi chiuso","aveva chiuso","avevamo chiuso","avevate chiuso","avevano chiuso"],"imperfectSubjunctive":["abbia chiuso","abbia chiuso","abbia chiuso","abbiamo chiuso","abbiate chiuso","abbiano chiuso"],"pastConditional":["avrei chiuso","avresti chiuso","avrebbe chiuso","avremmo chiuso","avreste chiuso","avrebbero chiuso"],"pastSubjunctive":["chiudessi","chiudessi","chiudesse","chiudessimo","chiudeste","chiudessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi chiuso","avessi chiuso","avesse chiuso","avessimo chiuso","aveste chiuso","avessero chiuso"],"imperfectIndicative":["chiudevo","chiudevi","chiudeva","chiudevamo","chiudevate","chiudevano"],"pluperfectRemoteIndicative":["ebbi chiuso","avesti chiuso","ebbe chiuso","avemmo chiuso","aveste chiuso","ebbero chiuso"],"verb":"chiudere","imperative":["chiudi","chiuda","chiudiamo","chiudete","chiudano"],"presentIndicative":["chiudo","chiudi","chiude","chiudiamo","chiudete","chiudono"],"presentConditional":["chiuderei","chiuderesti","chiuderebbe","chiuderemmo","chiudereste","chiuderebbero"],"impersonalForms":["chiudere","chiudente","chiudendo","chiuso","avere chiuso","avendo chiuso","avente chiuso"],"pastIndicative":["ho chiuso","hai chiuso","ha chiuso","abbiamo chiuso","avete chiuso","hanno chiuso"],"futureIndicative":["chiuder\\xF2","chiuderai","chiuder\\xE0","chiuderemo","chiuderete","chiuderanno"]},{"futurePerfectIndicative":["avr\\xF2 cominciato; sar\\xF2 cominciato","avrai cominciato; sarai cominciato","avr\\xE0 cominciato; sar\\xE0 cominciato","avremo cominciato; saremo cominciati","avrete cominciato; sarete cominciati","avranno cominciato; saranno cominciati"],"presentSubjunctive":["cominci","cominci","cominci","cominciamo","cominciate","comincino"],"pastRemoteIndicative":["cominciai","cominciasti","cominci\\xF2","cominciammo","cominciaste","cominciarono"],"pluperfectIndicative":["avevo cominciato; ero cominciato","avevi cominciato; eri cominciato","aveva cominciato; era cominciato","avevamo cominciato; eravamo cominciati","avevate cominciato; eravate cominciati","avevano cominciato; erano cominciati"],"imperfectSubjunctive":["abbia cominciato; sia cominciato","abbia cominciato; sia cominciato","abbia cominciato; sia cominciato","abbiamo cominciato; siamo cominciati","abbiate cominciato; siate cominciati","abbiano cominciato; siano cominciati"],"pastConditional":["avrei cominciato; sarei cominciato","avresti cominciato; saresti cominciato","avrebbe cominciato; sarebbe cominciato","avremmo cominciato; saremmo cominciati","avreste cominciato; sareste cominciati","avrebbero cominciato; sarebbero cominciati"],"pastSubjunctive":["cominciassi","cominciassi","cominciasse","cominciassimo","cominciaste","cominciassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cominciato; fossi cominciato","avessi cominciato; fossi cominciato","avesse cominciato; fosse cominciato","avessimo cominciato; fossimo cominciati","aveste cominciato; foste cominciati","avessero cominciato; fossero cominciati"],"imperfectIndicative":["cominciavo","cominciavi","cominciava","cominciavamo","cominciavate","cominciavano"],"pluperfectRemoteIndicative":["ebbi cominciato; fui cominciato","avesti cominciato; fosti cominciato","ebbe cominciato; fu cominciato","avemmo cominciato; fummo cominciati","aveste cominciato; foste cominciati","ebbero cominciato; furono cominciati"],"verb":"cominciare","imperative":["comincia","cominci","cominciamo","cominciate","comincino"],"presentIndicative":["comincio","cominci","comincia","cominciamo","cominciate","cominciano"],"presentConditional":["comincerei","cominceresti","comincerebbe","cominceremmo","comincereste","comincerebbero"],"impersonalForms":["cominciare","cominciante","cominciando","cominciato","avere cominciato; essere cominciato","avendo cominciato; essendo cominciato","avente cominciato; essente cominciato"],"pastIndicative":["ho cominciato; sono cominciato","hai cominciato; sei cominciato","ha cominciato; \\xE8 cominciato","abbiamo cominciato; siamo cominciati","avete cominciato; siete cominciati","hanno cominciato; sono cominciati"],"futureIndicative":["comincer\\xF2","comincerai","comincer\\xE0","cominceremo","comincerete","cominceranno"]},{"futurePerfectIndicative":["avr\\xF2 conosciuto","avrai conosciuto","avr\\xE0 conosciuto","avremo conosciuto","avrete conosciuto","avranno conosciuto"],"presentSubjunctive":["conosca","conosca","conosca","conosciamo","conosciate","conoscano"],"pastRemoteIndicative":["conobbi","conoscesti","conobbe","conoscemmo","conosceste","conobbero"],"pluperfectIndicative":["avevo conosciuto","avevi conosciuto","aveva conosciuto","avevamo conosciuto","avevate conosciuto","avevano conosciuto"],"imperfectSubjunctive":["abbia conosciuto","abbia conosciuto","abbia conosciuto","abbiamo conosciuto","abbiate conosciuto","abbiano conosciuto"],"pastConditional":["avrei conosciuto","avresti conosciuto","avrebbe conosciuto","avremmo conosciuto","avreste conosciuto","avrebbero conosciuto"],"pastSubjunctive":["conoscessi","conoscessi","conoscesse","conoscessimo","conosceste","conoscessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi conosciuto","avessi conosciuto","avesse conosciuto","avessimo conosciuto","aveste conosciuto","avessero conosciuto"],"imperfectIndicative":["conoscevo","conoscevi","conosceva","conoscevamo","conoscevate","conoscevano"],"pluperfectRemoteIndicative":["ebbi conosciuto","avesti conosciuto","ebbe conosciuto","avemmo conosciuto","aveste conosciuto","ebbero conosciuto"],"verb":"conoscere","imperative":["conosci","conosca","conosciamo","conoscete","conoscano"],"presentIndicative":["conosco","conosci","conosce","conosciamo","conoscete","conoscono"],"presentConditional":["conoscerei","conosceresti","conoscerebbe","conosceremmo","conoscereste","conoscerebbero"],"impersonalForms":["conoscere","conoscente","conoscendo","conosciuto","avere conosciuto","avendo conosciuto","avente conosciuto"],"pastIndicative":["ho conosciuto","hai conosciuto","ha conosciuto","abbiamo conosciuto","avete conosciuto","hanno conosciuto"],"futureIndicative":["conoscer\\xF2","conoscerai","conoscer\\xE0","conosceremo","conoscerete","conosceranno"]},{"futurePerfectIndicative":["avr\\xF2 consumato","avrai consumato","avr\\xE0 consumato","avremo consumato","avrete consumato","avranno consumato"],"presentSubjunctive":["consumi","consumi","consumi","consumiamo","consumiate","consumino"],"pastRemoteIndicative":["consumai","consumasti","consum\\xF2","consumammo","consumaste","consumarono"],"pluperfectIndicative":["avevo consumato","avevi consumato","aveva consumato","avevamo consumato","avevate consumato","avevano consumato"],"imperfectSubjunctive":["abbia consumato","abbia consumato","abbia consumato","abbiamo consumato","abbiate consumato","abbiano consumato"],"pastConditional":["avrei consumato","avresti consumato","avrebbe consumato","avremmo consumato","avreste consumato","avrebbero consumato"],"pastSubjunctive":["consumassi","consumassi","consumasse","consumassimo","consumaste","consumassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi consumato","avessi consumato","avesse consumato","avessimo consumato","aveste consumato","avessero consumato"],"imperfectIndicative":["consumavo","consumavi","consumava","consumavamo","consumavate","consumavano"],"pluperfectRemoteIndicative":["ebbi consumato","avesti consumato","ebbe consumato","avemmo consumato","aveste consumato","ebbero consumato"],"verb":"consumare","imperative":["consuma","consumi","consumiamo","consumate","consumino"],"presentIndicative":["consumo","consumi","consuma","consumiamo","consumate","consumano"],"presentConditional":["consumerei","consumeresti","consumerebbe","consumeremmo","consumereste","consumerebbero"],"impersonalForms":["consumare","consumante","consumando","consumato","avere consumato","avendo consumato","avente consumato"],"pastIndicative":["ho consumato","hai consumato","ha consumato","abbiamo consumato","avete consumato","hanno consumato"],"futureIndicative":["consumer\\xF2","consumerai","consumer\\xE0","consumeremo","consumerete","consumeranno"]},{"futurePerfectIndicative":["avr\\xF2 corso; sar\\xF2 corso","avrai corso; sarai corso","avr\\xE0 corso; sar\\xE0 corso","avremo corso; saremo corsi","avrete corso; sarete corsi","avranno corso; saranno corsi"],"presentSubjunctive":["corra","corra","corra","corriamo","corriate","corrano"],"pastRemoteIndicative":["corsi","corresti","corse","corremmo","correste","corsero"],"pluperfectIndicative":["avevo corso; ero corso","avevi corso; eri corso","aveva corso; era corso","avevamo corso; eravamo corsi","avevate corso; eravate corsi","avevano corso; erano corsi"],"imperfectSubjunctive":["abbia corso; sia corso","abbia corso; sia corso","abbia corso; sia corso","abbiamo corso; siamo corsi","abbiate corso; siate corsi","abbiano corso; siano corsi"],"pastConditional":["avrei corso; sarei corso","avresti corso; saresti corso","avrebbe corso; sarebbe corso","avremmo corso; saremmo corsi","avreste corso; sareste corsi","avrebbero corso; sarebbero corsi"],"pastSubjunctive":["corressi","corressi","corresse","corressimo","correste","corressero"],"similarVerbs":"","pluperfectSubjunctive":["avessi corso; fossi corso","avessi corso; fossi corso","avesse corso; fosse corso","avessimo corso; fossimo corsi","aveste corso; foste corsi","avessero corso; fossero corsi"],"imperfectIndicative":["correvo","correvi","correva","correvamo","correvate","correvano"],"pluperfectRemoteIndicative":["ebbi corso; fui corso","avesti corso; fosti corso","ebbe corso; fu corso","avemmo corso; fummo corsi","aveste corso; foste corsi","ebbero corso; furono corsi"],"verb":"correre","imperative":["corri","corra","corriamo","correte","corrano"],"presentIndicative":["corro","corri","corre","corriamo","correte","corrono"],"presentConditional":["correrei","correresti","correrebbe","correremmo","correreste","correrebbero"],"impersonalForms":["correre","corrente","correndo","corso","avere corso; essere corso","avendo corso; essendo corso","avente corso; essente corso"],"pastIndicative":["ho corso; sono corso","hai corso; sei corso","ha corso; \\xE8 corso","abbiamo corso; siamo corsi","avete corso; siete corsi","hanno corso; sono corsi"],"futureIndicative":["correr\\xF2","correrai","correr\\xE0","correremo","correrete","correranno"]},{"futurePerfectIndicative":["avr\\xF2 costruito","avrai costruito","avr\\xE0 costruito","avremo costruito","avrete costruito","avranno costruito"],"presentSubjunctive":["costruisca","costruisca","costruisca","costruiamo","costruiate","costruiscano"],"pastRemoteIndicative":["costrussi; costruii","costruisti","costrusse; costru\\xEC","costruimmo","costruiste","costrussero; costruirono"],"pluperfectIndicative":["avevo costruito","avevi costruito","aveva costruito","avevamo costruito","avevate costruito","avevano costruito"],"imperfectSubjunctive":["abbia costruito","abbia costruito","abbia costruito","abbiamo costruito","abbiate costruito","abbiano costruito"],"pastConditional":["avrei costruito","avresti costruito","avrebbe costruito","avremmo costruito","avreste costruito","avrebbero costruito"],"pastSubjunctive":["costruissi","costruissi","costruisse","costruissimo","costruiste","costruissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi costruito","avessi costruito","avesse costruito","avessimo costruito","aveste costruito","avessero costruito"],"imperfectIndicative":["costruivo","costruivi","costruiva","costruivamo","costruivate","costruivano"],"pluperfectRemoteIndicative":["ebbi costruito","avesti costruito","ebbe costruito","avemmo costruito","aveste costruito","ebbero costruito"],"verb":"costruire","imperative":["costruisci","costruisca","costruiamo","costruite","costruiscano"],"presentIndicative":["costruisco","costruisci","costruisce","costruiamo","costruite","costruiscono"],"presentConditional":["costruirei","costruiresti","costruirebbe","costruiremmo","costruireste","costruirebbero"],"impersonalForms":["costruire","costruente","costruendo","costruito; costrutto","avere costruito","avendo costruito","avente costruito"],"pastIndicative":["ho costruito","hai costruito","ha costruito","abbiamo costruito","avete costruito","hanno costruito"],"futureIndicative":["costruir\\xF2","costruirai","costruir\\xE0","costruiremo","costruirete","costruiranno"]},{"futurePerfectIndicative":["avr\\xF2 creduto","avrai creduto","avr\\xE0 creduto","avremo creduto","avrete creduto","avranno creduto"],"presentSubjunctive":["creda","creda","creda","crediamo","crediate","credano"],"pastRemoteIndicative":["credei; credetti","credesti","cred\\xE9; credette","credemmo","credeste","crederono; credettero"],"pluperfectIndicative":["avevo creduto","avevi creduto","aveva creduto","avevamo creduto","avevate creduto","avevano creduto"],"imperfectSubjunctive":["abbia creduto","abbia creduto","abbia creduto","abbiamo creduto","abbiate creduto","abbiano creduto"],"pastConditional":["avrei creduto","avresti creduto","avrebbe creduto","avremmo creduto","avreste creduto","avrebbero creduto"],"pastSubjunctive":["credessi","credessi","credesse","credessimo","credeste","credessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi creduto","avessi creduto","avesse creduto","avessimo creduto","aveste creduto","avessero creduto"],"imperfectIndicative":["credevo","credevi","credeva","credevamo","credevate","credevano"],"pluperfectRemoteIndicative":["ebbi creduto","avesti creduto","ebbe creduto","avemmo creduto","aveste creduto","ebbero creduto"],"verb":"credere","imperative":["credi","creda","crediamo","credete","credano"],"presentIndicative":["credo","credi","crede","crediamo","credete","credono"],"presentConditional":["crederei","crederesti","crederebbe","crederemmo","credereste","crederebbero"],"impersonalForms":["credere","credente","credendo","creduto","avere creduto","avendo creduto","avente creduto"],"pastIndicative":["ho creduto","hai creduto","ha creduto","abbiamo creduto","avete creduto","hanno creduto"],"futureIndicative":["creder\\xF2","crederai","creder\\xE0","crederemo","crederete","crederanno"]},{"futurePerfectIndicative":["sar\\xF2 cresciuto","sarai cresciuto","sar\\xE0 cresciuto","saremo cresciuti","sarete cresciuti","saranno cresciuti"],"presentSubjunctive":["cresca","cresca","cresca","cresciamo","cresciate","crescano"],"pastRemoteIndicative":["crebbi","crescesti","crebbe","crescemmo","cresceste","crebbero"],"pluperfectIndicative":["ero cresciuto","eri cresciuto","era cresciuto","eravamo cresciuti","eravate cresciuti","erano cresciuti"],"imperfectSubjunctive":["sia cresciuto","sia cresciuto","sia cresciuto","siamo cresciuti","siate cresciuti","siano cresciuti"],"pastConditional":["sarei cresciuto","saresti cresciuto","sarebbe cresciuto","saremmo cresciuti","sareste cresciuti","sarebbero cresciuti"],"pastSubjunctive":["crescessi","crescessi","crescesse","crescessimo","cresceste","crescessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi cresciuto","fossi cresciuto","fosse cresciuto","fossimo cresciuti","foste cresciuti","fossero cresciuti"],"imperfectIndicative":["crescevo","crescevi","cresceva","crescevamo","crescevate","crescevano"],"pluperfectRemoteIndicative":["fui cresciuto","fosti cresciuto","fu cresciuto","fummo cresciuti","foste cresciuti","furono cresciuti"],"verb":"crescere","imperative":["cresci","cresca","cresciamo","crescete","crescano"],"presentIndicative":["cresco","cresci","cresce","cresciamo","crescete","crescono"],"presentConditional":["crescerei","cresceresti","crescerebbe","cresceremmo","crescereste","crescerebbero"],"impersonalForms":["crescere","crescente","crescendo","cresciuto","essere cresciuto","essendo cresciuto","essente cresciuto"],"pastIndicative":["sono cresciuto","sei cresciuto","\\xE8 cresciuto","siamo cresciuti","siete cresciuti","sono cresciuti"],"futureIndicative":["crescer\\xF2","crescerai","crescer\\xE0","cresceremo","crescerete","cresceranno"]},{"futurePerfectIndicative":["avr\\xF2 cucito","avrai cucito","avr\\xE0 cucito","avremo cucito","avrete cucito","avranno cucito"],"presentSubjunctive":["cucia","cucia","cucia","cuciamo","cuciate","cuciano"],"pastRemoteIndicative":["cucii","cucisti","cuc\\xEC","cucimmo","cuciste","cucirono"],"pluperfectIndicative":["avevo cucito","avevi cucito","aveva cucito","avevamo cucito","avevate cucito","avevano cucito"],"imperfectSubjunctive":["abbia cucito","abbia cucito","abbia cucito","abbiamo cucito","abbiate cucito","abbiano cucito"],"pastConditional":["avrei cucito","avresti cucito","avrebbe cucito","avremmo cucito","avreste cucito","avrebbero cucito"],"pastSubjunctive":["cucissi","cucissi","cucisse","cucissimo","cuciste","cucissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cucito","avessi cucito","avesse cucito","avessimo cucito","aveste cucito","avessero cucito"],"imperfectIndicative":["cucivo","cucivi","cuciva","cucivamo","cucivate","cucivano"],"pluperfectRemoteIndicative":["ebbi cucito","avesti cucito","ebbe cucito","avemmo cucito","aveste cucito","ebbero cucito"],"verb":"cucire","imperative":["cuci","cucia","cuciamo","cucite","cuciano"],"presentIndicative":["cucio","cuci","cuce","cuciamo","cucite","cuciono"],"presentConditional":["cucirei","cuciresti","cucirebbe","cuciremmo","cucireste","cucirebbero"],"impersonalForms":["cucire","cucente","cucendo","cucito","avere cucito","avendo cucito","avente cucito"],"pastIndicative":["ho cucito","hai cucito","ha cucito","abbiamo cucito","avete cucito","hanno cucito"],"futureIndicative":["cucir\\xF2","cucirai","cucir\\xE0","cuciremo","cucirete","cuciranno"]},{"futurePerfectIndicative":["avr\\xF2 dato","avrai dato","avr\\xE0 dato","avremo dato","avrete dato","avranno dato"],"presentSubjunctive":["dia","dia","dia","diamo","diate","diano"],"pastRemoteIndicative":["diedi; detti","desti","diede; dette; d\\xE8tte","demmo","deste","diedero; dettero"],"pluperfectIndicative":["avevo dato","avevi dato","aveva dato","avevamo dato","avevate dato","avevano dato"],"imperfectSubjunctive":["abbia dato","abbia dato","abbia dato","abbiamo dato","abbiate dato","abbiano dato"],"pastConditional":["avrei dato","avresti dato","avrebbe dato","avremmo dato","avreste dato","avrebbero dato"],"pastSubjunctive":["dessi","dessi","desse","dessimo","deste","dessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dato","avessi dato","avesse dato","avessimo dato","aveste dato","avessero dato"],"imperfectIndicative":["davo","davi","dava","davamo","davate","davano"],"pluperfectRemoteIndicative":["ebbi dato","avesti dato","ebbe dato","avemmo dato","aveste dato","ebbero dato"],"verb":"dare","imperative":["da\'; dai","dia","diamo","date","diano"],"presentIndicative":["do","dai","d\\xE0","diamo","date","d\\xE0nno"],"presentConditional":["darei","daresti","darebbe","daremmo","dareste","darebbero"],"impersonalForms":["dare","dante","dando","dato","avere dato","avendo dato","avente dato"],"pastIndicative":["ho dato","hai dato","ha dato","abbiamo dato","avete dato","hanno dato"],"futureIndicative":["dar\\xF2","darai","dar\\xE0","daremo","darete","daranno"]},{"futurePerfectIndicative":["avr\\xF2 detto","avrai detto","avr\\xE0 detto","avremo detto","avrete detto","avranno detto"],"presentSubjunctive":["dica","dica","dica","diciamo","diciate","dicano"],"pastRemoteIndicative":["dissi","dicesti","disse","dicemmo","diceste","dissero"],"pluperfectIndicative":["avevo detto","avevi detto","aveva detto","avevamo detto","avevate detto","avevano detto"],"imperfectSubjunctive":["abbia detto","abbia detto","abbia detto","abbiamo detto","abbiate detto","abbiano detto"],"pastConditional":["avrei detto","avresti detto","avrebbe detto","avremmo detto","avreste detto","avrebbero detto"],"pastSubjunctive":["dicessi","dicessi","dicesse","dicessimo","diceste","dicessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi detto","avessi detto","avesse detto","avessimo detto","aveste detto","avessero detto"],"imperfectIndicative":["dicevo","dicevi","diceva","dicevamo","dicevate","dicevano"],"pluperfectRemoteIndicative":["ebbi detto","avesti detto","ebbe detto","avemmo detto","aveste detto","ebbero detto"],"verb":"dire","imperative":["di\'","dica","diciamo","dite","dicano"],"presentIndicative":["dico","dici","dice","diciamo","dite","dicono"],"presentConditional":["direi","diresti","direbbe","diremmo","direste","direbbero"],"impersonalForms":["dire","dicente","dicendo","detto","avere detto","avendo detto","avente detto"],"pastIndicative":["ho detto","hai detto","ha detto","abbiamo detto","avete detto","hanno detto"],"futureIndicative":["dir\\xF2","dirai","dir\\xE0","diremo","direte","diranno"]},{"futurePerfectIndicative":["avr\\xF2 diretto","avrai diretto","avr\\xE0 diretto","avremo diretto","avrete diretto","avranno diretto"],"presentSubjunctive":["diriga","diriga","diriga","dirigiamo","dirigiate","dirigano"],"pastRemoteIndicative":["diressi","dirigesti","diresse","dirigemmo","dirigeste","diressero"],"pluperfectIndicative":["avevo diretto","avevi diretto","aveva diretto","avevamo diretto","avevate diretto","avevano diretto"],"imperfectSubjunctive":["abbia diretto","abbia diretto","abbia diretto","abbiamo diretto","abbiate diretto","abbiano diretto"],"pastConditional":["avrei diretto","avresti diretto","avrebbe diretto","avremmo diretto","avreste diretto","avrebbero diretto"],"pastSubjunctive":["dirigessi","dirigessi","dirigesse","dirigessimo","dirigeste","dirigessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi diretto","avessi diretto","avesse diretto","avessimo diretto","aveste diretto","avessero diretto"],"imperfectIndicative":["dirigevo","dirigevi","dirigeva","dirigevamo","dirigevate","dirigevano"],"pluperfectRemoteIndicative":["ebbi diretto","avesti diretto","ebbe diretto","avemmo diretto","aveste diretto","ebbero diretto"],"verb":"dirigere","imperative":["dirigi","diriga","dirigiamo","dirigete","dirigano"],"presentIndicative":["dirigo","dirigi","dirige","dirigiamo","dirigete","dirigono"],"presentConditional":["dirigerei","dirigeresti","dirigerebbe","dirigeremmo","dirigereste","dirigerebbero"],"impersonalForms":["dirigere","dirigente","dirigendo","diretto","avere diretto","avendo diretto","avente diretto"],"pastIndicative":["ho diretto","hai diretto","ha diretto","abbiamo diretto","avete diretto","hanno diretto"],"futureIndicative":["diriger\\xF2","dirigerai","diriger\\xE0","dirigeremo","dirigerete","dirigeranno"]},{"futurePerfectIndicative":["avr\\xF2 discusso","avrai discusso","avr\\xE0 discusso","avremo discusso","avrete discusso","avranno discusso"],"presentSubjunctive":["discuta","discuta","discuta","discutiamo","discutiate","discutano"],"pastRemoteIndicative":["discussi; discutei","discutesti","discusse; discut\\xE9","discutemmo","discuteste","discussero; discuterono"],"pluperfectIndicative":["avevo discusso","avevi discusso","aveva discusso","avevamo discusso","avevate discusso","avevano discusso"],"imperfectSubjunctive":["abbia discusso","abbia discusso","abbia discusso","abbiamo discusso","abbiate discusso","abbiano discusso"],"pastConditional":["avrei discusso","avresti discusso","avrebbe discusso","avremmo discusso","avreste discusso","avrebbero discusso"],"pastSubjunctive":["discutessi","discutessi","discutesse","discutessimo","discuteste","discutessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi discusso","avessi discusso","avesse discusso","avessimo discusso","aveste discusso","avessero discusso"],"imperfectIndicative":["discutevo","discutevi","discuteva","discutevamo","discutevate","discutevano"],"pluperfectRemoteIndicative":["ebbi discusso","avesti discusso","ebbe discusso","avemmo discusso","aveste discusso","ebbero discusso"],"verb":"discutere","imperative":["discuti","discuta","discutiamo","discutete","discutano"],"presentIndicative":["discuto","discuti","discute","discutiamo","discutete","discutono"],"presentConditional":["discuterei","discuteresti","discuterebbe","discuteremmo","discutereste","discuterebbero"],"impersonalForms":["discutere","discutente","discutendo","discusso","avere discusso","avendo discusso","avente discusso"],"pastIndicative":["ho discusso","hai discusso","ha discusso","abbiamo discusso","avete discusso","hanno discusso"],"futureIndicative":["discuter\\xF2","discuterai","discuter\\xE0","discuteremo","discuterete","discuteranno"]},{"futurePerfectIndicative":["avr\\xF2 doluto","avrai doluto","avr\\xE0 doluto","avremo doluto","avrete doluto","avranno doluto"],"presentSubjunctive":["dolga","dolga","dolga","doliamo; dogliamo","doliate; dogliate","dolgano"],"pastRemoteIndicative":["dolsi","dolesti","dolse","dolemmo","doleste","dolsero"],"pluperfectIndicative":["avevo doluto","avevi doluto","aveva doluto","avevamo doluto","avevate doluto","avevano doluto"],"imperfectSubjunctive":["abbia doluto","abbia doluto","abbia doluto","abbiamo doluto","abbiate doluto","abbiano doluto"],"pastConditional":["avrei doluto","avresti doluto","avrebbe doluto","avremmo doluto","avreste doluto","avrebbero doluto"],"pastSubjunctive":["dolessi","dolessi","dolesse","dolessimo","doleste","dolessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi doluto","avessi doluto","avesse doluto","avessimo doluto","aveste doluto","avessero doluto"],"imperfectIndicative":["dolevo","dolevi","doleva","dolevamo","dolevate","dolevano"],"pluperfectRemoteIndicative":["ebbi doluto","avesti doluto","ebbe doluto","avemmo doluto","aveste doluto","ebbero doluto"],"verb":"dolere","imperative":["duoli","dolga","doliamo; dogliamo","dolete","dolgano"],"presentIndicative":["dolgo","duoli","duole","doliamo; dogliamo","dolete","dolgono"],"presentConditional":["dorrei","dorresti","dorrebbe","dorremmo","dorreste","dorrebbero"],"impersonalForms":["dolere","dolente","dolendo","doluto","avere doluto","avendo doluto","avente doluto"],"pastIndicative":["ho doluto","hai doluto","ha doluto","abbiamo doluto","avete doluto","hanno doluto"],"futureIndicative":["dorr\\xF2","dorrai","dorr\\xE0","dorremo","dorrete","dorranno"]},{"futurePerfectIndicative":["avr\\xF2 dormito","avrai dormito","avr\\xE0 dormito","avremo dormito","avrete dormito","avranno dormito"],"presentSubjunctive":["dorma","dorma","dorma","dormiamo","dormiate","dormano"],"pastRemoteIndicative":["dormii","dormisti","dorm\\xEC","dormimmo","dormiste","dormirono"],"pluperfectIndicative":["avevo dormito","avevi dormito","aveva dormito","avevamo dormito","avevate dormito","avevano dormito"],"imperfectSubjunctive":["abbia dormito","abbia dormito","abbia dormito","abbiamo dormito","abbiate dormito","abbiano dormito"],"pastConditional":["avrei dormito","avresti dormito","avrebbe dormito","avremmo dormito","avreste dormito","avrebbero dormito"],"pastSubjunctive":["dormissi","dormissi","dormisse","dormissimo","dormiste","dormissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dormito","avessi dormito","avesse dormito","avessimo dormito","aveste dormito","avessero dormito"],"imperfectIndicative":["dormivo","dormivi","dormiva","dormivamo","dormivate","dormivano"],"pluperfectRemoteIndicative":["ebbi dormito","avesti dormito","ebbe dormito","avemmo dormito","aveste dormito","ebbero dormito"],"verb":"dormire","imperative":["dormi","dorma","dormiamo","dormite","dormano"],"presentIndicative":["dormo","dormi","dorme","dormiamo","dormite","dormono"],"presentConditional":["dormirei","dormiresti","dormirebbe","dormiremmo","dormireste","dormirebbero"],"impersonalForms":["dormire","dormente","dormendo","dormito","avere dormito","avendo dormito","avente dormito"],"pastIndicative":["ho dormito","hai dormito","ha dormito","abbiamo dormito","avete dormito","hanno dormito"],"futureIndicative":["dormir\\xF2","dormirai","dormir\\xE0","dormiremo","dormirete","dormiranno"]},{"futurePerfectIndicative":["avr\\xF2 dovuto","avrai dovuto","avr\\xE0 dovuto","avremo dovuto","avrete dovuto","avranno dovuto"],"presentSubjunctive":["debba","debba","debba","dobbiamo","dobbiate","debbano"],"pastRemoteIndicative":["dovei; dovetti","dovesti","dov\\xE9; dovette","dovemmo","doveste","doverono; dovettero"],"pluperfectIndicative":["avevo dovuto","avevi dovuto","aveva dovuto","avevamo dovuto","avevate dovuto","avevano dovuto"],"imperfectSubjunctive":["abbia dovuto","abbia dovuto","abbia dovuto","abbiamo dovuto","abbiate dovuto","abbiano dovuto"],"pastConditional":["avrei dovuto","avresti dovuto","avrebbe dovuto","avremmo dovuto","avreste dovuto","avrebbero dovuto"],"pastSubjunctive":["dovessi","dovessi","dovesse","dovessimo","doveste","dovessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dovuto","avessi dovuto","avesse dovuto","avessimo dovuto","aveste dovuto","avessero dovuto"],"imperfectIndicative":["dovevo","dovevi","doveva","dovevamo","dovevate","dovevano"],"pluperfectRemoteIndicative":["ebbi dovuto","avesti dovuto","ebbe dovuto","avemmo dovuto","aveste dovuto","ebbero dovuto"],"verb":"dovere","imperative":["devi","debba","dobbiamo","dovete","debbano"],"presentIndicative":["devo; debbo","devi","deve","dobbiamo","dovete","devono; debbono"],"presentConditional":["dovrei","dovresti","dovrebbe","dovremmo","dovreste","dovrebbero"],"impersonalForms":["dovere","dovente","dovendo","dovuto","avere dovuto","avendo dovuto","avente dovuto"],"pastIndicative":["ho dovuto","hai dovuto","ha dovuto","abbiamo dovuto","avete dovuto","hanno dovuto"],"futureIndicative":["dovr\\xF2","dovrai","dovr\\xE0","dovremo","dovrete","dovranno"]},{"futurePerfectIndicative":["sar\\xF2 entrato","sarai entrato","sar\\xE0 entrato","saremo entrati","sarete entrati","saranno entrati"],"presentSubjunctive":["entri","entri","entri","entriamo","entriate","entrino"],"pastRemoteIndicative":["entrai","entrasti","entr\\xF2","entrammo","entraste","entrarono"],"pluperfectIndicative":["ero entrato","eri entrato","era entrato","eravamo entrati","eravate entrati","erano entrati"],"imperfectSubjunctive":["sia entrato","sia entrato","sia entrato","siamo entrati","siate entrati","siano entrati"],"pastConditional":["sarei entrato","saresti entrato","sarebbe entrato","saremmo entrati","sareste entrati","sarebbero entrati"],"pastSubjunctive":["entrassi","entrassi","entrasse","entrassimo","entraste","entrassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi entrato","fossi entrato","fosse entrato","fossimo entrati","foste entrati","fossero entrati"],"imperfectIndicative":["entravo","entravi","entrava","entravamo","entravate","entravano"],"pluperfectRemoteIndicative":["fui entrato","fosti entrato","fu entrato","fummo entrati","foste entrati","furono entrati"],"verb":"entrare","imperative":["entra","entri","entriamo","entrate","entrino"],"presentIndicative":["entro","entri","entra","entriamo","entrate","entrano"],"presentConditional":["entrerei","entreresti","entrerebbe","entreremmo","entrereste","entrerebbero"],"impersonalForms":["entrare","entrante","entrando","entrato","essere entrato","essendo entrato","essente entrato"],"pastIndicative":["sono entrato","sei entrato","\\xE8 entrato","siamo entrati","siete entrati","sono entrati"],"futureIndicative":["entrer\\xF2","entrerai","entrer\\xE0","entreremo","entrerete","entreranno"]},{"futurePerfectIndicative":["avr\\xF2 esatto","avrai esatto","avr\\xE0 esatto","avremo esatto","avrete esatto","avranno esatto"],"presentSubjunctive":["esiga","esiga","esiga","esigiamo","esigiate","esigano"],"pastRemoteIndicative":["esigei; esigetti","esigesti","esig\\xE9; esigette","esigemmo","esigeste","esigerono; esigettero"],"pluperfectIndicative":["avevo esatto","avevi esatto","aveva esatto","avevamo esatto","avevate esatto","avevano esatto"],"imperfectSubjunctive":["abbia esatto","abbia esatto","abbia esatto","abbiamo esatto","abbiate esatto","abbiano esatto"],"pastConditional":["avrei esatto","avresti esatto","avrebbe esatto","avremmo esatto","avreste esatto","avrebbero esatto"],"pastSubjunctive":["esigessi","esigessi","esigesse","esigessimo","esigeste","esigessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi esatto","avessi esatto","avesse esatto","avessimo esatto","aveste esatto","avessero esatto"],"imperfectIndicative":["esigevo","esigevi","esigeva","esigevamo","esigevate","esigevano"],"pluperfectRemoteIndicative":["ebbi esatto","avesti esatto","ebbe esatto","avemmo esatto","aveste esatto","ebbero esatto"],"verb":"esigere","imperative":["esigi","esiga","esigiamo","esigete","esigano"],"presentIndicative":["esigo","esigi","esige","esigiamo","esigete","esigono"],"presentConditional":["esigerei","esigeresti","esigerebbe","esigeremmo","esigereste","esigerebbero"],"impersonalForms":["esigere","esigente","esigendo","esatto","avere esatto","avendo esatto","avente esatto"],"pastIndicative":["ho esatto","hai esatto","ha esatto","abbiamo esatto","avete esatto","hanno esatto"],"futureIndicative":["esiger\\xF2","esigerai","esiger\\xE0","esigeremo","esigerete","esigeranno"]},{"futurePerfectIndicative":["sar\\xF2 stato","sarai stato","sar\\xE0 stato","saremo stati","sarete stati","saranno stati"],"presentSubjunctive":["sia","sia","sia","siamo","siate","siano"],"pastRemoteIndicative":["fui","fosti","fu","fummo","foste","furono"],"pluperfectIndicative":["ero stato","eri stato","era stato","eravamo stati","eravate stati","erano stati"],"imperfectSubjunctive":["sia stato","sia stato","sia stato","siamo stati","siate stati","siano stati"],"pastConditional":["sarei stato","saresti stato","sarebbe stato","saremmo stati","sareste stati","sarebbero stati"],"pastSubjunctive":["fossi","fossi","fosse","fossimo","foste","fossero"],"similarVerbs":"","pluperfectSubjunctive":["fossi stato","fossi stato","fosse stato","fossimo stati","foste stati","fossero stati"],"imperfectIndicative":["ero","eri","era","eravamo","eravate","erano"],"pluperfectRemoteIndicative":["fui stato","fosti stato","fu stato","fummo stati","foste stati","furono stati"],"verb":"essere","imperative":["sii","sia","siamo","siate","siano"],"presentIndicative":["sono","sei","\\xE8","siamo","siete","sono"],"presentConditional":["sarei","saresti","sarebbe","saremmo","sareste","sarebbero"],"impersonalForms":["essere","essente","essendo","stato","essere stato","essendo stato","essente stato"],"pastIndicative":["sono stato","sei stato","\\xE8 stato","siamo stati","siete stati","sono stati"],"futureIndicative":["sar\\xF2","sarai","sar\\xE0","saremo","sarete","saranno"]},{"futurePerfectIndicative":["avr\\xF2 fatto","avrai fatto","avr\\xE0 fatto","avremo fatto","avrete fatto","avranno fatto"],"presentSubjunctive":["faccia","faccia","faccia","facciamo","facciate","facciano"],"pastRemoteIndicative":["feci","facesti","fece","facemmo","faceste","fecero"],"pluperfectIndicative":["avevo fatto","avevi fatto","aveva fatto","avevamo fatto","avevate fatto","avevano fatto"],"imperfectSubjunctive":["abbia fatto","abbia fatto","abbia fatto","abbiamo fatto","abbiate fatto","abbiano fatto"],"pastConditional":["avrei fatto","avresti fatto","avrebbe fatto","avremmo fatto","avreste fatto","avrebbero fatto"],"pastSubjunctive":["facessi","facessi","facesse","facessimo","faceste","facessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fatto","avessi fatto","avesse fatto","avessimo fatto","aveste fatto","avessero fatto"],"imperfectIndicative":["facevo","facevi","faceva","facevamo","facevate","facevano"],"pluperfectRemoteIndicative":["ebbi fatto","avesti fatto","ebbe fatto","avemmo fatto","aveste fatto","ebbero fatto"],"verb":"fare","imperative":["fa\'; fai","faccia","facciamo","fate","facciano"],"presentIndicative":["faccio","fai","fa","facciamo","fate","fanno"],"presentConditional":["farei","faresti","farebbe","faremmo","fareste","farebbero"],"impersonalForms":["fare","facente","facendo","fatto","avere fatto","avendo fatto","avente fatto"],"pastIndicative":["ho fatto","hai fatto","ha fatto","abbiamo fatto","avete fatto","hanno fatto"],"futureIndicative":["far\\xF2","farai","far\\xE0","faremo","farete","faranno"]},{"futurePerfectIndicative":["avr\\xF2 finito; sar\\xF2 finito","avrai finito; sarai finito","avr\\xE0 finito; sar\\xE0 finito","avremo finito; saremo finiti","avrete finito; sarete finiti","avranno finito; saranno finiti"],"presentSubjunctive":["finisca","finisca","finisca","finiamo","finiate","finiscano"],"pastRemoteIndicative":["finii","finisti","fin\\xEC","finimmo","finiste","finirono"],"pluperfectIndicative":["avevo finito; ero finito","avevi finito; eri finito","aveva finito; era finito","avevamo finito; eravamo finiti","avevate finito; eravate finiti","avevano finito; erano finiti"],"imperfectSubjunctive":["abbia finito; sia finito","abbia finito; sia finito","abbia finito; sia finito","abbiamo finito; siamo finiti","abbiate finito; siate finiti","abbiano finito; siano finiti"],"pastConditional":["avrei finito; sarei finito","avresti finito; saresti finito","avrebbe finito; sarebbe finito","avremmo finito; saremmo finiti","avreste finito; sareste finiti","avrebbero finito; sarebbero finiti"],"pastSubjunctive":["finissi","finissi","finisse","finissimo","finiste","finissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi finito; fossi finito","avessi finito; fossi finito","avesse finito; fosse finito","avessimo finito; fossimo finiti","aveste finito; foste finiti","avessero finito; fossero finiti"],"imperfectIndicative":["finivo","finivi","finiva","finivamo","finivate","finivano"],"pluperfectRemoteIndicative":["ebbi finito; fui finito","avesti finito; fosti finito","ebbe finito; fu finito","avemmo finito; fummo finiti","aveste finito; foste finiti","ebbero finito; furono finiti"],"verb":"finire","imperative":["finisci","finisca","finiamo","finite","finiscano"],"presentIndicative":["finisco","finisci","finisce","finiamo","finite","finiscono"],"presentConditional":["finirei","finiresti","finirebbe","finiremmo","finireste","finirebbero"],"impersonalForms":["finire","finente","finendo","finito","avere finito; essere finito","avendo finito; essendo finito","avente finito; essente finito"],"pastIndicative":["ho finito; sono finito","hai finito; sei finito","ha finito; \\xE8 finito","abbiamo finito; siamo finiti","avete finito; siete finiti","hanno finito; sono finiti"],"futureIndicative":["finir\\xF2","finirai","finir\\xE0","finiremo","finirete","finiranno"]},{"futurePerfectIndicative":["avr\\xF2 fuggito; sar\\xF2 fuggito","avrai fuggito; sarai fuggito","avr\\xE0 fuggito; sar\\xE0 fuggito","avremo fuggito; saremo fuggiti","avrete fuggito; sarete fuggiti","avranno fuggito; saranno fuggiti"],"presentSubjunctive":["fugga","fugga","fugga","fuggiamo","fuggiate","fuggano"],"pastRemoteIndicative":["fuggii","fuggisti","fugg\\xEC","fuggimmo","fuggiste","fuggirono"],"pluperfectIndicative":["avevo fuggito; ero fuggito","avevi fuggito; eri fuggito","aveva fuggito; era fuggito","avevamo fuggito; eravamo fuggiti","avevate fuggito; eravate fuggiti","avevano fuggito; erano fuggiti"],"imperfectSubjunctive":["abbia fuggito; sia fuggito","abbia fuggito; sia fuggito","abbia fuggito; sia fuggito","abbiamo fuggito; siamo fuggiti","abbiate fuggito; siate fuggiti","abbiano fuggito; siano fuggiti"],"pastConditional":["avrei fuggito; sarei fuggito","avresti fuggito; saresti fuggito","avrebbe fuggito; sarebbe fuggito","avremmo fuggito; saremmo fuggiti","avreste fuggito; sareste fuggiti","avrebbero fuggito; sarebbero fuggiti"],"pastSubjunctive":["fuggissi","fuggissi","fuggisse","fuggissimo","fuggiste","fuggissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fuggito; fossi fuggito","avessi fuggito; fossi fuggito","avesse fuggito; fosse fuggito","avessimo fuggito; fossimo fuggiti","aveste fuggito; foste fuggiti","avessero fuggito; fossero fuggiti"],"imperfectIndicative":["fuggivo","fuggivi","fuggiva","fuggivamo","fuggivate","fuggivano"],"pluperfectRemoteIndicative":["ebbi fuggito; fui fuggito","avesti fuggito; fosti fuggito","ebbe fuggito; fu fuggito","avemmo fuggito; fummo fuggiti","aveste fuggito; foste fuggiti","ebbero fuggito; furono fuggiti"],"verb":"fuggire","imperative":["fuggi","fugga","fuggiamo","fuggite","fuggano"],"presentIndicative":["fuggo","fuggi","fugge","fuggiamo","fuggite","fuggono"],"presentConditional":["fuggirei","fuggiresti","fuggirebbe","fuggiremmo","fuggireste","fuggirebbero"],"impersonalForms":["fuggire","fuggente","fuggendo","fuggito","avere fuggito; essere fuggito","avendo fuggito; essendo fuggito","avente fuggito; essente fuggito"],"pastIndicative":["ho fuggito; sono fuggito","hai fuggito; sei fuggito","ha fuggito; \\xE8 fuggito","abbiamo fuggito; siamo fuggiti","avete fuggito; siete fuggiti","hanno fuggito; sono fuggiti"],"futureIndicative":["fuggir\\xF2","fuggirai","fuggir\\xE0","fuggiremo","fuggirete","fuggiranno"]},{"futurePerfectIndicative":["avr\\xF2 giocato","avrai giocato","avr\\xE0 giocato","avremo giocato","avrete giocato","avranno giocato"],"presentSubjunctive":["giochi","giochi","giochi","giochiamo","giochiate","giochino"],"pastRemoteIndicative":["giocai","giocasti","gioc\\xF2","giocammo","giocaste","giocarono"],"pluperfectIndicative":["avevo giocato","avevi giocato","aveva giocato","avevamo giocato","avevate giocato","avevano giocato"],"imperfectSubjunctive":["abbia giocato","abbia giocato","abbia giocato","abbiamo giocato","abbiate giocato","abbiano giocato"],"pastConditional":["avrei giocato","avresti giocato","avrebbe giocato","avremmo giocato","avreste giocato","avrebbero giocato"],"pastSubjunctive":["giocassi","giocassi","giocasse","giocassimo","giocaste","giocassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi giocato","avessi giocato","avesse giocato","avessimo giocato","aveste giocato","avessero giocato"],"imperfectIndicative":["giocavo","giocavi","giocava","giocavamo","giocavate","giocavano"],"pluperfectRemoteIndicative":["ebbi giocato","avesti giocato","ebbe giocato","avemmo giocato","aveste giocato","ebbero giocato"],"verb":"giocare","imperative":["gioca","giochi","giochiamo","giocate","giochino"],"presentIndicative":["gioco","giochi","gioca","giochiamo","giocate","giocano"],"presentConditional":["giocherei","giocheresti","giocherebbe","giocheremmo","giochereste","giocherebbero"],"impersonalForms":["giocare","giocante","giocando","giocato","avere giocato","avendo giocato","avente giocato"],"pastIndicative":["ho giocato","hai giocato","ha giocato","abbiamo giocato","avete giocato","hanno giocato"],"futureIndicative":["giocher\\xF2","giocherai","giocher\\xE0","giocheremo","giocherete","giocheranno"]},{"futurePerfectIndicative":["avr\\xF2 goduto","avrai goduto","avr\\xE0 goduto","avremo goduto","avrete goduto","avranno goduto"],"presentSubjunctive":["goda","goda","goda","godiamo","godiate","godano"],"pastRemoteIndicative":["godei; godetti","godesti","god\\xE9; godette","godemmo","godeste","goderono; godettero"],"pluperfectIndicative":["avevo goduto","avevi goduto","aveva goduto","avevamo goduto","avevate goduto","avevano goduto"],"imperfectSubjunctive":["abbia goduto","abbia goduto","abbia goduto","abbiamo goduto","abbiate goduto","abbiano goduto"],"pastConditional":["avrei goduto","avresti goduto","avrebbe goduto","avremmo goduto","avreste goduto","avrebbero goduto"],"pastSubjunctive":["godessi","godessi","godesse","godessimo","godeste","godessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi goduto","avessi goduto","avesse goduto","avessimo goduto","aveste goduto","avessero goduto"],"imperfectIndicative":["godevo","godevi","godeva","godevamo","godevate","godevano"],"pluperfectRemoteIndicative":["ebbi goduto","avesti goduto","ebbe goduto","avemmo goduto","aveste goduto","ebbero goduto"],"verb":"godere","imperative":["godi","goda","godiamo","godete","godano"],"presentIndicative":["godo","godi","gode","godiamo","godete","godono"],"presentConditional":["goderei; godrei","goderesti; godresti","goderebbe; godrebbe","goderemmo; godremmo","godereste; godreste","goderebbero; godrebbero"],"impersonalForms":["godere","godente; gaudente","godendo","goduto","avere goduto","avendo goduto","avente goduto"],"pastIndicative":["ho goduto","hai goduto","ha goduto","abbiamo goduto","avete goduto","hanno goduto"],"futureIndicative":["godr\\xF2","godrai","godr\\xE0","godremo","godrete","godranno"]},{"futurePerfectIndicative":["avr\\xF2 guardato","avrai guardato","avr\\xE0 guardato","avremo guardato","avrete guardato","avranno guardato"],"presentSubjunctive":["guardi","guardi","guardi","guardiamo","guardiate","guardino"],"pastRemoteIndicative":["guardai","guardasti","guard\\xF2","guardammo","guardaste","guardarono"],"pluperfectIndicative":["avevo guardato","avevi guardato","aveva guardato","avevamo guardato","avevate guardato","avevano guardato"],"imperfectSubjunctive":["abbia guardato","abbia guardato","abbia guardato","abbiamo guardato","abbiate guardato","abbiano guardato"],"pastConditional":["avrei guardato","avresti guardato","avrebbe guardato","avremmo guardato","avreste guardato","avrebbero guardato"],"pastSubjunctive":["guardassi","guardassi","guardasse","guardassimo","guardaste","guardassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi guardato","avessi guardato","avesse guardato","avessimo guardato","aveste guardato","avessero guardato"],"imperfectIndicative":["guardavo","guardavi","guardava","guardavamo","guardavate","guardavano"],"pluperfectRemoteIndicative":["ebbi guardato","avesti guardato","ebbe guardato","avemmo guardato","aveste guardato","ebbero guardato"],"verb":"guardare","imperative":["guarda","guardi","guardiamo","guardate","guardino"],"presentIndicative":["guardo","guardi","guarda","guardiamo","guardate","guardano"],"presentConditional":["guarderei","guarderesti","guarderebbe","guarderemmo","guardereste","guarderebbero"],"impersonalForms":["guardare","guardante","guardando","guardato","avere guardato","avendo guardato","avente guardato"],"pastIndicative":["ho guardato","hai guardato","ha guardato","abbiamo guardato","avete guardato","hanno guardato"],"futureIndicative":["guarder\\xF2","guarderai","guarder\\xE0","guarderemo","guarderete","guarderanno"]},{"futurePerfectIndicative":["avr\\xF2 imparato","avrai imparato","avr\\xE0 imparato","avremo imparato","avrete imparato","avranno imparato"],"presentSubjunctive":["impari","impari","impari","impariamo","impariate","imparino"],"pastRemoteIndicative":["imparai","imparasti","impar\\xF2","imparammo","imparaste","impararono"],"pluperfectIndicative":["avevo imparato","avevi imparato","aveva imparato","avevamo imparato","avevate imparato","avevano imparato"],"imperfectSubjunctive":["abbia imparato","abbia imparato","abbia imparato","abbiamo imparato","abbiate imparato","abbiano imparato"],"pastConditional":["avrei imparato","avresti imparato","avrebbe imparato","avremmo imparato","avreste imparato","avrebbero imparato"],"pastSubjunctive":["imparassi","imparassi","imparasse","imparassimo","imparaste","imparassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi imparato","avessi imparato","avesse imparato","avessimo imparato","aveste imparato","avessero imparato"],"imperfectIndicative":["imparavo","imparavi","imparava","imparavamo","imparavate","imparavano"],"pluperfectRemoteIndicative":["ebbi imparato","avesti imparato","ebbe imparato","avemmo imparato","aveste imparato","ebbero imparato"],"verb":"imparare","imperative":["impara","impari","impariamo","imparate","imparino"],"presentIndicative":["imparo","impari","impara","impariamo","imparate","imparano"],"presentConditional":["imparerei","impareresti","imparerebbe","impareremmo","imparereste","imparerebbero"],"impersonalForms":["imparare","imparante","imparando","imparato","avere imparato","avendo imparato","avente imparato"],"pastIndicative":["ho imparato","hai imparato","ha imparato","abbiamo imparato","avete imparato","hanno imparato"],"futureIndicative":["imparer\\xF2","imparerai","imparer\\xE0","impareremo","imparerete","impareranno"]},{"futurePerfectIndicative":["avr\\xF2 letto","avrai letto","avr\\xE0 letto","avremo letto","avrete letto","avranno letto"],"presentSubjunctive":["legga","legga","legga","leggiamo","leggiate","leggano"],"pastRemoteIndicative":["lessi","leggesti","lesse","leggemmo","leggeste","lessero"],"pluperfectIndicative":["avevo letto","avevi letto","aveva letto","avevamo letto","avevate letto","avevano letto"],"imperfectSubjunctive":["abbia letto","abbia letto","abbia letto","abbiamo letto","abbiate letto","abbiano letto"],"pastConditional":["avrei letto","avresti letto","avrebbe letto","avremmo letto","avreste letto","avrebbero letto"],"pastSubjunctive":["leggessi","leggessi","leggesse","leggessimo","leggeste","leggessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi letto","avessi letto","avesse letto","avessimo letto","aveste letto","avessero letto"],"imperfectIndicative":["leggevo","leggevi","leggeva","leggevamo","leggevate","leggevano"],"pluperfectRemoteIndicative":["ebbi letto","avesti letto","ebbe letto","avemmo letto","aveste letto","ebbero letto"],"verb":"leggere","imperative":["leggi","legga","leggiamo","leggete","leggano"],"presentIndicative":["leggo","leggi","legge","leggiamo","leggete","leggono"],"presentConditional":["leggerei","leggeresti","leggerebbe","leggeremmo","leggereste","leggerebbero"],"impersonalForms":["leggere","leggente","leggendo","letto","avere letto","avendo letto","avente letto"],"pastIndicative":["ho letto","hai letto","ha letto","abbiamo letto","avete letto","hanno letto"],"futureIndicative":["legger\\xF2","leggerai","legger\\xE0","leggeremo","leggerete","leggeranno"]},{"futurePerfectIndicative":["avr\\xF2 mangiato","avrai mangiato","avr\\xE0 mangiato","avremo mangiato","avrete mangiato","avranno mangiato"],"presentSubjunctive":["mangi","mangi","mangi","mangiamo","mangiate","mangino"],"pastRemoteIndicative":["mangiai","mangiasti","mangi\\xF2","mangiammo","mangiaste","mangiarono"],"pluperfectIndicative":["avevo mangiato","avevi mangiato","aveva mangiato","avevamo mangiato","avevate mangiato","avevano mangiato"],"imperfectSubjunctive":["abbia mangiato","abbia mangiato","abbia mangiato","abbiamo mangiato","abbiate mangiato","abbiano mangiato"],"pastConditional":["avrei mangiato","avresti mangiato","avrebbe mangiato","avremmo mangiato","avreste mangiato","avrebbero mangiato"],"pastSubjunctive":["mangiassi","mangiassi","mangiasse","mangiassimo","mangiaste","mangiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi mangiato","avessi mangiato","avesse mangiato","avessimo mangiato","aveste mangiato","avessero mangiato"],"imperfectIndicative":["mangiavo","mangiavi","mangiava","mangiavamo","mangiavate","mangiavano"],"pluperfectRemoteIndicative":["ebbi mangiato","avesti mangiato","ebbe mangiato","avemmo mangiato","aveste mangiato","ebbero mangiato"],"verb":"mangiare","imperative":["mangia","mangi","mangiamo","mangiate","mangino"],"presentIndicative":["mangio","mangi","mangia","mangiamo","mangiate","mangiano"],"presentConditional":["mangerei","mangeresti","mangerebbe","mangeremmo","mangereste","mangerebbero"],"impersonalForms":["mangiare","mangiante","mangiando","mangiato","avere mangiato","avendo mangiato","avente mangiato"],"pastIndicative":["ho mangiato","hai mangiato","ha mangiato","abbiamo mangiato","avete mangiato","hanno mangiato"],"futureIndicative":["manger\\xF2","mangerai","manger\\xE0","mangeremo","mangerete","mangeranno"]},{"futurePerfectIndicative":["avr\\xF2 messo","avrai messo","avr\\xE0 messo","avremo messo","avrete messo","avranno messo"],"presentSubjunctive":["metta","metta","metta","mettiamo","mettiate","mettano"],"pastRemoteIndicative":["misi","mettesti","mise","mettemmo","metteste","misero"],"pluperfectIndicative":["avevo messo","avevi messo","aveva messo","avevamo messo","avevate messo","avevano messo"],"imperfectSubjunctive":["abbia messo","abbia messo","abbia messo","abbiamo messo","abbiate messo","abbiano messo"],"pastConditional":["avrei messo","avresti messo","avrebbe messo","avremmo messo","avreste messo","avrebbero messo"],"pastSubjunctive":["mettessi","mettessi","mettesse","mettessimo","metteste","mettessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi messo","avessi messo","avesse messo","avessimo messo","aveste messo","avessero messo"],"imperfectIndicative":["mettevo","mettevi","metteva","mettevamo","mettevate","mettevano"],"pluperfectRemoteIndicative":["ebbi messo","avesti messo","ebbe messo","avemmo messo","aveste messo","ebbero messo"],"verb":"mettere","imperative":["metti","metta","mettiamo","mettete","mettano"],"presentIndicative":["metto","metti","mette","mettiamo","mettete","mettono"],"presentConditional":["metterei","metteresti","metterebbe","metteremmo","mettereste","metterebbero"],"impersonalForms":["mettere","mettente","mettendo","messo","avere messo","avendo messo","avente messo"],"pastIndicative":["ho messo","hai messo","ha messo","abbiamo messo","avete messo","hanno messo"],"futureIndicative":["metter\\xF2","metterai","metter\\xE0","metteremo","metterete","metteranno"]},{"futurePerfectIndicative":["sar\\xF2 morto","sarai morto","sar\\xE0 morto","saremo morti","sarete morti","saranno morti"],"presentSubjunctive":["muoia","muoia","muoia","moriamo","moriate","muoiano"],"pastRemoteIndicative":["morii","moristi","mor\\xEC","morimmo","moriste","morirono"],"pluperfectIndicative":["ero morto","eri morto","era morto","eravamo morti","eravate morti","erano morti"],"imperfectSubjunctive":["sia morto","sia morto","sia morto","siamo morti","siate morti","siano morti"],"pastConditional":["sarei morto","saresti morto","sarebbe morto","saremmo morti","sareste morti","sarebbero morti"],"pastSubjunctive":["morissi","morissi","morisse","morissimo","moriste","morissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi morto","fossi morto","fosse morto","fossimo morti","foste morti","fossero morti"],"imperfectIndicative":["morivo","morivi","moriva","morivamo","morivate","morivano"],"pluperfectRemoteIndicative":["fui morto","fosti morto","fu morto","fummo morti","foste morti","furono morti"],"verb":"morire","imperative":["muori","muoia","moriamo","morite","muoiano"],"presentIndicative":["muoio","muori","muore","moriamo","morite","muoiono"],"presentConditional":["morirei; morrei","moriresti; morresti","morirebbe; morrebbe","moriremmo; morremmo","morireste; morreste","morirebbero; morrebbero"],"impersonalForms":["morire","morente","morendo","morto","essere morto","essendo morto","essente morto"],"pastIndicative":["sono morto","sei morto","\\xE8 morto","siamo morti","siete morti","sono morti"],"futureIndicative":["morir\\xF2; morr\\xF2","morirai; morrai","morir\\xE0; morr\\xE0","moriremo; morremo","morirete; morrete","moriranno; morranno"]},{"futurePerfectIndicative":["sar\\xF2 nato","sarai nato","sar\\xE0 nato","saremo nati","sarete nati","saranno nati"],"presentSubjunctive":["nasca","nasca","nasca","nasciamo","nasciate","nascano"],"pastRemoteIndicative":["nacqui","nascesti","nacque","nascemmo","nasceste","nacquero"],"pluperfectIndicative":["ero nato","eri nato","era nato","eravamo nati","eravate nati","erano nati"],"imperfectSubjunctive":["sia nato","sia nato","sia nato","siamo nati","siate nati","siano nati"],"pastConditional":["sarei nato","saresti nato","sarebbe nato","saremmo nati","sareste nati","sarebbero nati"],"pastSubjunctive":["nascessi","nascessi","nascesse","nascessimo","nasceste","nascessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi nato","fossi nato","fosse nato","fossimo nati","foste nati","fossero nati"],"imperfectIndicative":["nascevo","nascevi","nasceva","nascevamo","nascevate","nascevano"],"pluperfectRemoteIndicative":["fui nato","fosti nato","fu nato","fummo nati","foste nati","furono nati"],"verb":"nascere","imperative":["nasci","nasca","nasciamo","nascete","nascano"],"presentIndicative":["nasco","nasci","nasce","nasciamo","nascete","nascono"],"presentConditional":["nascerei","nasceresti","nascerebbe","nasceremmo","nascereste","nascerebbero"],"impersonalForms":["nascere","nascente","nascendo","nato","essere nato","essendo nato","essente nato"],"pastIndicative":["sono nato","sei nato","\\xE8 nato","siamo nati","siete nati","sono nati"],"futureIndicative":["nascer\\xF2","nascerai","nascer\\xE0","nasceremo","nascerete","nasceranno"]},{"futurePerfectIndicative":["avr\\xF2 offerto","avrai offerto","avr\\xE0 offerto","avremo offerto","avrete offerto","avranno offerto"],"presentSubjunctive":["offra","offra","offra","offriamo","offriate","offrano"],"pastRemoteIndicative":["offrii; offersi","offristi","offr\\xEC; offerse","offrimmo","offriste","offrirono; offersero"],"pluperfectIndicative":["avevo offerto","avevi offerto","aveva offerto","avevamo offerto","avevate offerto","avevano offerto"],"imperfectSubjunctive":["abbia offerto","abbia offerto","abbia offerto","abbiamo offerto","abbiate offerto","abbiano offerto"],"pastConditional":["avrei offerto","avresti offerto","avrebbe offerto","avremmo offerto","avreste offerto","avrebbero offerto"],"pastSubjunctive":["offrissi","offrissi","offrisse","offrissimo","offriste","offrissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi offerto","avessi offerto","avesse offerto","avessimo offerto","aveste offerto","avessero offerto"],"imperfectIndicative":["offrivo","offrivi","offriva","offrivamo","offrivate","offrivano"],"pluperfectRemoteIndicative":["ebbi offerto","avesti offerto","ebbe offerto","avemmo offerto","aveste offerto","ebbero offerto"],"verb":"offrire","imperative":["offri","offra","offriamo","offrite","offrano"],"presentIndicative":["offro","offri","offre","offriamo","offrite","offrono"],"presentConditional":["offrirei","offriresti","offrirebbe","offriremmo","offrireste","offrirebbero"],"impersonalForms":["offrire; offerire","offrente","offrendo","offerto","avere offerto","avendo offerto","avente offerto"],"pastIndicative":["ho offerto","hai offerto","ha offerto","abbiamo offerto","avete offerto","hanno offerto"],"futureIndicative":["offrir\\xF2","offrirai","offrir\\xE0","offriremo","offrirete","offriranno"]},{"futurePerfectIndicative":["sar\\xF2 parso","sarai parso","sar\\xE0 parso","saremo parsi","sarete parsi","saranno parsi"],"presentSubjunctive":["paia; paja","paia; paja","paia; paja","paiamo; pariamo","paiate; pariate","paiano; pajano"],"pastRemoteIndicative":["parvi; parsi","paresti","parve; parse","paremmo","pareste","parvero; parsero"],"pluperfectIndicative":["ero parso","eri parso","era parso","eravamo parsi","eravate parsi","erano parsi"],"imperfectSubjunctive":["sia parso","sia parso","sia parso","siamo parsi","siate parsi","siano parsi"],"pastConditional":["sarei parso","saresti parso","sarebbe parso","saremmo parsi","sareste parsi","sarebbero parsi"],"pastSubjunctive":["paressi","paressi","paresse","paressimo","pareste","paressero"],"similarVerbs":"","pluperfectSubjunctive":["fossi parso","fossi parso","fosse parso","fossimo parsi","foste parsi","fossero parsi"],"imperfectIndicative":["parevo","parevi","pareva","parevamo","parevate","parevano"],"pluperfectRemoteIndicative":["fui parso","fosti parso","fu parso","fummo parsi","foste parsi","furono parsi"],"verb":"parere","imperative":["pari","paia; paja","paiamo; pajamo","parete","paiano; pajano"],"presentIndicative":["paio; pajo","pari","pare","paiamo; pajamo","parete","paiono; pajono"],"presentConditional":["parrei","parresti","parrebbe","parremmo","parreste","parrebbero"],"impersonalForms":["parere","parvente","parendo","parso","essere parso","essendo parso","essente parso"],"pastIndicative":["sono parso","sei parso","\\xE8 parso","siamo parsi","siete parsi","sono parsi"],"futureIndicative":["parr\\xF2","parrai","parr\\xE0","parremo","parrete","parranno"]},{"futurePerfectIndicative":["avr\\xF2 parlato","avrai parlato","avr\\xE0 parlato","avremo parlato","avrete parlato","avranno parlato"],"presentSubjunctive":["parli","parli","parli","parliamo","parliate","parlino"],"pastRemoteIndicative":["parlai","parlasti","parl\\xF2","parlammo","parlaste","parlarono"],"pluperfectIndicative":["avevo parlato","avevi parlato","aveva parlato","avevamo parlato","avevate parlato","avevano parlato"],"imperfectSubjunctive":["abbia parlato","abbia parlato","abbia parlato","abbiamo parlato","abbiate parlato","abbiano parlato"],"pastConditional":["avrei parlato","avresti parlato","avrebbe parlato","avremmo parlato","avreste parlato","avrebbero parlato"],"pastSubjunctive":["parlassi","parlassi","parlasse","parlassimo","parlaste","parlassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi parlato","avessi parlato","avesse parlato","avessimo parlato","aveste parlato","avessero parlato"],"imperfectIndicative":["parlavo","parlavi","parlava","parlavamo","parlavate","parlavano"],"pluperfectRemoteIndicative":["ebbi parlato","avesti parlato","ebbe parlato","avemmo parlato","aveste parlato","ebbero parlato"],"verb":"parlare","imperative":["parla","parli","parliamo","parlate","parlino"],"presentIndicative":["parlo","parli","parla","parliamo","parlate","parlano"],"presentConditional":["parlerei","parleresti","parlerebbe","parleremmo","parlereste","parlerebbero"],"impersonalForms":["parlare","parlante","parlando","parlato","avere parlato","avendo parlato","avente parlato"],"pastIndicative":["ho parlato","hai parlato","ha parlato","abbiamo parlato","avete parlato","hanno parlato"],"futureIndicative":["parler\\xF2","parlerai","parler\\xE0","parleremo","parlerete","parleranno"]},{"futurePerfectIndicative":["sar\\xF2 partito","sarai partito","sar\\xE0 partito","saremo partiti","sarete partiti","saranno partiti"],"presentSubjunctive":["parta","parta","parta","partiamo","partiate","partano"],"pastRemoteIndicative":["partii","partisti","part\\xEC","partimmo","partiste","partirono"],"pluperfectIndicative":["ero partito","eri partito","era partito","eravamo partiti","eravate partiti","erano partiti"],"imperfectSubjunctive":["sia partito","sia partito","sia partito","siamo partiti","siate partiti","siano partiti"],"pastConditional":["sarei partito","saresti partito","sarebbe partito","saremmo partiti","sareste partiti","sarebbero partiti"],"pastSubjunctive":["partissi","partissi","partisse","partissimo","partiste","partissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi partito","fossi partito","fosse partito","fossimo partiti","foste partiti","fossero partiti"],"imperfectIndicative":["partivo","partivi","partiva","partivamo","partivate","partivano"],"pluperfectRemoteIndicative":["fui partito","fosti partito","fu partito","fummo partiti","foste partiti","furono partiti"],"verb":"partire","imperative":["parti","parta","partiamo","partite","partano"],"presentIndicative":["parto","parti","parte","partiamo","partite","partono"],"presentConditional":["partirei","partiresti","partirebbe","partiremmo","partireste","partirebbero"],"impersonalForms":["partire","partente","partendo","partito","essere partito","essendo partito","essente partito"],"pastIndicative":["sono partito","sei partito","\\xE8 partito","siamo partiti","siete partiti","sono partiti"],"futureIndicative":["partir\\xF2","partirai","partir\\xE0","partiremo","partirete","partiranno"]},{"futurePerfectIndicative":["avr\\xF2 pensato","avrai pensato","avr\\xE0 pensato","avremo pensato","avrete pensato","avranno pensato"],"presentSubjunctive":["pensi","pensi","pensi","pensiamo","pensiate","pensino"],"pastRemoteIndicative":["pensai","pensasti","pens\\xF2","pensammo","pensaste","pensarono"],"pluperfectIndicative":["avevo pensato","avevi pensato","aveva pensato","avevamo pensato","avevate pensato","avevano pensato"],"imperfectSubjunctive":["abbia pensato","abbia pensato","abbia pensato","abbiamo pensato","abbiate pensato","abbiano pensato"],"pastConditional":["avrei pensato","avresti pensato","avrebbe pensato","avremmo pensato","avreste pensato","avrebbero pensato"],"pastSubjunctive":["pensassi","pensassi","pensasse","pensassimo","pensaste","pensassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pensato","avessi pensato","avesse pensato","avessimo pensato","aveste pensato","avessero pensato"],"imperfectIndicative":["pensavo","pensavi","pensava","pensavamo","pensavate","pensavano"],"pluperfectRemoteIndicative":["ebbi pensato","avesti pensato","ebbe pensato","avemmo pensato","aveste pensato","ebbero pensato"],"verb":"pensare","imperative":["pensa","pensi","pensiamo","pensate","pensino"],"presentIndicative":["penso","pensi","pensa","pensiamo","pensate","pensano"],"presentConditional":["penserei","penseresti","penserebbe","penseremmo","pensereste","penserebbero"],"impersonalForms":["pensare","pensante","pensando","pensato","avere pensato","avendo pensato","avente pensato"],"pastIndicative":["ho pensato","hai pensato","ha pensato","abbiamo pensato","avete pensato","hanno pensato"],"futureIndicative":["penser\\xF2","penserai","penser\\xE0","penseremo","penserete","penseranno"]},{"futurePerfectIndicative":["avr\\xF2 perduto; perso","avrai perduto; perso","avr\\xE0 perduto; perso","avremo perduto; perso","avrete perduto; perso","avranno perduto; perso"],"presentSubjunctive":["perda","perda","perda","perdiamo","perdiate","perdano"],"pastRemoteIndicative":["persi; perdei; perdetti","perdesti","perse; perd\\xE9; perdette","perdemmo","perdeste","persero; perderono; perdettero"],"pluperfectIndicative":["avevo perduto; perso","avevi perduto; perso","aveva perduto; perso","avevamo perduto; perso","avevate perduto; perso","avevano perduto; perso"],"imperfectSubjunctive":["abbia perduto; perso","abbia perduto; perso","abbia perduto; perso","abbiamo perduto; perso","abbiate perduto; perso","abbiano perduto; perso"],"pastConditional":["avrei perduto; perso","avresti perduto; perso","avrebbe perduto; perso","avremmo perduto; perso","avreste perduto; perso","avrebbero perduto; perso"],"pastSubjunctive":["perdessi","perdessi","perdesse","perdessimo","perdeste","perdessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi perduto; perso","avessi perduto; perso","avesse perduto; perso","avessimo perduto; perso","aveste perduto; perso","avessero perduto; perso"],"imperfectIndicative":["perdevo","perdevi","perdeva","perdevamo","perdevate","perdevano"],"pluperfectRemoteIndicative":["ebbi perduto; perso","avesti perduto; perso","ebbe perduto; perso","avemmo perduto; perso","aveste perduto; perso","ebbero perduto; perso"],"verb":"perdere","imperative":["perdi","perda","perdiamo","perdete","perdano"],"presentIndicative":["perdo","perdi","perde","perdiamo","perdete","perdono"],"presentConditional":["perderei","perderesti","perderebbe","perderemmo","perdereste","perderebbero"],"impersonalForms":["perdere","perdente","perdendo","perduto; perso","avere perduto; perso","avendo perduto; perso","avente perduto; perso"],"pastIndicative":["ho perduto; perso","hai perduto; perso","ha perduto; perso","abbiamo perduto; perso","avete perduto; perso","hanno perduto; perso"],"futureIndicative":["perder\\xF2","perderai","perder\\xE0","perderemo","perderete","perderanno"]},{"futurePerfectIndicative":["sar\\xF2 piaciuto","sarai piaciuto","sar\\xE0 piaciuto","saremo piaciuti","sarete piaciuti","saranno piaciuti"],"presentSubjunctive":["piaccia","piaccia","piaccia","piacciamo","piacciate","piacciano"],"pastRemoteIndicative":["piacqui","piacesti","piacque","piacemmo","piaceste","piacquero"],"pluperfectIndicative":["ero piaciuto","eri piaciuto","era piaciuto","eravamo piaciuti","eravate piaciuti","erano piaciuti"],"imperfectSubjunctive":["sia piaciuto","sia piaciuto","sia piaciuto","siamo piaciuti","siate piaciuti","siano piaciuti"],"pastConditional":["sarei piaciuto","saresti piaciuto","sarebbe piaciuto","saremmo piaciuti","sareste piaciuti","sarebbero piaciuti"],"pastSubjunctive":["piacessi","piacessi","piacesse","piacessimo","piaceste","piacessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi piaciuto","fossi piaciuto","fosse piaciuto","fossimo piaciuti","foste piaciuti","fossero piaciuti"],"imperfectIndicative":["piacevo","piacevi","piaceva","piacevamo","piacevate","piacevano"],"pluperfectRemoteIndicative":["fui piaciuto","fosti piaciuto","fu piaciuto","fummo piaciuti","foste piaciuti","furono piaciuti"],"verb":"piacere","imperative":["piaci","piaccia","piacciamo","piacete","piacciano"],"presentIndicative":["piaccio","piaci","piace","piacciamo","piacete","piacciono"],"presentConditional":["piacerei","piaceresti","piacerebbe","piaceremmo","piacereste","piacerebbero"],"impersonalForms":["piacere","piacente","piacendo","piaciuto","essere piaciuto","essendo piaciuto","essente piaciuto"],"pastIndicative":["sono piaciuto","sei piaciuto","\\xE8 piaciuto","siamo piaciuti","siete piaciuti","sono piaciuti"],"futureIndicative":["piacer\\xF2","piacerai","piacer\\xE0","piaceremo","piacerete","piaceranno"]},{"futurePerfectIndicative":["avr\\xF2 pianto","avrai pianto","avr\\xE0 pianto","avremo pianto","avrete pianto","avranno pianto"],"presentSubjunctive":["pianga","pianga","pianga","piangiamo","piangiate","piangano"],"pastRemoteIndicative":["piansi","piangesti","pianse","piangemmo","piangeste","piansero"],"pluperfectIndicative":["avevo pianto","avevi pianto","aveva pianto","avevamo pianto","avevate pianto","avevano pianto"],"imperfectSubjunctive":["abbia pianto","abbia pianto","abbia pianto","abbiamo pianto","abbiate pianto","abbiano pianto"],"pastConditional":["avrei pianto","avresti pianto","avrebbe pianto","avremmo pianto","avreste pianto","avrebbero pianto"],"pastSubjunctive":["piangessi","piangessi","piangesse","piangessimo","piangeste","piangessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pianto","avessi pianto","avesse pianto","avessimo pianto","aveste pianto","avessero pianto"],"imperfectIndicative":["piangevo","piangevi","piangeva","piangevamo","piangevate","piangevano"],"pluperfectRemoteIndicative":["ebbi pianto","avesti pianto","ebbe pianto","avemmo pianto","aveste pianto","ebbero pianto"],"verb":"piangere","imperative":["piangi","pianga","piangiamo","piangete","piangano"],"presentIndicative":["piango","piangi","piange","piangiamo","piangete","piangono"],"presentConditional":["piangerei","piangeresti","piangerebbe","piangeremmo","piangereste","piangerebbero"],"impersonalForms":["piangere","piangente","piangendo","pianto","avere pianto","avendo pianto","avente pianto"],"pastIndicative":["ho pianto","hai pianto","ha pianto","abbiamo pianto","avete pianto","hanno pianto"],"futureIndicative":["pianger\\xF2","piangerai","pianger\\xE0","piangeremo","piangerete","piangeranno"]},{"futurePerfectIndicative":["avr\\xF2 posto","avrai posto","avr\\xE0 posto","avremo posto","avrete posto","avranno posto"],"presentSubjunctive":["ponga","ponga","ponga","poniamo","poniate","pongano"],"pastRemoteIndicative":["posi","ponesti","pose","ponemmo","poneste","posero"],"pluperfectIndicative":["avevo posto","avevi posto","aveva posto","avevamo posto","avevate posto","avevano posto"],"imperfectSubjunctive":["abbia posto","abbia posto","abbia posto","abbiamo posto","abbiate posto","abbiano posto"],"pastConditional":["avrei posto","avresti posto","avrebbe posto","avremmo posto","avreste posto","avrebbero posto"],"pastSubjunctive":["ponessi","ponessi","ponesse","ponessimo","poneste","ponessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi posto","avessi posto","avesse posto","avessimo posto","aveste posto","avessero posto"],"imperfectIndicative":["ponevo","ponevi","poneva","ponevamo","ponevate","ponevano"],"pluperfectRemoteIndicative":["ebbi posto","avesti posto","ebbe posto","avemmo posto","aveste posto","ebbero posto"],"verb":"porre","imperative":["poni","ponga","poniamo","ponete","pongano"],"presentIndicative":["pongo","poni","pone","poniamo","ponete","pongono"],"presentConditional":["porrei","porresti","porrebbe","porremmo","porreste","porrebbero"],"impersonalForms":["porre","ponente","ponendo","posto","avere posto","avendo posto","avente posto"],"pastIndicative":["ho posto","hai posto","ha posto","abbiamo posto","avete posto","hanno posto"],"futureIndicative":["porr\\xF2","porrai","porr\\xE0","porremo","porrete","porranno"]},{"futurePerfectIndicative":["avr\\xF2 potuto; sar\\xF2 potuto","avrai potuto; sarai potuto","avr\\xE0 potuto; sar\\xE0 potuto","avremo potuto; saremo potuti","avrete potuto; sarete potuti","avranno potuto; saranno potuti"],"presentSubjunctive":["possa","possa","possa","possiamo","possiate","possano"],"pastRemoteIndicative":["potei; potetti","potesti","pot\\xE9; potette","potemmo","poteste","poterono; potettero"],"pluperfectIndicative":["avevo potuto; ero potuto","avevi potuto; eri potuto","aveva potuto; era potuto","avevamo potuto; eravamo potuti","avevate potuto; eravate potuti","avevano potuto; erano potuti"],"imperfectSubjunctive":["abbia potuto; sia potuto","abbia potuto; sia potuto","abbia potuto; sia potuto","abbiamo potuto; siamo potuti","abbiate potuto; siate potuti","abbiano potuto; siano potuti"],"pastConditional":["avrei potuto; sarei potuto","avresti potuto; saresti potuto","avrebbe potuto; sarebbe potuto","avremmo potuto; saremmo potuti","avreste potuto; sareste potuti","avrebbero potuto; sarebbero potuti"],"pastSubjunctive":["potessi","potessi","potesse","potessimo","poteste","potessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi potuto; fossi potuto","avessi potuto; fossi potuto","avesse potuto; fosse potuto","avessimo potuto; fossimo potuti","aveste potuto; foste potuti","avessero potuto; fossero potuti"],"imperfectIndicative":["potevo","potevi","poteva","potevamo","potevate","potevano"],"pluperfectRemoteIndicative":["ebbi potuto; fui potuto","avesti potuto; fosti potuto","ebbe potuto; fu potuto","avemmo potuto; fummo potuti","aveste potuto; foste potuti","ebbero potuto; furono potuti"],"verb":"potere","imperative":["puoi","possa","possiamo","potete","possano"],"presentIndicative":["posso","puoi","pu\\xF2","possiamo","potete","possono"],"presentConditional":["potrei","potresti","potrebbe","potremmo","potreste","potrebbero"],"impersonalForms":["potere","potente","potendo","potuto","avere potuto; essere potuto","avendo potuto; essendo potuto","avente potuto; essente potuto"],"pastIndicative":["ho potuto; sono potuto","hai potuto; sei potuto","ha potuto; \\xE8 potuto","abbiamo potuto; siamo potuti","avete potuto; siete potuti","hanno potuto; sono potuti"],"futureIndicative":["potr\\xF2","potrai","potr\\xE0","potremo","potrete","potranno"]},{"futurePerfectIndicative":["avr\\xF2 preso","avrai preso","avr\\xE0 preso","avremo preso","avrete preso","avranno preso"],"presentSubjunctive":["prenda","prenda","prenda","prendiamo","prendiate","prendano"],"pastRemoteIndicative":["presi","prendesti","prese","prendemmo","prendeste","presero"],"pluperfectIndicative":["avevo preso","avevi preso","aveva preso","avevamo preso","avevate preso","avevano preso"],"imperfectSubjunctive":["abbia preso","abbia preso","abbia preso","abbiamo preso","abbiate preso","abbiano preso"],"pastConditional":["avrei preso","avresti preso","avrebbe preso","avremmo preso","avreste preso","avrebbero preso"],"pastSubjunctive":["prendessi","prendessi","prendesse","prendessimo","prendeste","prendessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi preso","avessi preso","avesse preso","avessimo preso","aveste preso","avessero preso"],"imperfectIndicative":["prendevo","prendevi","prendeva","prendevamo","prendevate","prendevano"],"pluperfectRemoteIndicative":["ebbi preso","avesti preso","ebbe preso","avemmo preso","aveste preso","ebbero preso"],"verb":"prendere","imperative":["prendi","prenda","prendiamo","prendete","prendano"],"presentIndicative":["prendo","prendi","prende","prendiamo","prendete","prendono"],"presentConditional":["prenderei","prenderesti","prenderebbe","prenderemmo","prendereste","prenderebbero"],"impersonalForms":["prendere","prendente","prendendo","preso","avere preso","avendo preso","avente preso"],"pastIndicative":["ho preso","hai preso","ha preso","abbiamo preso","avete preso","hanno preso"],"futureIndicative":["prender\\xF2","prenderai","prender\\xE0","prenderemo","prenderete","prenderanno"]},{"futurePerfectIndicative":["avr\\xF2 riso","avrai riso","avr\\xE0 riso","avremo riso","avrete riso","avranno riso"],"presentSubjunctive":["rida","rida","rida","ridiamo","ridiate","ridano"],"pastRemoteIndicative":["risi","ridesti","rise","ridemmo","rideste","risero"],"pluperfectIndicative":["avevo riso","avevi riso","aveva riso","avevamo riso","avevate riso","avevano riso"],"imperfectSubjunctive":["abbia riso","abbia riso","abbia riso","abbiamo riso","abbiate riso","abbiano riso"],"pastConditional":["avrei riso","avresti riso","avrebbe riso","avremmo riso","avreste riso","avrebbero riso"],"pastSubjunctive":["ridessi","ridessi","ridesse","ridessimo","rideste","ridessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi riso","avessi riso","avesse riso","avessimo riso","aveste riso","avessero riso"],"imperfectIndicative":["ridevo","ridevi","rideva","ridevamo","ridevate","ridevano"],"pluperfectRemoteIndicative":["ebbi riso","avesti riso","ebbe riso","avemmo riso","aveste riso","ebbero riso"],"verb":"ridere","imperative":["ridi","rida","ridiamo","ridete","ridano"],"presentIndicative":["rido","ridi","ride","ridiamo","ridete","ridono"],"presentConditional":["riderei","rideresti","riderebbe","rideremmo","ridereste","riderebbero"],"impersonalForms":["ridere","ridente","ridendo","riso","avere riso","avendo riso","avente riso"],"pastIndicative":["ho riso","hai riso","ha riso","abbiamo riso","avete riso","hanno riso"],"futureIndicative":["rider\\xF2","riderai","rider\\xE0","rideremo","riderete","rideranno"]},{"futurePerfectIndicative":["sar\\xF2 rimasto; rimaso","sarai rimasto; rimaso","sar\\xE0 rimasto; rimaso","saremo rimasto; rimasi","sarete rimasto; rimasi","saranno rimasto; rimasi"],"presentSubjunctive":["rimanga","rimanga","rimanga","rimaniamo","rimaniate","rimangano"],"pastRemoteIndicative":["rimasi","rimanesti","rimase","rimanemmo","rimaneste","rimasero"],"pluperfectIndicative":["ero rimasto; rimaso","eri rimasto; rimaso","era rimasto; rimaso","eravamo rimasto; rimasi","eravate rimasto; rimasi","erano rimasto; rimasi"],"imperfectSubjunctive":["sia rimasto; rimaso","sia rimasto; rimaso","sia rimasto; rimaso","siamo rimasto; rimasi","siate rimasto; rimasi","siano rimasto; rimasi"],"pastConditional":["sarei rimasto; rimaso","saresti rimasto; rimaso","sarebbe rimasto; rimaso","saremmo rimasto; rimasi","sareste rimasto; rimasi","sarebbero rimasto; rimasi"],"pastSubjunctive":["rimanessi","rimanessi","rimanesse","rimanessimo","rimaneste","rimanessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi rimasto; rimaso","fossi rimasto; rimaso","fosse rimasto; rimaso","fossimo rimasto; rimasi","foste rimasto; rimasi","fossero rimasto; rimasi"],"imperfectIndicative":["rimanevo","rimanevi","rimaneva","rimanevamo","rimanevate","rimanevano"],"pluperfectRemoteIndicative":["fui rimasto; rimaso","fosti rimasto; rimaso","fu rimasto; rimaso","fummo rimasto; rimasi","foste rimasto; rimasi","furono rimasto; rimasi"],"verb":"rimanere","imperative":["rimani","rimanga","rimaniamo","rimanete","rimangano"],"presentIndicative":["rimango","rimani","rimane","rimaniamo","rimanete","rimangono"],"presentConditional":["rimarrei","rimarresti","rimarrebbe","rimarremmo","rimarreste","rimarrebbero"],"impersonalForms":["rimanere","rimanente","rimanendo","rimasto; rimaso","essere rimasto; rimaso","essendo rimasto; rimaso","essente rimasto; rimaso"],"pastIndicative":["sono rimasto; rimaso","sei rimasto; rimaso","\\xE8 rimasto; rimaso","siamo rimasto; rimasi","siete rimasto; rimasi","sono rimasto; rimasi"],"futureIndicative":["rimarr\\xF2","rimarrai","rimarr\\xE0","rimarremo","rimarrete","rimarranno"]},{"futurePerfectIndicative":["avr\\xF2 risposto","avrai risposto","avr\\xE0 risposto","avremo risposto","avrete risposto","avranno risposto"],"presentSubjunctive":["risponda","risponda","risponda","rispondiamo","rispondiate","rispondano"],"pastRemoteIndicative":["risposi","rispondesti","rispose","rispondemmo","rispondeste","risposero"],"pluperfectIndicative":["avevo risposto","avevi risposto","aveva risposto","avevamo risposto","avevate risposto","avevano risposto"],"imperfectSubjunctive":["abbia risposto","abbia risposto","abbia risposto","abbiamo risposto","abbiate risposto","abbiano risposto"],"pastConditional":["avrei risposto","avresti risposto","avrebbe risposto","avremmo risposto","avreste risposto","avrebbero risposto"],"pastSubjunctive":["rispondessi","rispondessi","rispondesse","rispondessimo","rispondeste","rispondessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi risposto","avessi risposto","avesse risposto","avessimo risposto","aveste risposto","avessero risposto"],"imperfectIndicative":["rispondevo","rispondevi","rispondeva","rispondevamo","rispondevate","rispondevano"],"pluperfectRemoteIndicative":["ebbi risposto","avesti risposto","ebbe risposto","avemmo risposto","aveste risposto","ebbero risposto"],"verb":"rispondere","imperative":["rispondi","risponda","rispondiamo","rispondete","rispondano"],"presentIndicative":["rispondo","rispondi","risponde","rispondiamo","rispondete","rispondono"],"presentConditional":["risponderei","risponderesti","risponderebbe","risponderemmo","rispondereste","risponderebbero"],"impersonalForms":["rispondere","rispondente","rispondendo","risposto","avere risposto","avendo risposto","avente risposto"],"pastIndicative":["ho risposto","hai risposto","ha risposto","abbiamo risposto","avete risposto","hanno risposto"],"futureIndicative":["risponder\\xF2","risponderai","risponder\\xE0","risponderemo","risponderete","risponderanno"]},{"futurePerfectIndicative":["sar\\xF2 riuscito","sarai riuscito","sar\\xE0 riuscito","saremo riusciti","sarete riusciti","saranno riusciti"],"presentSubjunctive":["riesca","riesca","riesca","riusciamo","riusciate","riescano"],"pastRemoteIndicative":["riuscii","riuscisti","riusc\\xEC","riuscimmo","riusciste","riuscirono"],"pluperfectIndicative":["ero riuscito","eri riuscito","era riuscito","eravamo riusciti","eravate riusciti","erano riusciti"],"imperfectSubjunctive":["sia riuscito","sia riuscito","sia riuscito","siamo riusciti","siate riusciti","siano riusciti"],"pastConditional":["sarei riuscito","saresti riuscito","sarebbe riuscito","saremmo riusciti","sareste riusciti","sarebbero riusciti"],"pastSubjunctive":["riuscissi","riuscissi","riuscisse","riuscissimo","riusciste","riuscissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi riuscito","fossi riuscito","fosse riuscito","fossimo riusciti","foste riusciti","fossero riusciti"],"imperfectIndicative":["riuscivo","riuscivi","riusciva","riuscivamo","riuscivate","riuscivano"],"pluperfectRemoteIndicative":["fui riuscito","fosti riuscito","fu riuscito","fummo riusciti","foste riusciti","furono riusciti"],"verb":"riuscire","imperative":["riesci","riesca","riusciamo","riuscite","riescano"],"presentIndicative":["riesco","riesci","riesce","riusciamo","riuscite","riescono"],"presentConditional":["riuscirei","riusciresti","riuscirebbe","riusciremmo","riuscireste","riuscirebbero"],"impersonalForms":["riuscire","riuscente","riuscendo","riuscito","essere riuscito","essendo riuscito","essente riuscito"],"pastIndicative":["sono riuscito","sei riuscito","\\xE8 riuscito","siamo riusciti","siete riusciti","sono riusciti"],"futureIndicative":["riuscir\\xF2","riuscirai","riuscir\\xE0","riusciremo","riuscirete","riusciranno"]},{"futurePerfectIndicative":["avr\\xF2 rotto","avrai rotto","avr\\xE0 rotto","avremo rotto","avrete rotto","avranno rotto"],"presentSubjunctive":["rompa","rompa","rompa","rompiamo","rompiate","rompano"],"pastRemoteIndicative":["ruppi","rompesti","ruppe","rompemmo","rompeste","ruppero"],"pluperfectIndicative":["avevo rotto","avevi rotto","aveva rotto","avevamo rotto","avevate rotto","avevano rotto"],"imperfectSubjunctive":["abbia rotto","abbia rotto","abbia rotto","abbiamo rotto","abbiate rotto","abbiano rotto"],"pastConditional":["avrei rotto","avresti rotto","avrebbe rotto","avremmo rotto","avreste rotto","avrebbero rotto"],"pastSubjunctive":["rompessi","rompessi","rompesse","rompessimo","rompeste","rompessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi rotto","avessi rotto","avesse rotto","avessimo rotto","aveste rotto","avessero rotto"],"imperfectIndicative":["rompevo","rompevi","rompeva","rompevamo","rompevate","rompevano"],"pluperfectRemoteIndicative":["ebbi rotto","avesti rotto","ebbe rotto","avemmo rotto","aveste rotto","ebbero rotto"],"verb":"rompere","imperative":["rompi","rompa","rompiamo","rompete","rompano"],"presentIndicative":["rompo","rompi","rompe","rompiamo","rompete","rompono"],"presentConditional":["romperei","romperesti","romperebbe","romperemmo","rompereste","romperebbero"],"impersonalForms":["rompere","rompente","rompendo","rotto","avere rotto","avendo rotto","avente rotto"],"pastIndicative":["ho rotto","hai rotto","ha rotto","abbiamo rotto","avete rotto","hanno rotto"],"futureIndicative":["romper\\xF2","romperai","romper\\xE0","romperemo","romperete","romperanno"]},{"futurePerfectIndicative":["sar\\xF2 salito","sarai salito","sar\\xE0 salito","saremo saliti","sarete saliti","saranno saliti"],"presentSubjunctive":["salga","salga","salga","saliamo","saliate","salgano"],"pastRemoteIndicative":["salii","salisti","sal\\xEC","salimmo","saliste","salirono"],"pluperfectIndicative":["ero salito","eri salito","era salito","eravamo saliti","eravate saliti","erano saliti"],"imperfectSubjunctive":["sia salito","sia salito","sia salito","siamo saliti","siate saliti","siano saliti"],"pastConditional":["sarei salito","saresti salito","sarebbe salito","saremmo saliti","sareste saliti","sarebbero saliti"],"pastSubjunctive":["salissi","salissi","salisse","salissimo","saliste","salissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi salito","fossi salito","fosse salito","fossimo saliti","foste saliti","fossero saliti"],"imperfectIndicative":["salivo","salivi","saliva","salivamo","salivate","salivano"],"pluperfectRemoteIndicative":["fui salito","fosti salito","fu salito","fummo saliti","foste saliti","furono saliti"],"verb":"salire","imperative":["sali","salga","saliamo","salite","salgano"],"presentIndicative":["salgo","sali","sale","saliamo","salite","salgono"],"presentConditional":["salirei","saliresti","salirebbe","saliremmo","salireste","salirebbero"],"impersonalForms":["salire","salente; saliente","salendo","salito","essere salito","essendo salito","essente salito"],"pastIndicative":["sono salito","sei salito","\\xE8 salito","siamo saliti","siete saliti","sono saliti"],"futureIndicative":["salir\\xF2","salirai","salir\\xE0","saliremo","salirete","saliranno"]},{"futurePerfectIndicative":["avr\\xF2 salutato","avrai salutato","avr\\xE0 salutato","avremo salutato","avrete salutato","avranno salutato"],"presentSubjunctive":["saluti","saluti","saluti","salutiamo","salutiate","salutino"],"pastRemoteIndicative":["salutai","salutasti","salut\\xF2","salutammo","salutaste","salutarono"],"pluperfectIndicative":["avevo salutato","avevi salutato","aveva salutato","avevamo salutato","avevate salutato","avevano salutato"],"imperfectSubjunctive":["abbia salutato","abbia salutato","abbia salutato","abbiamo salutato","abbiate salutato","abbiano salutato"],"pastConditional":["avrei salutato","avresti salutato","avrebbe salutato","avremmo salutato","avreste salutato","avrebbero salutato"],"pastSubjunctive":["salutassi","salutassi","salutasse","salutassimo","salutaste","salutassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi salutato","avessi salutato","avesse salutato","avessimo salutato","aveste salutato","avessero salutato"],"imperfectIndicative":["salutavo","salutavi","salutava","salutavamo","salutavate","salutavano"],"pluperfectRemoteIndicative":["ebbi salutato","avesti salutato","ebbe salutato","avemmo salutato","aveste salutato","ebbero salutato"],"verb":"salutare","imperative":["saluta","saluti","salutiamo","salutate","salutino"],"presentIndicative":["saluto","saluti","saluta","salutiamo","salutate","salutano"],"presentConditional":["saluterei","saluteresti","saluterebbe","saluteremmo","salutereste","saluterebbero"],"impersonalForms":["salutare","salutante","salutando","salutato","avere salutato","avendo salutato","avente salutato"],"pastIndicative":["ho salutato","hai salutato","ha salutato","abbiamo salutato","avete salutato","hanno salutato"],"futureIndicative":["saluter\\xF2","saluterai","saluter\\xE0","saluteremo","saluterete","saluteranno"]},{"futurePerfectIndicative":["avr\\xF2 saputo","avrai saputo","avr\\xE0 saputo","avremo saputo","avrete saputo","avranno saputo"],"presentSubjunctive":["sappia","sappia","sappia","sappiamo","sappiate","sappiano"],"pastRemoteIndicative":["seppi","sapesti","seppe","sapemmo","sapeste","seppero"],"pluperfectIndicative":["avevo saputo","avevi saputo","aveva saputo","avevamo saputo","avevate saputo","avevano saputo"],"imperfectSubjunctive":["abbia saputo","abbia saputo","abbia saputo","abbiamo saputo","abbiate saputo","abbiano saputo"],"pastConditional":["avrei saputo","avresti saputo","avrebbe saputo","avremmo saputo","avreste saputo","avrebbero saputo"],"pastSubjunctive":["sapessi","sapessi","sapesse","sapessimo","sapeste","sapessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi saputo","avessi saputo","avesse saputo","avessimo saputo","aveste saputo","avessero saputo"],"imperfectIndicative":["sapevo","sapevi","sapeva","sapevamo","sapevate","sapevano"],"pluperfectRemoteIndicative":["ebbi saputo","avesti saputo","ebbe saputo","avemmo saputo","aveste saputo","ebbero saputo"],"verb":"sapere","imperative":["sappi","sappia","sappiamo","sapete","sappiano"],"presentIndicative":["so","sai","sa","sappiamo","sapete","sanno"],"presentConditional":["saprei","sapresti","saprebbe","sapremmo","sapreste","saprebbero"],"impersonalForms":["sapere","sapiente","sapendo","saputo","avere saputo","avendo saputo","avente saputo"],"pastIndicative":["ho saputo","hai saputo","ha saputo","abbiamo saputo","avete saputo","hanno saputo"],"futureIndicative":["sapr\\xF2","saprai","sapr\\xE0","sapremo","saprete","sapranno"]},{"futurePerfectIndicative":["avr\\xF2 scelto","avrai scelto","avr\\xE0 scelto","avremo scelto","avrete scelto","avranno scelto"],"presentSubjunctive":["scelga","scelga","scelga","scegliamo","scegliate","scelgano"],"pastRemoteIndicative":["scelsi","scegliesti","scelse","scegliemmo","sceglieste","scelsero"],"pluperfectIndicative":["avevo scelto","avevi scelto","aveva scelto","avevamo scelto","avevate scelto","avevano scelto"],"imperfectSubjunctive":["abbia scelto","abbia scelto","abbia scelto","abbiamo scelto","abbiate scelto","abbiano scelto"],"pastConditional":["avrei scelto","avresti scelto","avrebbe scelto","avremmo scelto","avreste scelto","avrebbero scelto"],"pastSubjunctive":["scegliessi","scegliessi","scegliesse","scegliessimo","sceglieste","scegliessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi scelto","avessi scelto","avesse scelto","avessimo scelto","aveste scelto","avessero scelto"],"imperfectIndicative":["sceglievo","sceglievi","sceglieva","sceglievamo","sceglievate","sceglievano"],"pluperfectRemoteIndicative":["ebbi scelto","avesti scelto","ebbe scelto","avemmo scelto","aveste scelto","ebbero scelto"],"verb":"scegliere","imperative":["scegli","scelga","scegliamo","scegliete","scelgano"],"presentIndicative":["scelgo","scegli","sceglie","scegliamo","scegliete","scelgono"],"presentConditional":["sceglierei; scerrei","sceglieresti; scerresti","sceglierebbe; scerrebbe","sceglieremmo; scerremmo","scegliereste; scerreste","sceglierebbero; scerrebbero"],"impersonalForms":["scegliere","scegliente","scegliendo","scelto","avere scelto","avendo scelto","avente scelto"],"pastIndicative":["ho scelto","hai scelto","ha scelto","abbiamo scelto","avete scelto","hanno scelto"],"futureIndicative":["sceglier\\xF2; scerr\\xF2","sceglierai; scerrai","sceglier\\xE0; scerr\\xE0","sceglieremo; scerremo","sceglierete; scerrete","sceglieranno; scerranno"]},{"futurePerfectIndicative":["avr\\xF2 scritto","avrai scritto","avr\\xE0 scritto","avremo scritto","avrete scritto","avranno scritto"],"presentSubjunctive":["scriva","scriva","scriva","scriviamo","scriviate","scrivano"],"pastRemoteIndicative":["scrissi","scrivesti","scrisse","scrivemmo","scriveste","scrissero"],"pluperfectIndicative":["avevo scritto","avevi scritto","aveva scritto","avevamo scritto","avevate scritto","avevano scritto"],"imperfectSubjunctive":["abbia scritto","abbia scritto","abbia scritto","abbiamo scritto","abbiate scritto","abbiano scritto"],"pastConditional":["avrei scritto","avresti scritto","avrebbe scritto","avremmo scritto","avreste scritto","avrebbero scritto"],"pastSubjunctive":["scrivessi","scrivessi","scrivesse","scrivessimo","scriveste","scrivessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi scritto","avessi scritto","avesse scritto","avessimo scritto","aveste scritto","avessero scritto"],"imperfectIndicative":["scrivevo","scrivevi","scriveva","scrivevamo","scrivevate","scrivevano"],"pluperfectRemoteIndicative":["ebbi scritto","avesti scritto","ebbe scritto","avemmo scritto","aveste scritto","ebbero scritto"],"verb":"scrivere","imperative":["scrivi","scriva","scriviamo","scrivete","scrivano"],"presentIndicative":["scrivo","scrivi","scrive","scriviamo","scrivete","scrivono"],"presentConditional":["scriverei","scriveresti","scriverebbe","scriveremmo","scrivereste","scriverebbero"],"impersonalForms":["scrivere","scrivente","scrivendo","scritto","avere scritto","avendo scritto","avente scritto"],"pastIndicative":["ho scritto","hai scritto","ha scritto","abbiamo scritto","avete scritto","hanno scritto"],"futureIndicative":["scriver\\xF2","scriverai","scriver\\xE0","scriveremo","scriverete","scriveranno"]},{"futurePerfectIndicative":["avr\\xF2 seduto; sar\\xF2 seduto","avrai seduto; sarai seduto","avr\\xE0 seduto; sar\\xE0 seduto","avremo seduto; saremo seduti","avrete seduto; sarete seduti","avranno seduto; saranno seduti"],"presentSubjunctive":["sieda; segga","sieda; segga","sieda; segga","sediamo","sediate","siedano; seggano"],"pastRemoteIndicative":["sedei; sedetti","sedesti","sed\\xE9; sedette","sedemmo","sedeste","sederono; sedettero"],"pluperfectIndicative":["avevo seduto; ero seduto","avevi seduto; eri seduto","aveva seduto; era seduto","avevamo seduto; eravamo seduti","avevate seduto; eravate seduti","avevano seduto; erano seduti"],"imperfectSubjunctive":["abbia seduto; sia seduto","abbia seduto; sia seduto","abbia seduto; sia seduto","abbiamo seduto; siamo seduti","abbiate seduto; siate seduti","abbiano seduto; siano seduti"],"pastConditional":["avrei seduto; sarei seduto","avresti seduto; saresti seduto","avrebbe seduto; sarebbe seduto","avremmo seduto; saremmo seduti","avreste seduto; sareste seduti","avrebbero seduto; sarebbero seduti"],"pastSubjunctive":["sedessi","sedessi","sedesse","sedessimo","sedeste","sedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi seduto; fossi seduto","avessi seduto; fossi seduto","avesse seduto; fosse seduto","avessimo seduto; fossimo seduti","aveste seduto; foste seduti","avessero seduto; fossero seduti"],"imperfectIndicative":["sedevo","sedevi","sedeva","sedevamo","sedevate","sedevano"],"pluperfectRemoteIndicative":["ebbi seduto; fui seduto","avesti seduto; fosti seduto","ebbe seduto; fu seduto","avemmo seduto; fummo seduti","aveste seduto; foste seduti","ebbero seduto; furono seduti"],"verb":"sedere","imperative":["siedi","sieda; segga","sediamo","sedete","siedano; seggano"],"presentIndicative":["siedo; seggo","siedi","siede","sediamo","sedete","siedono; seggono"],"presentConditional":["sederei; siederei","sederesti; siederesti","sederebbe; siederebbe","sederemmo; siederemmo","sedereste; siedereste","sederebbero; siederebbero"],"impersonalForms":["sedere","sedente","sedendo; seggendo","seduto","avere seduto; essere seduto","avendo seduto; essendo seduto","avente seduto; essente seduto"],"pastIndicative":["ho seduto; sono seduto","hai seduto; sei seduto","ha seduto; \\xE8 seduto","abbiamo seduto; siamo seduti","avete seduto; siete seduti","hanno seduto; sono seduti"],"futureIndicative":["seder\\xF2; sieder\\xF2","sederai; siederai","seder\\xE0; sieder\\xE0","sederemo; siederemo","sederete; siederete","sederanno; siederanno"]},{"futurePerfectIndicative":["avr\\xF2 seguito; sar\\xF2 seguito","avrai seguito; sarai seguito","avr\\xE0 seguito; sar\\xE0 seguito","avremo seguito; saremo seguiti","avrete seguito; sarete seguiti","avranno seguito; saranno seguiti"],"presentSubjunctive":["segua","segua","segua","seguiamo","seguiate","seguano"],"pastRemoteIndicative":["seguii","seguisti","segu\\xEC","seguimmo","seguiste","seguirono"],"pluperfectIndicative":["avevo seguito; ero seguito","avevi seguito; eri seguito","aveva seguito; era seguito","avevamo seguito; eravamo seguiti","avevate seguito; eravate seguiti","avevano seguito; erano seguiti"],"imperfectSubjunctive":["abbia seguito; sia seguito","abbia seguito; sia seguito","abbia seguito; sia seguito","abbiamo seguito; siamo seguiti","abbiate seguito; siate seguiti","abbiano seguito; siano seguiti"],"pastConditional":["avrei seguito; sarei seguito","avresti seguito; saresti seguito","avrebbe seguito; sarebbe seguito","avremmo seguito; saremmo seguiti","avreste seguito; sareste seguiti","avrebbero seguito; sarebbero seguiti"],"pastSubjunctive":["seguissi","seguissi","seguisse","seguissimo","seguiste","seguissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi seguito; fossi seguito","avessi seguito; fossi seguito","avesse seguito; fosse seguito","avessimo seguito; fossimo seguiti","aveste seguito; foste seguiti","avessero seguito; fossero seguiti"],"imperfectIndicative":["seguivo","seguivi","seguiva","seguivamo","seguivate","seguivano"],"pluperfectRemoteIndicative":["ebbi seguito; fui seguito","avesti seguito; fosti seguito","ebbe seguito; fu seguito","avemmo seguito; fummo seguiti","aveste seguito; foste seguiti","ebbero seguito; furono seguiti"],"verb":"seguire","imperative":["segui","segua","seguiamo","seguite","seguano"],"presentIndicative":["seguo","segui","segue","seguiamo","seguite","seguono"],"presentConditional":["seguirei","seguiresti","seguirebbe","seguiremmo","seguireste","seguirebbero"],"impersonalForms":["seguire","seguente","seguendo","seguito","avere seguito; essere seguito","avendo seguito; essendo seguito","avente seguito; essente seguito"],"pastIndicative":["ho seguito; sono seguito","hai seguito; sei seguito","ha seguito; \\xE8 seguito","abbiamo seguito; siamo seguiti","avete seguito; siete seguiti","hanno seguito; sono seguiti"],"futureIndicative":["seguir\\xF2","seguirai","seguir\\xE0","seguiremo","seguirete","seguiranno"]},{"futurePerfectIndicative":["avr\\xF2 sentito; sar\\xF2 sentito","avrai sentito; sarai sentito","avr\\xE0 sentito; sar\\xE0 sentito","avremo sentito; saremo sentiti","avrete sentito; sarete sentiti","avranno sentito; saranno sentiti"],"presentSubjunctive":["senta","senta","senta","sentiamo","sentiate","sentano"],"pastRemoteIndicative":["sentii","sentisti","sent\\xEC","sentimmo","sentiste","sentirono"],"pluperfectIndicative":["avevo sentito; ero sentito","avevi sentito; eri sentito","aveva sentito; era sentito","avevamo sentito; eravamo sentiti","avevate sentito; eravate sentiti","avevano sentito; erano sentiti"],"imperfectSubjunctive":["abbia sentito; sia sentito","abbia sentito; sia sentito","abbia sentito; sia sentito","abbiamo sentito; siamo sentiti","abbiate sentito; siate sentiti","abbiano sentito; siano sentiti"],"pastConditional":["avrei sentito; sarei sentito","avresti sentito; saresti sentito","avrebbe sentito; sarebbe sentito","avremmo sentito; saremmo sentiti","avreste sentito; sareste sentiti","avrebbero sentito; sarebbero sentiti"],"pastSubjunctive":["sentissi","sentissi","sentisse","sentissimo","sentiste","sentissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi sentito; fossi sentito","avessi sentito; fossi sentito","avesse sentito; fosse sentito","avessimo sentito; fossimo sentiti","aveste sentito; foste sentiti","avessero sentito; fossero sentiti"],"imperfectIndicative":["sentivo","sentivi","sentiva","sentivamo","sentivate","sentivano"],"pluperfectRemoteIndicative":["ebbi sentito; fui sentito","avesti sentito; fosti sentito","ebbe sentito; fu sentito","avemmo sentito; fummo sentiti","aveste sentito; foste sentiti","ebbero sentito; furono sentiti"],"verb":"sentire","imperative":["senti","senta","sentiamo","sentite","sentano"],"presentIndicative":["sento","senti","sente","sentiamo","sentite","sentono"],"presentConditional":["sentirei","sentiresti","sentirebbe","sentiremmo","sentireste","sentirebbero"],"impersonalForms":["sentire","sentente","sentendo","sentito","avere sentito; essere sentito","avendo sentito; essendo sentito","avente sentito; essente sentito"],"pastIndicative":["ho sentito; sono sentito","hai sentito; sei sentito","ha sentito; \\xE8 sentito","abbiamo sentito; siamo sentiti","avete sentito; siete sentiti","hanno sentito; sono sentiti"],"futureIndicative":["sentir\\xF2","sentirai","sentir\\xE0","sentiremo","sentirete","sentiranno"]},{"futurePerfectIndicative":["avr\\xF2 servito; sar\\xF2 servito","avrai servito; sarai servito","avr\\xE0 servito; sar\\xE0 servito","avremo servito; saremo serviti","avrete servito; sarete serviti","avranno servito; saranno serviti"],"presentSubjunctive":["serva","serva","serva","serviamo","serviate","servano"],"pastRemoteIndicative":["servii","servisti","serv\\xEC","servimmo","serviste","servirono"],"pluperfectIndicative":["avevo servito; ero servito","avevi servito; eri servito","aveva servito; era servito","avevamo servito; eravamo serviti","avevate servito; eravate serviti","avevano servito; erano serviti"],"imperfectSubjunctive":["abbia servito; sia servito","abbia servito; sia servito","abbia servito; sia servito","abbiamo servito; siamo serviti","abbiate servito; siate serviti","abbiano servito; siano serviti"],"pastConditional":["avrei servito; sarei servito","avresti servito; saresti servito","avrebbe servito; sarebbe servito","avremmo servito; saremmo serviti","avreste servito; sareste serviti","avrebbero servito; sarebbero serviti"],"pastSubjunctive":["servissi","servissi","servisse","servissimo","serviste","servissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi servito; fossi servito","avessi servito; fossi servito","avesse servito; fosse servito","avessimo servito; fossimo serviti","aveste servito; foste serviti","avessero servito; fossero serviti"],"imperfectIndicative":["servivo","servivi","serviva","servivamo","servivate","servivano"],"pluperfectRemoteIndicative":["ebbi servito; fui servito","avesti servito; fosti servito","ebbe servito; fu servito","avemmo servito; fummo serviti","aveste servito; foste serviti","ebbero servito; furono serviti"],"verb":"servire","imperative":["servi","serva","serviamo","servite","servano"],"presentIndicative":["servo","servi","serve","serviamo","servite","servono"],"presentConditional":["servirei","serviresti","servirebbe","serviremmo","servireste","servirebbero"],"impersonalForms":["servire","servente","servendo","servito","avere servito; essere servito","avendo servito; essendo servito","avente servito; essente servito"],"pastIndicative":["ho servito; sono servito","hai servito; sei servito","ha servito; \\xE8 servito","abbiamo servito; siamo serviti","avete servito; siete serviti","hanno servito; sono serviti"],"futureIndicative":["servir\\xF2","servirai","servir\\xE0","serviremo","servirete","serviranno"]},{"futurePerfectIndicative":["avr\\xF2 spiegato","avrai spiegato","avr\\xE0 spiegato","avremo spiegato","avrete spiegato","avranno spiegato"],"presentSubjunctive":["spieghi","spieghi","spieghi","spieghiamo","spieghiate","spieghino"],"pastRemoteIndicative":["spiegai","spiegasti","spieg\\xF2","spiegammo","spiegaste","spiegarono"],"pluperfectIndicative":["avevo spiegato","avevi spiegato","aveva spiegato","avevamo spiegato","avevate spiegato","avevano spiegato"],"imperfectSubjunctive":["abbia spiegato","abbia spiegato","abbia spiegato","abbiamo spiegato","abbiate spiegato","abbiano spiegato"],"pastConditional":["avrei spiegato","avresti spiegato","avrebbe spiegato","avremmo spiegato","avreste spiegato","avrebbero spiegato"],"pastSubjunctive":["spiegassi","spiegassi","spiegasse","spiegassimo","spiegaste","spiegassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi spiegato","avessi spiegato","avesse spiegato","avessimo spiegato","aveste spiegato","avessero spiegato"],"imperfectIndicative":["spiegavo","spiegavi","spiegava","spiegavamo","spiegavate","spiegavano"],"pluperfectRemoteIndicative":["ebbi spiegato","avesti spiegato","ebbe spiegato","avemmo spiegato","aveste spiegato","ebbero spiegato"],"verb":"spiegare","imperative":["spiega","spieghi","spieghiamo","spiegate","spieghino"],"presentIndicative":["spiego","spieghi","spiega","spieghiamo","spiegate","spiegano"],"presentConditional":["spiegherei","spiegheresti","spiegherebbe","spiegheremmo","spieghereste","spiegherebbero"],"impersonalForms":["spiegare","spiegante","spiegando","spiegato","avere spiegato","avendo spiegato","avente spiegato"],"pastIndicative":["ho spiegato","hai spiegato","ha spiegato","abbiamo spiegato","avete spiegato","hanno spiegato"],"futureIndicative":["spiegher\\xF2","spiegherai","spiegher\\xE0","spiegheremo","spiegherete","spiegheranno"]},{"futurePerfectIndicative":["sar\\xF2 stato","sarai stato","sar\\xE0 stato","saremo stati","sarete stati","saranno stati"],"presentSubjunctive":["stia","stia","stia","stiamo","stiate","stiano"],"pastRemoteIndicative":["stetti","stesti","stette","stemmo","steste","stettero"],"pluperfectIndicative":["ero stato","eri stato","era stato","eravamo stati","eravate stati","erano stati"],"imperfectSubjunctive":["sia stato","sia stato","sia stato","siamo stati","siate stati","siano stati"],"pastConditional":["sarei stato","saresti stato","sarebbe stato","saremmo stati","sareste stati","sarebbero stati"],"pastSubjunctive":["stessi","stessi","stesse","stessimo","steste","stessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi stato","fossi stato","fosse stato","fossimo stati","foste stati","fossero stati"],"imperfectIndicative":["stavo","stavi","stava","stavamo","stavate","stavano"],"pluperfectRemoteIndicative":["fui stato","fosti stato","fu stato","fummo stati","foste stati","furono stati"],"verb":"stare","imperative":["sta\'; stai","stia","stiamo","state","stiano"],"presentIndicative":["sto","stai","sta","stiamo","state","stanno"],"presentConditional":["starei","staresti","starebbe","staremmo","stareste","starebbero"],"impersonalForms":["stare","stante","stando","stato","essere stato","essendo stato","essente stato"],"pastIndicative":["sono stato","sei stato","\\xE8 stato","siamo stati","siete stati","sono stati"],"futureIndicative":["star\\xF2","starai","star\\xE0","staremo","starete","staranno"]},{"futurePerfectIndicative":["avr\\xF2 taciuto","avrai taciuto","avr\\xE0 taciuto","avremo taciuto","avrete taciuto","avranno taciuto"],"presentSubjunctive":["taccia; tacia","taccia; tacia","taccia; tacia","tacciamo; taciamo","tacciate; taciate","tacciano; taciano"],"pastRemoteIndicative":["tacqui","tacesti","tacque","tacemmo","taceste","tacquero"],"pluperfectIndicative":["avevo taciuto","avevi taciuto","aveva taciuto","avevamo taciuto","avevate taciuto","avevano taciuto"],"imperfectSubjunctive":["abbia taciuto","abbia taciuto","abbia taciuto","abbiamo taciuto","abbiate taciuto","abbiano taciuto"],"pastConditional":["avrei taciuto","avresti taciuto","avrebbe taciuto","avremmo taciuto","avreste taciuto","avrebbero taciuto"],"pastSubjunctive":["tacessi","tacessi","tacesse","tacessimo","taceste","tacessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi taciuto","avessi taciuto","avesse taciuto","avessimo taciuto","aveste taciuto","avessero taciuto"],"imperfectIndicative":["tacevo","tacevi","taceva","tacevamo","tacevate","tacevano"],"pluperfectRemoteIndicative":["ebbi taciuto","avesti taciuto","ebbe taciuto","avemmo taciuto","aveste taciuto","ebbero taciuto"],"verb":"tacere","imperative":["taci","taccia; tacia","tacciamo; taciamo","tacete","tacciano; taciano"],"presentIndicative":["taccio; tacio","taci","tace","tacciamo; taciamo","tacete","tacciono; taciono"],"presentConditional":["tacerei","taceresti","tacerebbe","taceremmo","tacereste","tacerebbero"],"impersonalForms":["tacere","tacente","tacendo","taciuto","avere taciuto","avendo taciuto","avente taciuto"],"pastIndicative":["ho taciuto","hai taciuto","ha taciuto","abbiamo taciuto","avete taciuto","hanno taciuto"],"futureIndicative":["tacer\\xF2","tacerai","tacer\\xE0","taceremo","tacerete","taceranno"]},{"futurePerfectIndicative":["sar\\xF2 uscito","sarai uscito","sar\\xE0 uscito","saremo usciti","sarete usciti","saranno usciti"],"presentSubjunctive":["esca","esca","esca","usciamo","usciate","escano"],"pastRemoteIndicative":["uscii","uscisti","usc\\xEC","uscimmo","usciste","uscirono"],"pluperfectIndicative":["ero uscito","eri uscito","era uscito","eravamo usciti","eravate usciti","erano usciti"],"imperfectSubjunctive":["sia uscito","sia uscito","sia uscito","siamo usciti","siate usciti","siano usciti"],"pastConditional":["sarei uscito","saresti uscito","sarebbe uscito","saremmo usciti","sareste usciti","sarebbero usciti"],"pastSubjunctive":["uscissi","uscissi","uscisse","uscissimo","usciste","uscissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi uscito","fossi uscito","fosse uscito","fossimo usciti","foste usciti","fossero usciti"],"imperfectIndicative":["uscivo","uscivi","usciva","uscivamo","uscivate","uscivano"],"pluperfectRemoteIndicative":["fui uscito","fosti uscito","fu uscito","fummo usciti","foste usciti","furono usciti"],"verb":"uscire","imperative":["esci","esca","usciamo","uscite","escano"],"presentIndicative":["esco","esci","esce","usciamo","uscite","escono"],"presentConditional":["uscirei","usciresti","uscirebbe","usciremmo","uscireste","uscirebbero"],"impersonalForms":["uscire; escire","uscente","uscendo","uscito","essere uscito","essendo uscito","essente uscito"],"pastIndicative":["sono uscito","sei uscito","\\xE8 uscito","siamo usciti","siete usciti","sono usciti"],"futureIndicative":["uscir\\xF2","uscirai","uscir\\xE0","usciremo","uscirete","usciranno"]},{"futurePerfectIndicative":["sar\\xF2 valso; valuto","sarai valso; valuto","sar\\xE0 valso; valuto","saremo valso; valuti","sarete valso; valuti","saranno valso; valuti"],"presentSubjunctive":["valga; vaglia","valga; vaglia","valga; vaglia","valiamo; valghiamo; vagliamo","valiate; valghiate; vagliate","valgano; vagliano"],"pastRemoteIndicative":["valsi","valesti","valse","valemmo","valeste","valsero"],"pluperfectIndicative":["ero valso; valuto","eri valso; valuto","era valso; valuto","eravamo valso; valuti","eravate valso; valuti","erano valso; valuti"],"imperfectSubjunctive":["sia valso; valuto","sia valso; valuto","sia valso; valuto","siamo valso; valuti","siate valso; valuti","siano valso; valuti"],"pastConditional":["sarei valso; valuto","saresti valso; valuto","sarebbe valso; valuto","saremmo valso; valuti","sareste valso; valuti","sarebbero valso; valuti"],"pastSubjunctive":["valessi","valessi","valesse","valessimo","valeste","valessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi valso; valuto","fossi valso; valuto","fosse valso; valuto","fossimo valso; valuti","foste valso; valuti","fossero valso; valuti"],"imperfectIndicative":["valevo","valevi","valeva","valevamo","valevate","valevano"],"pluperfectRemoteIndicative":["fui valso; valuto","fosti valso; valuto","fu valso; valuto","fummo valso; valuti","foste valso; valuti","furono valso; valuti"],"verb":"valere","imperative":["vali","valga; vaglia","valiamo; valghiamo; vagliamo","valete","valgano; vagliano"],"presentIndicative":["valgo","vali","vale","valiamo; valghiamo; vagliamo","valete","valgono; vagliono"],"presentConditional":["varrei","varresti","varrebbe","varremmo","varreste","varrebbero"],"impersonalForms":["valere","valente","valendo","valso; valuto; valsuto","essere valso; valuto","essendo valso; valuto","essente valso; valuto"],"pastIndicative":["sono valso; valuto","sei valso; valuto","\\xE8 valso; valuto","siamo valso; valuti","siete valso; valuti","sono valso; valuti"],"futureIndicative":["varr\\xF2","varrai","varr\\xE0","varremo","varrete","varranno"]},{"futurePerfectIndicative":["avr\\xF2 veduto; visto","avrai veduto; visto","avr\\xE0 veduto; visto","avremo veduto; visto","avrete veduto; visto","avranno veduto; visto"],"presentSubjunctive":["veda; vegga","veda; vegga","veda; vegga","vediamo","vediate","vedano; veggano"],"pastRemoteIndicative":["vidi","vedesti","vide","vedemmo","vedeste","videro"],"pluperfectIndicative":["avevo veduto; visto","avevi veduto; visto","aveva veduto; visto","avevamo veduto; visto","avevate veduto; visto","avevano veduto; visto"],"imperfectSubjunctive":["abbia veduto; visto","abbia veduto; visto","abbia veduto; visto","abbiamo veduto; visto","abbiate veduto; visto","abbiano veduto; visto"],"pastConditional":["avrei veduto; visto","avresti veduto; visto","avrebbe veduto; visto","avremmo veduto; visto","avreste veduto; visto","avrebbero veduto; visto"],"pastSubjunctive":["vedessi","vedessi","vedesse","vedessimo","vedeste","vedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi veduto; visto","avessi veduto; visto","avesse veduto; visto","avessimo veduto; visto","aveste veduto; visto","avessero veduto; visto"],"imperfectIndicative":["vedevo","vedevi","vedeva","vedevamo","vedevate","vedevano"],"pluperfectRemoteIndicative":["ebbi veduto; visto","avesti veduto; visto","ebbe veduto; visto","avemmo veduto; visto","aveste veduto; visto","ebbero veduto; visto"],"verb":"vedere","imperative":["vedi","veda; vegga","vediamo","vedete","vedano; veggano"],"presentIndicative":["vedo; veggo","vedi","vede","vediamo","vedete","vedono; veggono"],"presentConditional":["vedrei","vedresti","vedrebbe","vedremmo","vedreste","vedrebbero"],"impersonalForms":["vedere","vedente","vedendo","veduto; visto","avere veduto; visto","avendo veduto; visto","avente veduto; visto"],"pastIndicative":["ho veduto; visto","hai veduto; visto","ha veduto; visto","abbiamo veduto; visto","avete veduto; visto","hanno veduto; visto"],"futureIndicative":["vedr\\xF2","vedrai","vedr\\xE0","vedremo","vedrete","vedranno"]},{"futurePerfectIndicative":["sar\\xF2 venuto","sarai venuto","sar\\xE0 venuto","saremo venuti","sarete venuti","saranno venuti"],"presentSubjunctive":["venga","venga","venga","veniamo","veniate","vengano"],"pastRemoteIndicative":["venni","venisti","venne","venimmo","veniste","vennero"],"pluperfectIndicative":["ero venuto","eri venuto","era venuto","eravamo venuti","eravate venuti","erano venuti"],"imperfectSubjunctive":["sia venuto","sia venuto","sia venuto","siamo venuti","siate venuti","siano venuti"],"pastConditional":["sarei venuto","saresti venuto","sarebbe venuto","saremmo venuti","sareste venuti","sarebbero venuti"],"pastSubjunctive":["venissi","venissi","venisse","venissimo","veniste","venissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi venuto","fossi venuto","fosse venuto","fossimo venuti","foste venuti","fossero venuti"],"imperfectIndicative":["venivo","venivi","veniva","venivamo","venivate","venivano"],"pluperfectRemoteIndicative":["fui venuto","fosti venuto","fu venuto","fummo venuti","foste venuti","furono venuti"],"verb":"venire","imperative":["vieni","venga","veniamo","venite","vengano"],"presentIndicative":["vengo","vieni","viene","veniamo","venite","vengono"],"presentConditional":["verrei","verresti","verrebbe","verremmo","verreste","verrebbero"],"impersonalForms":["venire","venente","venendo","venuto","essere venuto","essendo venuto","essente venuto"],"pastIndicative":["sono venuto","sei venuto","\\xE8 venuto","siamo venuti","siete venuti","sono venuti"],"futureIndicative":["verr\\xF2","verrai","verr\\xE0","verremo","verrete","verranno"]},{"futurePerfectIndicative":["avr\\xF2 vestito","avrai vestito","avr\\xE0 vestito","avremo vestito","avrete vestito","avranno vestito"],"presentSubjunctive":["vesta","vesta","vesta","vestiamo","vestiate","vestano"],"pastRemoteIndicative":["vestii","vestisti","vest\\xEC","vestimmo","vestiste","vestirono"],"pluperfectIndicative":["avevo vestito","avevi vestito","aveva vestito","avevamo vestito","avevate vestito","avevano vestito"],"imperfectSubjunctive":["abbia vestito","abbia vestito","abbia vestito","abbiamo vestito","abbiate vestito","abbiano vestito"],"pastConditional":["avrei vestito","avresti vestito","avrebbe vestito","avremmo vestito","avreste vestito","avrebbero vestito"],"pastSubjunctive":["vestissi","vestissi","vestisse","vestissimo","vestiste","vestissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi vestito","avessi vestito","avesse vestito","avessimo vestito","aveste vestito","avessero vestito"],"imperfectIndicative":["vestivo","vestivi","vestiva","vestivamo","vestivate","vestivano"],"pluperfectRemoteIndicative":["ebbi vestito","avesti vestito","ebbe vestito","avemmo vestito","aveste vestito","ebbero vestito"],"verb":"vestire","imperative":["vesti","vesta","vestiamo","vestite","vestano"],"presentIndicative":["vesto","vesti","veste","vestiamo","vestite","vestono"],"presentConditional":["vestirei","vestiresti","vestirebbe","vestiremmo","vestireste","vestirebbero"],"impersonalForms":["vestire","vestente","vestendo","vestito","avere vestito","avendo vestito","avente vestito"],"pastIndicative":["ho vestito","hai vestito","ha vestito","abbiamo vestito","avete vestito","hanno vestito"],"futureIndicative":["vestir\\xF2","vestirai","vestir\\xE0","vestiremo","vestirete","vestiranno"]},{"futurePerfectIndicative":["avr\\xF2 vivuto; vissuto; sar\\xF2 vivuto; vissuto","avrai vivuto; vissuto; sarai vivuto; vissuto","avr\\xE0 vivuto; vissuto; sar\\xE0 vivuto; vissuto","avremo vivuto; vissuto; saremo vivuto; vissuti","avrete vivuto; vissuto; sarete vivuto; vissuti","avranno vivuto; vissuto; saranno vivuto; vissuti"],"presentSubjunctive":["viva","viva","viva","viviamo","viviate","vivano"],"pastRemoteIndicative":["vissi","vivesti","visse","vivemmo","viveste","vissero"],"pluperfectIndicative":["avevo vivuto; vissuto; ero vivuto; vissuto","avevi vivuto; vissuto; eri vivuto; vissuto","aveva vivuto; vissuto; era vivuto; vissuto","avevamo vivuto; vissuto; eravamo vivuto; vissuti","avevate vivuto; vissuto; eravate vivuto; vissuti","avevano vivuto; vissuto; erano vivuto; vissuti"],"imperfectSubjunctive":["abbia vivuto; vissuto; sia vivuto; vissuto","abbia vivuto; vissuto; sia vivuto; vissuto","abbia vivuto; vissuto; sia vivuto; vissuto","abbiamo vivuto; vissuto; siamo vivuto; vissuti","abbiate vivuto; vissuto; siate vivuto; vissuti","abbiano vivuto; vissuto; siano vivuto; vissuti"],"pastConditional":["avrei vivuto; vissuto; sarei vivuto; vissuto","avresti vivuto; vissuto; saresti vivuto; vissuto","avrebbe vivuto; vissuto; sarebbe vivuto; vissuto","avremmo vivuto; vissuto; saremmo vivuto; vissuti","avreste vivuto; vissuto; sareste vivuto; vissuti","avrebbero vivuto; vissuto; sarebbero vivuto; vissuti"],"pastSubjunctive":["vivessi","vivessi","vivesse","vivessimo","viveste","vivessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi vivuto; vissuto; fossi vivuto; vissuto","avessi vivuto; vissuto; fossi vivuto; vissuto","avesse vivuto; vissuto; fosse vivuto; vissuto","avessimo vivuto; vissuto; fossimo vivuto; vissuti","aveste vivuto; vissuto; foste vivuto; vissuti","avessero vivuto; vissuto; fossero vivuto; vissuti"],"imperfectIndicative":["vivevo","vivevi","viveva","vivevamo","vivevate","vivevano"],"pluperfectRemoteIndicative":["ebbi vivuto; vissuto; fui vivuto; vissuto","avesti vivuto; vissuto; fosti vivuto; vissuto","ebbe vivuto; vissuto; fu vivuto; vissuto","avemmo vivuto; vissuto; fummo vivuto; vissuti","aveste vivuto; vissuto; foste vivuto; vissuti","ebbero vivuto; vissuto; furono vivuto; vissuti"],"verb":"vivere","imperative":["vivi","viva","viviamo","vivete","vivano"],"presentIndicative":["vivo","vivi","vive","viviamo","vivete","vivono"],"presentConditional":["vivrei","vivresti","vivrebbe","vivremmo","vivreste","vivrebbero"],"impersonalForms":["vivere","vivente","vivendo","vivuto; vissuto","avere vivuto; vissuto; essere vivuto; vissuto","avendo vivuto; vissuto; essendo vivuto; vissuto","avente vivuto; vissuto; essente vivuto; vissuto"],"pastIndicative":["ho vivuto; vissuto; sono vivuto; vissuto","hai vivuto; vissuto; sei vivuto; vissuto","ha vivuto; vissuto; \\xE8 vivuto; vissuto","abbiamo vivuto; vissuto; siamo vivuto; vissuti","avete vivuto; vissuto; siete vivuto; vissuti","hanno vivuto; vissuto; sono vivuto; vissuti"],"futureIndicative":["vivr\\xF2","vivrai","vivr\\xE0","vivremo","vivrete","vivranno"]},{"futurePerfectIndicative":["avr\\xF2 voluto","avrai voluto","avr\\xE0 voluto","avremo voluto","avrete voluto","avranno voluto"],"presentSubjunctive":["voglia","voglia","voglia","vogliamo","vogliate","vogliano"],"pastRemoteIndicative":["volli; volsi","volesti","volle; volse","volemmo","voleste","vollero; volsero"],"pluperfectIndicative":["avevo voluto","avevi voluto","aveva voluto","avevamo voluto","avevate voluto","avevano voluto"],"imperfectSubjunctive":["abbia voluto","abbia voluto","abbia voluto","abbiamo voluto","abbiate voluto","abbiano voluto"],"pastConditional":["avrei voluto","avresti voluto","avrebbe voluto","avremmo voluto","avreste voluto","avrebbero voluto"],"pastSubjunctive":["volessi","volessi","volesse","volessimo","voleste","volessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi voluto","avessi voluto","avesse voluto","avessimo voluto","aveste voluto","avessero voluto"],"imperfectIndicative":["volevo","volevi","voleva","volevamo","volevate","volevano"],"pluperfectRemoteIndicative":["ebbi voluto","avesti voluto","ebbe voluto","avemmo voluto","aveste voluto","ebbero voluto"],"verb":"volere","imperative":["vogli","voglia","vogliamo","vogliate","vogliano"],"presentIndicative":["voglio; v\\xF2; vu\\xF2","vuoi","vuole","vogliamo","volete","vogliono"],"presentConditional":["vorrei","vorresti","vorrebbe","vorremmo","vorreste","vorrebbero"],"impersonalForms":["volere","volente","volendo","voluto","avere voluto","avendo voluto","avente voluto"],"pastIndicative":["ho voluto","hai voluto","ha voluto","abbiamo voluto","avete voluto","hanno voluto"],"futureIndicative":["vorr\\xF2","vorrai","vorr\\xE0","vorremo","vorrete","vorranno"]}];var verbs=[{"futurePerfectIndicative":["avr\\xF2 abbassato; sar\\xF2 abbassato","avrai abbassato; sarai abbassato","avr\\xE0 abbassato; sar\\xE0 abbassato","avremo abbassato; saremo abbassati","avrete abbassato; sarete abbassati","avranno abbassato; saranno abbassati"],"presentSubjunctive":["abbassi","abbassi","abbassi","abbassiamo","abbassiate","abbassino"],"pastRemoteIndicative":["abbassai","abbassasti","abbass\\xF2","abbassammo","abbassaste","abbassarono"],"pluperfectIndicative":["avevo abbassato; ero abbassato","avevi abbassato; eri abbassato","aveva abbassato; era abbassato","avevamo abbassato; eravamo abbassati","avevate abbassato; eravate abbassati","avevano abbassato; erano abbassati"],"imperfectSubjunctive":["abbia abbassato; sia abbassato","abbia abbassato; sia abbassato","abbia abbassato; sia abbassato","abbiamo abbassato; siamo abbassati","abbiate abbassato; siate abbassati","abbiano abbassato; siano abbassati"],"pastConditional":["avrei abbassato; sarei abbassato","avresti abbassato; saresti abbassato","avrebbe abbassato; sarebbe abbassato","avremmo abbassato; saremmo abbassati","avreste abbassato; sareste abbassati","avrebbero abbassato; sarebbero abbassati"],"pastSubjunctive":["abbassassi","abbassassi","abbassasse","abbassassimo","abbassaste","abbassassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi abbassato; fossi abbassato","avessi abbassato; fossi abbassato","avesse abbassato; fosse abbassato","avessimo abbassato; fossimo abbassati","aveste abbassato; foste abbassati","avessero abbassato; fossero abbassati"],"imperfectIndicative":["abbassavo","abbassavi","abbassava","abbassavamo","abbassavate","abbassavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi abbassato; fui abbassato","avesti abbassato; fosti abbassato","ebbe abbassato; fu abbassato","avemmo abbassato; fummo abbassati","aveste abbassato; foste abbassati","ebbero abbassato; furono abbassati"],"verb":"abbassare","imperative":["abbassa","abbassi","abbassiamo","abbassate","abbassino"],"presentIndicative":["abbasso","abbassi","abbassa","abbassiamo","abbassate","abbassano"],"presentConditional":["abbasserei","abbasseresti","abbasserebbe","abbasseremmo","abbassereste","abbasserebbero"],"impersonalForms":["abbassare","abbassante","abbassando","abbassato","avere abbassato; essere abbassato","avendo abbassato; essendo abbassato","avente abbassato; essente abbassato"],"pastIndicative":["ho abbassato; sono abbassato","hai abbassato; sei abbassato","ha abbassato; \\xE8 abbassato","abbiamo abbassato; siamo abbassati","avete abbassato; siete abbassati","hanno abbassato; sono abbassati"],"futureIndicative":["abbasser\\xF2","abbasserai","abbasser\\xE0","abbasseremo","abbasserete","abbasseranno"]},{"futurePerfectIndicative":["avr\\xF2 acceso","avrai acceso","avr\\xE0 acceso","avremo acceso","avrete acceso","avranno acceso"],"presentSubjunctive":["accenda","accenda","accenda","accendiamo","accendiate","accendano"],"pastRemoteIndicative":["accesi","accendesti","accese","accendemmo","accendeste","accesero"],"pluperfectIndicative":["avevo acceso","avevi acceso","aveva acceso","avevamo acceso","avevate acceso","avevano acceso"],"imperfectSubjunctive":["abbia acceso","abbia acceso","abbia acceso","abbiamo acceso","abbiate acceso","abbiano acceso"],"pastConditional":["avrei acceso","avresti acceso","avrebbe acceso","avremmo acceso","avreste acceso","avrebbero acceso"],"pastSubjunctive":["accendessi","accendessi","accendesse","accendessimo","accendeste","accendessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi acceso","avessi acceso","avesse acceso","avessimo acceso","aveste acceso","avessero acceso"],"imperfectIndicative":["accendevo","accendevi","accendeva","accendevamo","accendevate","accendevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi acceso","avesti acceso","ebbe acceso","avemmo acceso","aveste acceso","ebbero acceso"],"verb":"accendere","imperative":["accendi","accenda","accendiamo","accendete","accendano"],"presentIndicative":["accendo","accendi","accende","accendiamo","accendete","accendono"],"presentConditional":["accenderei","accenderesti","accenderebbe","accenderemmo","accendereste","accenderebbero"],"impersonalForms":["accendere","accendente","accendendo","acceso","avere acceso","avendo acceso","avente acceso"],"pastIndicative":["ho acceso","hai acceso","ha acceso","abbiamo acceso","avete acceso","hanno acceso"],"futureIndicative":["accender\\xF2","accenderai","accender\\xE0","accenderemo","accenderete","accenderanno"]},{"futurePerfectIndicative":["avr\\xF2 affittato","avrai affittato","avr\\xE0 affittato","avremo affittato","avrete affittato","avranno affittato"],"presentSubjunctive":["affitti","affitti","affitti","affittiamo","affittiate","affittino"],"pastRemoteIndicative":["affittai","affittasti","affitt\\xF2","affittammo","affittaste","affittarono"],"pluperfectIndicative":["avevo affittato","avevi affittato","aveva affittato","avevamo affittato","avevate affittato","avevano affittato"],"imperfectSubjunctive":["abbia affittato","abbia affittato","abbia affittato","abbiamo affittato","abbiate affittato","abbiano affittato"],"pastConditional":["avrei affittato","avresti affittato","avrebbe affittato","avremmo affittato","avreste affittato","avrebbero affittato"],"pastSubjunctive":["affittassi","affittassi","affittasse","affittassimo","affittaste","affittassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi affittato","avessi affittato","avesse affittato","avessimo affittato","aveste affittato","avessero affittato"],"imperfectIndicative":["affittavo","affittavi","affittava","affittavamo","affittavate","affittavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi affittato","avesti affittato","ebbe affittato","avemmo affittato","aveste affittato","ebbero affittato"],"verb":"affittare","imperative":["affitta","affitti","affittiamo","affittate","affittino"],"presentIndicative":["affitto","affitti","affitta","affittiamo","affittate","affittano"],"presentConditional":["affitterei","affitteresti","affitterebbe","affitteremmo","affittereste","affitterebbero"],"impersonalForms":["affittare","affittante","affittando","affittato","avere affittato","avendo affittato","avente affittato"],"pastIndicative":["ho affittato","hai affittato","ha affittato","abbiamo affittato","avete affittato","hanno affittato"],"futureIndicative":["affitter\\xF2","affitterai","affitter\\xE0","affitteremo","affitterete","affitteranno"]},{"futurePerfectIndicative":["avr\\xF2 aggiunto","avrai aggiunto","avr\\xE0 aggiunto","avremo aggiunto","avrete aggiunto","avranno aggiunto"],"presentSubjunctive":["aggiunga","aggiunga","aggiunga","aggiungiamo","aggiungiate","aggiungano"],"pastRemoteIndicative":["aggiunsi","aggiungesti","aggiunse","aggiungemmo","aggiungeste","aggiunsero"],"pluperfectIndicative":["avevo aggiunto","avevi aggiunto","aveva aggiunto","avevamo aggiunto","avevate aggiunto","avevano aggiunto"],"imperfectSubjunctive":["abbia aggiunto","abbia aggiunto","abbia aggiunto","abbiamo aggiunto","abbiate aggiunto","abbiano aggiunto"],"pastConditional":["avrei aggiunto","avresti aggiunto","avrebbe aggiunto","avremmo aggiunto","avreste aggiunto","avrebbero aggiunto"],"pastSubjunctive":["aggiungessi","aggiungessi","aggiungesse","aggiungessimo","aggiungeste","aggiungessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi aggiunto","avessi aggiunto","avesse aggiunto","avessimo aggiunto","aveste aggiunto","avessero aggiunto"],"imperfectIndicative":["aggiungevo","aggiungevi","aggiungeva","aggiungevamo","aggiungevate","aggiungevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi aggiunto","avesti aggiunto","ebbe aggiunto","avemmo aggiunto","aveste aggiunto","ebbero aggiunto"],"verb":"aggiungere","imperative":["aggiungi","aggiunga","aggiungiamo","aggiungete","aggiungano"],"presentIndicative":["aggiungo","aggiungi","aggiunge","aggiungiamo","aggiungete","aggiungono"],"presentConditional":["aggiungerei","aggiungeresti","aggiungerebbe","aggiungeremmo","aggiungereste","aggiungerebbero"],"impersonalForms":["aggiungere","aggiungente","aggiungendo","aggiunto","avere aggiunto","avendo aggiunto","avente aggiunto"],"pastIndicative":["ho aggiunto","hai aggiunto","ha aggiunto","abbiamo aggiunto","avete aggiunto","hanno aggiunto"],"futureIndicative":["aggiunger\\xF2","aggiungerai","aggiunger\\xE0","aggiungeremo","aggiungerete","aggiungeranno"]},{"futurePerfectIndicative":["avr\\xF2 aiutato","avrai aiutato","avr\\xE0 aiutato","avremo aiutato","avrete aiutato","avranno aiutato"],"presentSubjunctive":["aiuti","aiuti","aiuti","aiutiamo","aiutiate","aiutino"],"pastRemoteIndicative":["aiutai","aiutasti","aiut\\xF2","aiutammo","aiutaste","aiutarono"],"pluperfectIndicative":["avevo aiutato","avevi aiutato","aveva aiutato","avevamo aiutato","avevate aiutato","avevano aiutato"],"imperfectSubjunctive":["abbia aiutato","abbia aiutato","abbia aiutato","abbiamo aiutato","abbiate aiutato","abbiano aiutato"],"pastConditional":["avrei aiutato","avresti aiutato","avrebbe aiutato","avremmo aiutato","avreste aiutato","avrebbero aiutato"],"pastSubjunctive":["aiutassi","aiutassi","aiutasse","aiutassimo","aiutaste","aiutassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi aiutato","avessi aiutato","avesse aiutato","avessimo aiutato","aveste aiutato","avessero aiutato"],"imperfectIndicative":["aiutavo","aiutavi","aiutava","aiutavamo","aiutavate","aiutavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi aiutato","avesti aiutato","ebbe aiutato","avemmo aiutato","aveste aiutato","ebbero aiutato"],"verb":"aiutare","imperative":["aiuta","aiuti","aiutiamo","aiutate","aiutino"],"presentIndicative":["aiuto","aiuti","aiuta","aiutiamo","aiutate","aiutano"],"presentConditional":["aiuterei","aiuteresti","aiuterebbe","aiuteremmo","aiutereste","aiuterebbero"],"impersonalForms":["aiutare","aiutante","aiutando","aiutato","avere aiutato","avendo aiutato","avente aiutato"],"pastIndicative":["ho aiutato","hai aiutato","ha aiutato","abbiamo aiutato","avete aiutato","hanno aiutato"],"futureIndicative":["aiuter\\xF2","aiuterai","aiuter\\xE0","aiuteremo","aiuterete","aiuteranno"]},{"futurePerfectIndicative":["avr\\xF2 allenato","avrai allenato","avr\\xE0 allenato","avremo allenato","avrete allenato","avranno allenato"],"presentSubjunctive":["alleni","alleni","alleni","alleniamo","alleniate","allenino"],"pastRemoteIndicative":["allenai","allenasti","allen\\xF2","allenammo","allenaste","allenarono"],"pluperfectIndicative":["avevo allenato","avevi allenato","aveva allenato","avevamo allenato","avevate allenato","avevano allenato"],"imperfectSubjunctive":["abbia allenato","abbia allenato","abbia allenato","abbiamo allenato","abbiate allenato","abbiano allenato"],"pastConditional":["avrei allenato","avresti allenato","avrebbe allenato","avremmo allenato","avreste allenato","avrebbero allenato"],"pastSubjunctive":["allenassi","allenassi","allenasse","allenassimo","allenaste","allenassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi allenato","avessi allenato","avesse allenato","avessimo allenato","aveste allenato","avessero allenato"],"imperfectIndicative":["allenavo","allenavi","allenava","allenavamo","allenavate","allenavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi allenato","avesti allenato","ebbe allenato","avemmo allenato","aveste allenato","ebbero allenato"],"verb":"allenare","imperative":["allena","alleni","alleniamo","allenate","allenino"],"presentIndicative":["alleno","alleni","allena","alleniamo","allenate","allenano"],"presentConditional":["allenerei","alleneresti","allenerebbe","alleneremmo","allenereste","allenerebbero"],"impersonalForms":["allenare","allenante","allenando","allenato","avere allenato","avendo allenato","avente allenato"],"pastIndicative":["ho allenato","hai allenato","ha allenato","abbiamo allenato","avete allenato","hanno allenato"],"futureIndicative":["allener\\xF2","allenerai","allener\\xE0","alleneremo","allenerete","alleneranno"]},{"futurePerfectIndicative":["avr\\xF2 amato","avrai amato","avr\\xE0 amato","avremo amato","avrete amato","avranno amato"],"presentSubjunctive":["ami","ami","ami","amiamo","amiate","amino"],"pastRemoteIndicative":["amai","amasti","am\\xF2","amammo","amaste","amarono"],"pluperfectIndicative":["avevo amato","avevi amato","aveva amato","avevamo amato","avevate amato","avevano amato"],"imperfectSubjunctive":["abbia amato","abbia amato","abbia amato","abbiamo amato","abbiate amato","abbiano amato"],"pastConditional":["avrei amato","avresti amato","avrebbe amato","avremmo amato","avreste amato","avrebbero amato"],"pastSubjunctive":["amassi","amassi","amasse","amassimo","amaste","amassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi amato","avessi amato","avesse amato","avessimo amato","aveste amato","avessero amato"],"imperfectIndicative":["amavo","amavi","amava","amavamo","amavate","amavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi amato","avesti amato","ebbe amato","avemmo amato","aveste amato","ebbero amato"],"verb":"amare","imperative":["ama","ami","amiamo","amate","amino"],"presentIndicative":["amo","ami","ama","amiamo","amate","amano"],"presentConditional":["amerei","ameresti","amerebbe","ameremmo","amereste","amerebbero"],"impersonalForms":["amare","amante","amando","amato","avere amato","avendo amato","avente amato"],"pastIndicative":["ho amato","hai amato","ha amato","abbiamo amato","avete amato","hanno amato"],"futureIndicative":["amer\\xF2","amerai","amer\\xE0","ameremo","amerete","ameranno"]},{"futurePerfectIndicative":["sar\\xF2 andato","sarai andato","sar\\xE0 andato","saremo andati","sarete andati","saranno andati"],"presentSubjunctive":["vada","vada","vada","andiamo","andiate","vadano"],"pastRemoteIndicative":["andai","andasti","and\\xF2","andammo","andaste","andarono"],"pluperfectIndicative":["ero andato","eri andato","era andato","eravamo andati","eravate andati","erano andati"],"imperfectSubjunctive":["sia andato","sia andato","sia andato","siamo andati","siate andati","siano andati"],"pastConditional":["sarei andato","saresti andato","sarebbe andato","saremmo andati","sareste andati","sarebbero andati"],"pastSubjunctive":["andassi","andassi","andasse","andassimo","andaste","andassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi andato","fossi andato","fosse andato","fossimo andati","foste andati","fossero andati"],"imperfectIndicative":["andavo","andavi","andava","andavamo","andavate","andavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui andato","fosti andato","fu andato","fummo andati","foste andati","furono andati"],"verb":"andare","imperative":["va\'; vai","vada","andiamo","andate","vadano"],"presentIndicative":["vado; vo","vai","va","andiamo","andate","vanno"],"presentConditional":["andrei","andresti","andrebbe","andremmo","andreste","andrebbero"],"impersonalForms":["andare","andante","andando","andato","essere andato","essendo andato","essente andato"],"pastIndicative":["sono andato","sei andato","\\xE8 andato","siamo andati","siete andati","sono andati"],"futureIndicative":["andr\\xF2","andrai","andr\\xE0","andremo","andrete","andranno"]},{"futurePerfectIndicative":["avr\\xF2 appartenuto; sar\\xF2 appartenuto","avrai appartenuto; sarai appartenuto","avr\\xE0 appartenuto; sar\\xE0 appartenuto","avremo appartenuto; saremo appartenuti","avrete appartenuto; sarete appartenuti","avranno appartenuto; saranno appartenuti"],"presentSubjunctive":["appartenga","appartenga","appartenga","apparteniamo","apparteniate","appartengano"],"pastRemoteIndicative":["appartenni","appartenesti","appartenne","appartenemmo","apparteneste","appartennero"],"pluperfectIndicative":["avevo appartenuto; ero appartenuto","avevi appartenuto; eri appartenuto","aveva appartenuto; era appartenuto","avevamo appartenuto; eravamo appartenuti","avevate appartenuto; eravate appartenuti","avevano appartenuto; erano appartenuti"],"imperfectSubjunctive":["abbia appartenuto; sia appartenuto","abbia appartenuto; sia appartenuto","abbia appartenuto; sia appartenuto","abbiamo appartenuto; siamo appartenuti","abbiate appartenuto; siate appartenuti","abbiano appartenuto; siano appartenuti"],"pastConditional":["avrei appartenuto; sarei appartenuto","avresti appartenuto; saresti appartenuto","avrebbe appartenuto; sarebbe appartenuto","avremmo appartenuto; saremmo appartenuti","avreste appartenuto; sareste appartenuti","avrebbero appartenuto; sarebbero appartenuti"],"pastSubjunctive":["appartenessi","appartenessi","appartenesse","appartenessimo","apparteneste","appartenessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi appartenuto; fossi appartenuto","avessi appartenuto; fossi appartenuto","avesse appartenuto; fosse appartenuto","avessimo appartenuto; fossimo appartenuti","aveste appartenuto; foste appartenuti","avessero appartenuto; fossero appartenuti"],"imperfectIndicative":["appartenevo","appartenevi","apparteneva","appartenevamo","appartenevate","appartenevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi appartenuto; fui appartenuto","avesti appartenuto; fosti appartenuto","ebbe appartenuto; fu appartenuto","avemmo appartenuto; fummo appartenuti","aveste appartenuto; foste appartenuti","ebbero appartenuto; furono appartenuti"],"verb":"appartenere","imperative":["appartieni","appartenga","apparteniamo","appartenete","appartengano"],"presentIndicative":["appartengo","appartieni","appartiene","apparteniamo","appartenete","appartengono"],"presentConditional":["apparterrei","apparterresti","apparterrebbe","apparterremmo","apparterreste","apparterrebbero"],"impersonalForms":["appartenere","appartenente","appartenendo","appartenuto","avere appartenuto; essere appartenuto","avendo appartenuto; essendo appartenuto","avente appartenuto; essente appartenuto"],"pastIndicative":["ho appartenuto; sono appartenuto","hai appartenuto; sei appartenuto","ha appartenuto; \\xE8 appartenuto","abbiamo appartenuto; siamo appartenuti","avete appartenuto; siete appartenuti","hanno appartenuto; sono appartenuti"],"futureIndicative":["apparterr\\xF2","apparterrai","apparterr\\xE0","apparterremo","apparterrete","apparterranno"]},{"futurePerfectIndicative":["avr\\xF2 aperto","avrai aperto","avr\\xE0 aperto","avremo aperto","avrete aperto","avranno aperto"],"presentSubjunctive":["apra","apra","apra","apriamo","apriate","aprano"],"pastRemoteIndicative":["aprii; apersi","apristi","apr\\xEC; aperse","aprimmo","apriste","aprirono; apersero"],"pluperfectIndicative":["avevo aperto","avevi aperto","aveva aperto","avevamo aperto","avevate aperto","avevano aperto"],"imperfectSubjunctive":["abbia aperto","abbia aperto","abbia aperto","abbiamo aperto","abbiate aperto","abbiano aperto"],"pastConditional":["avrei aperto","avresti aperto","avrebbe aperto","avremmo aperto","avreste aperto","avrebbero aperto"],"pastSubjunctive":["aprissi","aprissi","aprisse","aprissimo","apriste","aprissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi aperto","avessi aperto","avesse aperto","avessimo aperto","aveste aperto","avessero aperto"],"imperfectIndicative":["aprivo","aprivi","apriva","aprivamo","aprivate","aprivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi aperto","avesti aperto","ebbe aperto","avemmo aperto","aveste aperto","ebbero aperto"],"verb":"aprire","imperative":["apri","apra","apriamo","aprite","aprano"],"presentIndicative":["apro","apri","apre","apriamo","aprite","aprono"],"presentConditional":["aprirei","apriresti","aprirebbe","apriremmo","aprireste","aprirebbero"],"impersonalForms":["aprire","aprente","aprendo","aperto","avere aperto","avendo aperto","avente aperto"],"pastIndicative":["ho aperto","hai aperto","ha aperto","abbiamo aperto","avete aperto","hanno aperto"],"futureIndicative":["aprir\\xF2","aprirai","aprir\\xE0","apriremo","aprirete","apriranno"]},{"futurePerfectIndicative":["sar\\xF2 arrivato","sarai arrivato","sar\\xE0 arrivato","saremo arrivati","sarete arrivati","saranno arrivati"],"presentSubjunctive":["arrivi","arrivi","arrivi","arriviamo","arriviate","arrivino"],"pastRemoteIndicative":["arrivai","arrivasti","arriv\\xF2","arrivammo","arrivaste","arrivarono"],"pluperfectIndicative":["ero arrivato","eri arrivato","era arrivato","eravamo arrivati","eravate arrivati","erano arrivati"],"imperfectSubjunctive":["sia arrivato","sia arrivato","sia arrivato","siamo arrivati","siate arrivati","siano arrivati"],"pastConditional":["sarei arrivato","saresti arrivato","sarebbe arrivato","saremmo arrivati","sareste arrivati","sarebbero arrivati"],"pastSubjunctive":["arrivassi","arrivassi","arrivasse","arrivassimo","arrivaste","arrivassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi arrivato","fossi arrivato","fosse arrivato","fossimo arrivati","foste arrivati","fossero arrivati"],"imperfectIndicative":["arrivavo","arrivavi","arrivava","arrivavamo","arrivavate","arrivavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui arrivato","fosti arrivato","fu arrivato","fummo arrivati","foste arrivati","furono arrivati"],"verb":"arrivare","imperative":["arriva","arrivi","arriviamo","arrivate","arrivino"],"presentIndicative":["arrivo","arrivi","arriva","arriviamo","arrivate","arrivano"],"presentConditional":["arriverei","arriveresti","arriverebbe","arriveremmo","arrivereste","arriverebbero"],"impersonalForms":["arrivare","arrivante","arrivando","arrivato","essere arrivato","essendo arrivato","essente arrivato"],"pastIndicative":["sono arrivato","sei arrivato","\\xE8 arrivato","siamo arrivati","siete arrivati","sono arrivati"],"futureIndicative":["arriver\\xF2","arriverai","arriver\\xE0","arriveremo","arriverete","arriveranno"]},{"futurePerfectIndicative":["avr\\xF2 arrostito","avrai arrostito","avr\\xE0 arrostito","avremo arrostito","avrete arrostito","avranno arrostito"],"presentSubjunctive":["arrostisca","arrostisca","arrostisca","arrostiamo","arrostiate","arrostiscano"],"pastRemoteIndicative":["arrostii","arrostisti","arrost\\xEC","arrostimmo","arrostiste","arrostirono"],"pluperfectIndicative":["avevo arrostito","avevi arrostito","aveva arrostito","avevamo arrostito","avevate arrostito","avevano arrostito"],"imperfectSubjunctive":["abbia arrostito","abbia arrostito","abbia arrostito","abbiamo arrostito","abbiate arrostito","abbiano arrostito"],"pastConditional":["avrei arrostito","avresti arrostito","avrebbe arrostito","avremmo arrostito","avreste arrostito","avrebbero arrostito"],"pastSubjunctive":["arrostissi","arrostissi","arrostisse","arrostissimo","arrostiste","arrostissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi arrostito","avessi arrostito","avesse arrostito","avessimo arrostito","aveste arrostito","avessero arrostito"],"imperfectIndicative":["arrostivo","arrostivi","arrostiva","arrostivamo","arrostivate","arrostivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi arrostito","avesti arrostito","ebbe arrostito","avemmo arrostito","aveste arrostito","ebbero arrostito"],"verb":"arrostire","imperative":["arrostisci","arrostisca","arrostiamo","arrostite","arrostiscano"],"presentIndicative":["arrostisco","arrostisci","arrostisce","arrostiamo","arrostite","arrostiscono"],"presentConditional":["arrostirei","arrostiresti","arrostirebbe","arrostiremmo","arrostireste","arrostirebbero"],"impersonalForms":["arrostire","arrostente","arrostendo","arrostito","avere arrostito","avendo arrostito","avente arrostito"],"pastIndicative":["ho arrostito","hai arrostito","ha arrostito","abbiamo arrostito","avete arrostito","hanno arrostito"],"futureIndicative":["arrostir\\xF2","arrostirai","arrostir\\xE0","arrostiremo","arrostirete","arrostiranno"]},{"futurePerfectIndicative":["avr\\xF2 asciugato","avrai asciugato","avr\\xE0 asciugato","avremo asciugato","avrete asciugato","avranno asciugato"],"presentSubjunctive":["asciughi","asciughi","asciughi","asciughiamo","asciughiate","asciughino"],"pastRemoteIndicative":["asciugai","asciugasti","asciug\\xF2","asciugammo","asciugaste","asciugarono"],"pluperfectIndicative":["avevo asciugato","avevi asciugato","aveva asciugato","avevamo asciugato","avevate asciugato","avevano asciugato"],"imperfectSubjunctive":["abbia asciugato","abbia asciugato","abbia asciugato","abbiamo asciugato","abbiate asciugato","abbiano asciugato"],"pastConditional":["avrei asciugato","avresti asciugato","avrebbe asciugato","avremmo asciugato","avreste asciugato","avrebbero asciugato"],"pastSubjunctive":["asciugassi","asciugassi","asciugasse","asciugassimo","asciugaste","asciugassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi asciugato","avessi asciugato","avesse asciugato","avessimo asciugato","aveste asciugato","avessero asciugato"],"imperfectIndicative":["asciugavo","asciugavi","asciugava","asciugavamo","asciugavate","asciugavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi asciugato","avesti asciugato","ebbe asciugato","avemmo asciugato","aveste asciugato","ebbero asciugato"],"verb":"asciugare","imperative":["asciuga","asciughi","asciughiamo","asciugate","asciughino"],"presentIndicative":["asciugo","asciughi","asciuga","asciughiamo","asciugate","asciugano"],"presentConditional":["asciugherei","asciugheresti","asciugherebbe","asciugheremmo","asciughereste","asciugherebbero"],"impersonalForms":["asciugare","asciugante","asciugando","asciugato","avere asciugato","avendo asciugato","avente asciugato"],"pastIndicative":["ho asciugato","hai asciugato","ha asciugato","abbiamo asciugato","avete asciugato","hanno asciugato"],"futureIndicative":["asciugher\\xF2","asciugherai","asciugher\\xE0","asciugheremo","asciugherete","asciugheranno"]},{"futurePerfectIndicative":["avr\\xF2 ascoltato","avrai ascoltato","avr\\xE0 ascoltato","avremo ascoltato","avrete ascoltato","avranno ascoltato"],"presentSubjunctive":["ascolti","ascolti","ascolti","ascoltiamo","ascoltiate","ascoltino"],"pastRemoteIndicative":["ascoltai","ascoltasti","ascolt\\xF2","ascoltammo","ascoltaste","ascoltarono"],"pluperfectIndicative":["avevo ascoltato","avevi ascoltato","aveva ascoltato","avevamo ascoltato","avevate ascoltato","avevano ascoltato"],"imperfectSubjunctive":["abbia ascoltato","abbia ascoltato","abbia ascoltato","abbiamo ascoltato","abbiate ascoltato","abbiano ascoltato"],"pastConditional":["avrei ascoltato","avresti ascoltato","avrebbe ascoltato","avremmo ascoltato","avreste ascoltato","avrebbero ascoltato"],"pastSubjunctive":["ascoltassi","ascoltassi","ascoltasse","ascoltassimo","ascoltaste","ascoltassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ascoltato","avessi ascoltato","avesse ascoltato","avessimo ascoltato","aveste ascoltato","avessero ascoltato"],"imperfectIndicative":["ascoltavo","ascoltavi","ascoltava","ascoltavamo","ascoltavate","ascoltavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ascoltato","avesti ascoltato","ebbe ascoltato","avemmo ascoltato","aveste ascoltato","ebbero ascoltato"],"verb":"ascoltare","imperative":["ascolta","ascolti","ascoltiamo","ascoltate","ascoltino"],"presentIndicative":["ascolto","ascolti","ascolta","ascoltiamo","ascoltate","ascoltano"],"presentConditional":["ascolterei","ascolteresti","ascolterebbe","ascolteremmo","ascoltereste","ascolterebbero"],"impersonalForms":["ascoltare","ascoltante","ascoltando","ascoltato","avere ascoltato","avendo ascoltato","avente ascoltato"],"pastIndicative":["ho ascoltato","hai ascoltato","ha ascoltato","abbiamo ascoltato","avete ascoltato","hanno ascoltato"],"futureIndicative":["ascolter\\xF2","ascolterai","ascolter\\xE0","ascolteremo","ascolterete","ascolteranno"]},{"futurePerfectIndicative":["avr\\xF2 aspettato","avrai aspettato","avr\\xE0 aspettato","avremo aspettato","avrete aspettato","avranno aspettato"],"presentSubjunctive":["aspetti","aspetti","aspetti","aspettiamo","aspettiate","aspettino"],"pastRemoteIndicative":["aspettai","aspettasti","aspett\\xF2","aspettammo","aspettaste","aspettarono"],"pluperfectIndicative":["avevo aspettato","avevi aspettato","aveva aspettato","avevamo aspettato","avevate aspettato","avevano aspettato"],"imperfectSubjunctive":["abbia aspettato","abbia aspettato","abbia aspettato","abbiamo aspettato","abbiate aspettato","abbiano aspettato"],"pastConditional":["avrei aspettato","avresti aspettato","avrebbe aspettato","avremmo aspettato","avreste aspettato","avrebbero aspettato"],"pastSubjunctive":["aspettassi","aspettassi","aspettasse","aspettassimo","aspettaste","aspettassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi aspettato","avessi aspettato","avesse aspettato","avessimo aspettato","aveste aspettato","avessero aspettato"],"imperfectIndicative":["aspettavo","aspettavi","aspettava","aspettavamo","aspettavate","aspettavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi aspettato","avesti aspettato","ebbe aspettato","avemmo aspettato","aveste aspettato","ebbero aspettato"],"verb":"aspettare","imperative":["aspetta","aspetti","aspettiamo","aspettate","aspettino"],"presentIndicative":["aspetto","aspetti","aspetta","aspettiamo","aspettate","aspettano"],"presentConditional":["aspetterei","aspetteresti","aspetterebbe","aspetteremmo","aspettereste","aspetterebbero"],"impersonalForms":["aspettare","aspettante","aspettando","aspettato","avere aspettato","avendo aspettato","avente aspettato"],"pastIndicative":["ho aspettato","hai aspettato","ha aspettato","abbiamo aspettato","avete aspettato","hanno aspettato"],"futureIndicative":["aspetter\\xF2","aspetterai","aspetter\\xE0","aspetteremo","aspetterete","aspetteranno"]},{"futurePerfectIndicative":["avr\\xF2 attraversato","avrai attraversato","avr\\xE0 attraversato","avremo attraversato","avrete attraversato","avranno attraversato"],"presentSubjunctive":["attraversi","attraversi","attraversi","attraversiamo","attraversiate","attraversino"],"pastRemoteIndicative":["attraversai","attraversasti","attravers\\xF2","attraversammo","attraversaste","attraversarono"],"pluperfectIndicative":["avevo attraversato","avevi attraversato","aveva attraversato","avevamo attraversato","avevate attraversato","avevano attraversato"],"imperfectSubjunctive":["abbia attraversato","abbia attraversato","abbia attraversato","abbiamo attraversato","abbiate attraversato","abbiano attraversato"],"pastConditional":["avrei attraversato","avresti attraversato","avrebbe attraversato","avremmo attraversato","avreste attraversato","avrebbero attraversato"],"pastSubjunctive":["attraversassi","attraversassi","attraversasse","attraversassimo","attraversaste","attraversassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi attraversato","avessi attraversato","avesse attraversato","avessimo attraversato","aveste attraversato","avessero attraversato"],"imperfectIndicative":["attraversavo","attraversavi","attraversava","attraversavamo","attraversavate","attraversavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi attraversato","avesti attraversato","ebbe attraversato","avemmo attraversato","aveste attraversato","ebbero attraversato"],"verb":"attraversare","imperative":["attraversa","attraversi","attraversiamo","attraversate","attraversino"],"presentIndicative":["attraverso","attraversi","attraversa","attraversiamo","attraversate","attraversano"],"presentConditional":["attraverserei","attraverseresti","attraverserebbe","attraverseremmo","attraversereste","attraverserebbero"],"impersonalForms":["attraversare","attraversante","attraversando","attraversato","avere attraversato","avendo attraversato","avente attraversato"],"pastIndicative":["ho attraversato","hai attraversato","ha attraversato","abbiamo attraversato","avete attraversato","hanno attraversato"],"futureIndicative":["attraverser\\xF2","attraverserai","attraverser\\xE0","attraverseremo","attraverserete","attraverseranno"]},{"futurePerfectIndicative":["avr\\xF2 avuto","avrai avuto","avr\\xE0 avuto","avremo avuto","avrete avuto","avranno avuto"],"presentSubjunctive":["abbia","abbia","abbia","abbiamo","abbiate","abbiano"],"pastRemoteIndicative":["ebbi","avesti","ebbe","avemmo","aveste","ebbero"],"pluperfectIndicative":["avevo avuto","avevi avuto","aveva avuto","avevamo avuto","avevate avuto","avevano avuto"],"imperfectSubjunctive":["abbia avuto","abbia avuto","abbia avuto","abbiamo avuto","abbiate avuto","abbiano avuto"],"pastConditional":["avrei avuto","avresti avuto","avrebbe avuto","avremmo avuto","avreste avuto","avrebbero avuto"],"pastSubjunctive":["avessi","avessi","avesse","avessimo","aveste","avessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi avuto","avessi avuto","avesse avuto","avessimo avuto","aveste avuto","avessero avuto"],"imperfectIndicative":["avevo","avevi","aveva","avevamo","avevate","avevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi avuto","avesti avuto","ebbe avuto","avemmo avuto","aveste avuto","ebbero avuto"],"verb":"avere","imperative":["abbi","abbia","abbiamo","abbiate","abbiano"],"presentIndicative":["ho","hai","ha","abbiamo","avete","hanno"],"presentConditional":["avrei","avresti","avrebbe","avremmo","avreste","avrebbero"],"impersonalForms":["avere","avente","avendo","avuto","avere avuto","avendo avuto","avente avuto"],"pastIndicative":["ho avuto","hai avuto","ha avuto","abbiamo avuto","avete avuto","hanno avuto"],"futureIndicative":["avr\\xF2","avrai","avr\\xE0","avremo","avrete","avranno"]},{"futurePerfectIndicative":["avr\\xF2 baciato","avrai baciato","avr\\xE0 baciato","avremo baciato","avrete baciato","avranno baciato"],"presentSubjunctive":["baci","baci","baci","baciamo","baciate","bacino"],"pastRemoteIndicative":["baciai","baciasti","baci\\xF2","baciammo","baciaste","baciarono"],"pluperfectIndicative":["avevo baciato","avevi baciato","aveva baciato","avevamo baciato","avevate baciato","avevano baciato"],"imperfectSubjunctive":["abbia baciato","abbia baciato","abbia baciato","abbiamo baciato","abbiate baciato","abbiano baciato"],"pastConditional":["avrei baciato","avresti baciato","avrebbe baciato","avremmo baciato","avreste baciato","avrebbero baciato"],"pastSubjunctive":["baciassi","baciassi","baciasse","baciassimo","baciaste","baciassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi baciato","avessi baciato","avesse baciato","avessimo baciato","aveste baciato","avessero baciato"],"imperfectIndicative":["baciavo","baciavi","baciava","baciavamo","baciavate","baciavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi baciato","avesti baciato","ebbe baciato","avemmo baciato","aveste baciato","ebbero baciato"],"verb":"baciare","imperative":["bacia","baci","baciamo","baciate","bacino"],"presentIndicative":["bacio","baci","bacia","baciamo","baciate","baciano"],"presentConditional":["bacerei","baceresti","bacerebbe","baceremmo","bacereste","bacerebbero"],"impersonalForms":["baciare","baciante","baciando","baciato","avere baciato","avendo baciato","avente baciato"],"pastIndicative":["ho baciato","hai baciato","ha baciato","abbiamo baciato","avete baciato","hanno baciato"],"futureIndicative":["bacer\\xF2","bacerai","bacer\\xE0","baceremo","bacerete","baceranno"]},{"futurePerfectIndicative":["avr\\xF2 ballato","avrai ballato","avr\\xE0 ballato","avremo ballato","avrete ballato","avranno ballato"],"presentSubjunctive":["balli","balli","balli","balliamo","balliate","ballino"],"pastRemoteIndicative":["ballai","ballasti","ball\\xF2","ballammo","ballaste","ballarono"],"pluperfectIndicative":["avevo ballato","avevi ballato","aveva ballato","avevamo ballato","avevate ballato","avevano ballato"],"imperfectSubjunctive":["abbia ballato","abbia ballato","abbia ballato","abbiamo ballato","abbiate ballato","abbiano ballato"],"pastConditional":["avrei ballato","avresti ballato","avrebbe ballato","avremmo ballato","avreste ballato","avrebbero ballato"],"pastSubjunctive":["ballassi","ballassi","ballasse","ballassimo","ballaste","ballassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ballato","avessi ballato","avesse ballato","avessimo ballato","aveste ballato","avessero ballato"],"imperfectIndicative":["ballavo","ballavi","ballava","ballavamo","ballavate","ballavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ballato","avesti ballato","ebbe ballato","avemmo ballato","aveste ballato","ebbero ballato"],"verb":"ballare","imperative":["balla","balli","balliamo","ballate","ballino"],"presentIndicative":["ballo","balli","balla","balliamo","ballate","ballano"],"presentConditional":["ballerei","balleresti","ballerebbe","balleremmo","ballereste","ballerebbero"],"impersonalForms":["ballare","ballante","ballando","ballato","avere ballato","avendo ballato","avente ballato"],"pastIndicative":["ho ballato","hai ballato","ha ballato","abbiamo ballato","avete ballato","hanno ballato"],"futureIndicative":["baller\\xF2","ballerai","baller\\xE0","balleremo","ballerete","balleranno"]},{"futurePerfectIndicative":["avr\\xF2 bevuto","avrai bevuto","avr\\xE0 bevuto","avremo bevuto","avrete bevuto","avranno bevuto"],"presentSubjunctive":["beva","beva","beva","beviamo","beviate","bevano"],"pastRemoteIndicative":["bevvi; bevetti","bevesti","bevve; bevette","bevemmo","beveste","bevvero; bevettero"],"pluperfectIndicative":["avevo bevuto","avevi bevuto","aveva bevuto","avevamo bevuto","avevate bevuto","avevano bevuto"],"imperfectSubjunctive":["abbia bevuto","abbia bevuto","abbia bevuto","abbiamo bevuto","abbiate bevuto","abbiano bevuto"],"pastConditional":["avrei bevuto","avresti bevuto","avrebbe bevuto","avremmo bevuto","avreste bevuto","avrebbero bevuto"],"pastSubjunctive":["bevessi","bevessi","bevesse","bevessimo","beveste","bevessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi bevuto","avessi bevuto","avesse bevuto","avessimo bevuto","aveste bevuto","avessero bevuto"],"imperfectIndicative":["bevevo","bevevi","beveva","bevevamo","bevevate","bevevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi bevuto","avesti bevuto","ebbe bevuto","avemmo bevuto","aveste bevuto","ebbero bevuto"],"verb":"bere","imperative":["bevi","beva","beviamo","bevete","bevano"],"presentIndicative":["bevo","bevi","beve","beviamo","bevete","bevono"],"presentConditional":["berrei","berresti","berrebbe","berremmo","berreste","berrebbero"],"impersonalForms":["bere; bevere","bevente","bevendo","bevuto","avere bevuto","avendo bevuto","avente bevuto"],"pastIndicative":["ho bevuto","hai bevuto","ha bevuto","abbiamo bevuto","avete bevuto","hanno bevuto"],"futureIndicative":["berr\\xF2","berrai","berr\\xE0","berremo","berrete","berranno"]},{"futurePerfectIndicative":["avr\\xF2 bollito","avrai bollito","avr\\xE0 bollito","avremo bollito","avrete bollito","avranno bollito"],"presentSubjunctive":["bollisca","bollisca","bollisca","bolliamo","bolliate","bolliscano"],"pastRemoteIndicative":["bollii","bollisti","boll\\xEC","bollimmo","bolliste","bollirono"],"pluperfectIndicative":["avevo bollito","avevi bollito","aveva bollito","avevamo bollito","avevate bollito","avevano bollito"],"imperfectSubjunctive":["abbia bollito","abbia bollito","abbia bollito","abbiamo bollito","abbiate bollito","abbiano bollito"],"pastConditional":["avrei bollito","avresti bollito","avrebbe bollito","avremmo bollito","avreste bollito","avrebbero bollito"],"pastSubjunctive":["bollissi","bollissi","bollisse","bollissimo","bolliste","bollissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi bollito","avessi bollito","avesse bollito","avessimo bollito","aveste bollito","avessero bollito"],"imperfectIndicative":["bollivo","bollivi","bolliva","bollivamo","bollivate","bollivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi bollito","avesti bollito","ebbe bollito","avemmo bollito","aveste bollito","ebbero bollito"],"verb":"bollire","imperative":["bollisci","bollisca","bolliamo","bollite","bolliscano"],"presentIndicative":["bollisco","bollisci","bollisce","bolliamo","bollite","bolliscono"],"presentConditional":["bollirei","bolliresti","bollirebbe","bolliremmo","bollireste","bollirebbero"],"impersonalForms":["bollire","bollente","bollendo","bollito","avere bollito","avendo bollito","avente bollito"],"pastIndicative":["ho bollito","hai bollito","ha bollito","abbiamo bollito","avete bollito","hanno bollito"],"futureIndicative":["bollir\\xF2","bollirai","bollir\\xE0","bolliremo","bollirete","bolliranno"]},{"futurePerfectIndicative":["avr\\xF2 bruciato","avrai bruciato","avr\\xE0 bruciato","avremo bruciato","avrete bruciato","avranno bruciato"],"presentSubjunctive":["bruci","bruci","bruci","bruciamo","bruciate","brucino"],"pastRemoteIndicative":["bruciai","bruciasti","bruci\\xF2","bruciammo","bruciaste","bruciarono"],"pluperfectIndicative":["avevo bruciato","avevi bruciato","aveva bruciato","avevamo bruciato","avevate bruciato","avevano bruciato"],"imperfectSubjunctive":["abbia bruciato","abbia bruciato","abbia bruciato","abbiamo bruciato","abbiate bruciato","abbiano bruciato"],"pastConditional":["avrei bruciato","avresti bruciato","avrebbe bruciato","avremmo bruciato","avreste bruciato","avrebbero bruciato"],"pastSubjunctive":["bruciassi","bruciassi","bruciasse","bruciassimo","bruciaste","bruciassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi bruciato","avessi bruciato","avesse bruciato","avessimo bruciato","aveste bruciato","avessero bruciato"],"imperfectIndicative":["bruciavo","bruciavi","bruciava","bruciavamo","bruciavate","bruciavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi bruciato","avesti bruciato","ebbe bruciato","avemmo bruciato","aveste bruciato","ebbero bruciato"],"verb":"bruciare","imperative":["brucia","bruci","bruciamo","bruciate","brucino"],"presentIndicative":["brucio","bruci","brucia","bruciamo","bruciate","bruciano"],"presentConditional":["brucerei","bruceresti","brucerebbe","bruceremmo","brucereste","brucerebbero"],"impersonalForms":["bruciare","bruciante","bruciando","bruciato","avere bruciato","avendo bruciato","avente bruciato"],"pastIndicative":["ho bruciato","hai bruciato","ha bruciato","abbiamo bruciato","avete bruciato","hanno bruciato"],"futureIndicative":["brucer\\xF2","brucerai","brucer\\xE0","bruceremo","brucerete","bruceranno"]},{"futurePerfectIndicative":["sar\\xF2 caduto","sarai caduto","sar\\xE0 caduto","saremo caduti","sarete caduti","saranno caduti"],"presentSubjunctive":["cada","cada","cada","cadiamo","cadiate","cadano"],"pastRemoteIndicative":["caddi","cadesti","cadde","cademmo","cadeste","caddero"],"pluperfectIndicative":["ero caduto","eri caduto","era caduto","eravamo caduti","eravate caduti","erano caduti"],"imperfectSubjunctive":["sia caduto","sia caduto","sia caduto","siamo caduti","siate caduti","siano caduti"],"pastConditional":["sarei caduto","saresti caduto","sarebbe caduto","saremmo caduti","sareste caduti","sarebbero caduti"],"pastSubjunctive":["cadessi","cadessi","cadesse","cadessimo","cadeste","cadessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi caduto","fossi caduto","fosse caduto","fossimo caduti","foste caduti","fossero caduti"],"imperfectIndicative":["cadevo","cadevi","cadeva","cadevamo","cadevate","cadevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui caduto","fosti caduto","fu caduto","fummo caduti","foste caduti","furono caduti"],"verb":"cadere","imperative":["cadi","cada","cadiamo","cadete","cadano"],"presentIndicative":["cado","cadi","cade","cadiamo","cadete","cadono"],"presentConditional":["cadrei","cadresti","cadrebbe","cadremmo","cadreste","cadrebbero"],"impersonalForms":["cadere","cadente","cadendo","caduto","essere caduto","essendo caduto","essente caduto"],"pastIndicative":["sono caduto","sei caduto","\\xE8 caduto","siamo caduti","siete caduti","sono caduti"],"futureIndicative":["cadr\\xF2","cadrai","cadr\\xE0","cadremo","cadrete","cadranno"]},{"futurePerfectIndicative":["avr\\xF2 cambiato; sar\\xF2 cambiato","avrai cambiato; sarai cambiato","avr\\xE0 cambiato; sar\\xE0 cambiato","avremo cambiato; saremo cambiati","avrete cambiato; sarete cambiati","avranno cambiato; saranno cambiati"],"presentSubjunctive":["cambi","cambi","cambi","cambiamo","cambiate","cambino"],"pastRemoteIndicative":["cambiai","cambiasti","cambi\\xF2","cambiammo","cambiaste","cambiarono"],"pluperfectIndicative":["avevo cambiato; ero cambiato","avevi cambiato; eri cambiato","aveva cambiato; era cambiato","avevamo cambiato; eravamo cambiati","avevate cambiato; eravate cambiati","avevano cambiato; erano cambiati"],"imperfectSubjunctive":["abbia cambiato; sia cambiato","abbia cambiato; sia cambiato","abbia cambiato; sia cambiato","abbiamo cambiato; siamo cambiati","abbiate cambiato; siate cambiati","abbiano cambiato; siano cambiati"],"pastConditional":["avrei cambiato; sarei cambiato","avresti cambiato; saresti cambiato","avrebbe cambiato; sarebbe cambiato","avremmo cambiato; saremmo cambiati","avreste cambiato; sareste cambiati","avrebbero cambiato; sarebbero cambiati"],"pastSubjunctive":["cambiassi","cambiassi","cambiasse","cambiassimo","cambiaste","cambiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cambiato; fossi cambiato","avessi cambiato; fossi cambiato","avesse cambiato; fosse cambiato","avessimo cambiato; fossimo cambiati","aveste cambiato; foste cambiati","avessero cambiato; fossero cambiati"],"imperfectIndicative":["cambiavo","cambiavi","cambiava","cambiavamo","cambiavate","cambiavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi cambiato; fui cambiato","avesti cambiato; fosti cambiato","ebbe cambiato; fu cambiato","avemmo cambiato; fummo cambiati","aveste cambiato; foste cambiati","ebbero cambiato; furono cambiati"],"verb":"cambiare","imperative":["cambia","cambi","cambiamo","cambiate","cambino"],"presentIndicative":["cambio","cambi","cambia","cambiamo","cambiate","cambiano"],"presentConditional":["cambierei","cambieresti","cambierebbe","cambieremmo","cambiereste","cambierebbero"],"impersonalForms":["cambiare","cambiante","cambiando","cambiato","avere cambiato; essere cambiato","avendo cambiato; essendo cambiato","avente cambiato; essente cambiato"],"pastIndicative":["ho cambiato; sono cambiato","hai cambiato; sei cambiato","ha cambiato; \\xE8 cambiato","abbiamo cambiato; siamo cambiati","avete cambiato; siete cambiati","hanno cambiato; sono cambiati"],"futureIndicative":["cambier\\xF2","cambierai","cambier\\xE0","cambieremo","cambierete","cambieranno"]},{"futurePerfectIndicative":["avr\\xF2 camminato","avrai camminato","avr\\xE0 camminato","avremo camminato","avrete camminato","avranno camminato"],"presentSubjunctive":["cammini","cammini","cammini","camminiamo","camminiate","camminino"],"pastRemoteIndicative":["camminai","camminasti","cammin\\xF2","camminammo","camminaste","camminarono"],"pluperfectIndicative":["avevo camminato","avevi camminato","aveva camminato","avevamo camminato","avevate camminato","avevano camminato"],"imperfectSubjunctive":["abbia camminato","abbia camminato","abbia camminato","abbiamo camminato","abbiate camminato","abbiano camminato"],"pastConditional":["avrei camminato","avresti camminato","avrebbe camminato","avremmo camminato","avreste camminato","avrebbero camminato"],"pastSubjunctive":["camminassi","camminassi","camminasse","camminassimo","camminaste","camminassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi camminato","avessi camminato","avesse camminato","avessimo camminato","aveste camminato","avessero camminato"],"imperfectIndicative":["camminavo","camminavi","camminava","camminavamo","camminavate","camminavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi camminato","avesti camminato","ebbe camminato","avemmo camminato","aveste camminato","ebbero camminato"],"verb":"camminare","imperative":["cammina","cammini","camminiamo","camminate","camminino"],"presentIndicative":["cammino","cammini","cammina","camminiamo","camminate","camminano"],"presentConditional":["camminerei","cammineresti","camminerebbe","cammineremmo","camminereste","camminerebbero"],"impersonalForms":["camminare","camminante","camminando","camminato","avere camminato","avendo camminato","avente camminato"],"pastIndicative":["ho camminato","hai camminato","ha camminato","abbiamo camminato","avete camminato","hanno camminato"],"futureIndicative":["camminer\\xF2","camminerai","camminer\\xE0","cammineremo","camminerete","cammineranno"]},{"futurePerfectIndicative":["avr\\xF2 cantato","avrai cantato","avr\\xE0 cantato","avremo cantato","avrete cantato","avranno cantato"],"presentSubjunctive":["canti","canti","canti","cantiamo","cantiate","cantino"],"pastRemoteIndicative":["cantai","cantasti","cant\\xF2","cantammo","cantaste","cantarono"],"pluperfectIndicative":["avevo cantato","avevi cantato","aveva cantato","avevamo cantato","avevate cantato","avevano cantato"],"imperfectSubjunctive":["abbia cantato","abbia cantato","abbia cantato","abbiamo cantato","abbiate cantato","abbiano cantato"],"pastConditional":["avrei cantato","avresti cantato","avrebbe cantato","avremmo cantato","avreste cantato","avrebbero cantato"],"pastSubjunctive":["cantassi","cantassi","cantasse","cantassimo","cantaste","cantassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cantato","avessi cantato","avesse cantato","avessimo cantato","aveste cantato","avessero cantato"],"imperfectIndicative":["cantavo","cantavi","cantava","cantavamo","cantavate","cantavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi cantato","avesti cantato","ebbe cantato","avemmo cantato","aveste cantato","ebbero cantato"],"verb":"cantare","imperative":["canta","canti","cantiamo","cantate","cantino"],"presentIndicative":["canto","canti","canta","cantiamo","cantate","cantano"],"presentConditional":["canterei","canteresti","canterebbe","canteremmo","cantereste","canterebbero"],"impersonalForms":["cantare","cantante","cantando","cantato","avere cantato","avendo cantato","avente cantato"],"pastIndicative":["ho cantato","hai cantato","ha cantato","abbiamo cantato","avete cantato","hanno cantato"],"futureIndicative":["canter\\xF2","canterai","canter\\xE0","canteremo","canterete","canteranno"]},{"futurePerfectIndicative":["avr\\xF2 capito","avrai capito","avr\\xE0 capito","avremo capito","avrete capito","avranno capito"],"presentSubjunctive":["capisca","capisca","capisca","capiamo","capiate","capiscano"],"pastRemoteIndicative":["capii","capisti","cap\\xEC","capimmo","capiste","capirono"],"pluperfectIndicative":["avevo capito","avevi capito","aveva capito","avevamo capito","avevate capito","avevano capito"],"imperfectSubjunctive":["abbia capito","abbia capito","abbia capito","abbiamo capito","abbiate capito","abbiano capito"],"pastConditional":["avrei capito","avresti capito","avrebbe capito","avremmo capito","avreste capito","avrebbero capito"],"pastSubjunctive":["capissi","capissi","capisse","capissimo","capiste","capissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi capito","avessi capito","avesse capito","avessimo capito","aveste capito","avessero capito"],"imperfectIndicative":["capivo","capivi","capiva","capivamo","capivate","capivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi capito","avesti capito","ebbe capito","avemmo capito","aveste capito","ebbero capito"],"verb":"capire","imperative":["capisci","capisca","capiamo","capite","capiscano"],"presentIndicative":["capisco","capisci","capisce","capiamo","capite","capiscono"],"presentConditional":["capirei","capiresti","capirebbe","capiremmo","capireste","capirebbero"],"impersonalForms":["capire","capente","capendo","capito","avere capito","avendo capito","avente capito"],"pastIndicative":["ho capito","hai capito","ha capito","abbiamo capito","avete capito","hanno capito"],"futureIndicative":["capir\\xF2","capirai","capir\\xE0","capiremo","capirete","capiranno"]},{"futurePerfectIndicative":["avr\\xF2 cercato","avrai cercato","avr\\xE0 cercato","avremo cercato","avrete cercato","avranno cercato"],"presentSubjunctive":["cerchi","cerchi","cerchi","cerchiamo","cerchiate","cerchino"],"pastRemoteIndicative":["cercai","cercasti","cerc\\xF2","cercammo","cercaste","cercarono"],"pluperfectIndicative":["avevo cercato","avevi cercato","aveva cercato","avevamo cercato","avevate cercato","avevano cercato"],"imperfectSubjunctive":["abbia cercato","abbia cercato","abbia cercato","abbiamo cercato","abbiate cercato","abbiano cercato"],"pastConditional":["avrei cercato","avresti cercato","avrebbe cercato","avremmo cercato","avreste cercato","avrebbero cercato"],"pastSubjunctive":["cercassi","cercassi","cercasse","cercassimo","cercaste","cercassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cercato","avessi cercato","avesse cercato","avessimo cercato","aveste cercato","avessero cercato"],"imperfectIndicative":["cercavo","cercavi","cercava","cercavamo","cercavate","cercavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi cercato","avesti cercato","ebbe cercato","avemmo cercato","aveste cercato","ebbero cercato"],"verb":"cercare","imperative":["cerca","cerchi","cerchiamo","cercate","cerchino"],"presentIndicative":["cerco","cerchi","cerca","cerchiamo","cercate","cercano"],"presentConditional":["cercherei","cercheresti","cercherebbe","cercheremmo","cerchereste","cercherebbero"],"impersonalForms":["cercare","cercante","cercando","cercato","avere cercato","avendo cercato","avente cercato"],"pastIndicative":["ho cercato","hai cercato","ha cercato","abbiamo cercato","avete cercato","hanno cercato"],"futureIndicative":["cercher\\xF2","cercherai","cercher\\xE0","cercheremo","cercherete","cercheranno"]},{"futurePerfectIndicative":["avr\\xF2 chiamato","avrai chiamato","avr\\xE0 chiamato","avremo chiamato","avrete chiamato","avranno chiamato"],"presentSubjunctive":["chiami","chiami","chiami","chiamiamo","chiamiate","chiamino"],"pastRemoteIndicative":["chiamai","chiamasti","chiam\\xF2","chiamammo","chiamaste","chiamarono"],"pluperfectIndicative":["avevo chiamato","avevi chiamato","aveva chiamato","avevamo chiamato","avevate chiamato","avevano chiamato"],"imperfectSubjunctive":["abbia chiamato","abbia chiamato","abbia chiamato","abbiamo chiamato","abbiate chiamato","abbiano chiamato"],"pastConditional":["avrei chiamato","avresti chiamato","avrebbe chiamato","avremmo chiamato","avreste chiamato","avrebbero chiamato"],"pastSubjunctive":["chiamassi","chiamassi","chiamasse","chiamassimo","chiamaste","chiamassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi chiamato","avessi chiamato","avesse chiamato","avessimo chiamato","aveste chiamato","avessero chiamato"],"imperfectIndicative":["chiamavo","chiamavi","chiamava","chiamavamo","chiamavate","chiamavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi chiamato","avesti chiamato","ebbe chiamato","avemmo chiamato","aveste chiamato","ebbero chiamato"],"verb":"chiamare","imperative":["chiama","chiami","chiamiamo","chiamate","chiamino"],"presentIndicative":["chiamo","chiami","chiama","chiamiamo","chiamate","chiamano"],"presentConditional":["chiamerei","chiameresti","chiamerebbe","chiameremmo","chiamereste","chiamerebbero"],"impersonalForms":["chiamare","chiamante","chiamando","chiamato","avere chiamato","avendo chiamato","avente chiamato"],"pastIndicative":["ho chiamato","hai chiamato","ha chiamato","abbiamo chiamato","avete chiamato","hanno chiamato"],"futureIndicative":["chiamer\\xF2","chiamerai","chiamer\\xE0","chiameremo","chiamerete","chiameranno"]},{"futurePerfectIndicative":["avr\\xF2 chiesto","avrai chiesto","avr\\xE0 chiesto","avremo chiesto","avrete chiesto","avranno chiesto"],"presentSubjunctive":["chieda","chieda","chieda","chiediamo","chiediate","chiedano"],"pastRemoteIndicative":["chiesi","chiedesti","chiese","chiedemmo","chiedeste","chiesero"],"pluperfectIndicative":["avevo chiesto","avevi chiesto","aveva chiesto","avevamo chiesto","avevate chiesto","avevano chiesto"],"imperfectSubjunctive":["abbia chiesto","abbia chiesto","abbia chiesto","abbiamo chiesto","abbiate chiesto","abbiano chiesto"],"pastConditional":["avrei chiesto","avresti chiesto","avrebbe chiesto","avremmo chiesto","avreste chiesto","avrebbero chiesto"],"pastSubjunctive":["chiedessi","chiedessi","chiedesse","chiedessimo","chiedeste","chiedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi chiesto","avessi chiesto","avesse chiesto","avessimo chiesto","aveste chiesto","avessero chiesto"],"imperfectIndicative":["chiedevo","chiedevi","chiedeva","chiedevamo","chiedevate","chiedevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi chiesto","avesti chiesto","ebbe chiesto","avemmo chiesto","aveste chiesto","ebbero chiesto"],"verb":"chiedere","imperative":["chiedi","chieda","chiediamo","chiedete","chiedano"],"presentIndicative":["chiedo","chiedi","chiede","chiediamo","chiedete","chiedono"],"presentConditional":["chiederei","chiederesti","chiederebbe","chiederemmo","chiedereste","chiederebbero"],"impersonalForms":["chiedere","chiedente","chiedendo","chiesto","avere chiesto","avendo chiesto","avente chiesto"],"pastIndicative":["ho chiesto","hai chiesto","ha chiesto","abbiamo chiesto","avete chiesto","hanno chiesto"],"futureIndicative":["chieder\\xF2","chiederai","chieder\\xE0","chiederemo","chiederete","chiederanno"]},{"futurePerfectIndicative":["avr\\xF2 chiuso","avrai chiuso","avr\\xE0 chiuso","avremo chiuso","avrete chiuso","avranno chiuso"],"presentSubjunctive":["chiuda","chiuda","chiuda","chiudiamo","chiudiate","chiudano"],"pastRemoteIndicative":["chiusi","chiudesti","chiuse","chiudemmo","chiudeste","chiusero"],"pluperfectIndicative":["avevo chiuso","avevi chiuso","aveva chiuso","avevamo chiuso","avevate chiuso","avevano chiuso"],"imperfectSubjunctive":["abbia chiuso","abbia chiuso","abbia chiuso","abbiamo chiuso","abbiate chiuso","abbiano chiuso"],"pastConditional":["avrei chiuso","avresti chiuso","avrebbe chiuso","avremmo chiuso","avreste chiuso","avrebbero chiuso"],"pastSubjunctive":["chiudessi","chiudessi","chiudesse","chiudessimo","chiudeste","chiudessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi chiuso","avessi chiuso","avesse chiuso","avessimo chiuso","aveste chiuso","avessero chiuso"],"imperfectIndicative":["chiudevo","chiudevi","chiudeva","chiudevamo","chiudevate","chiudevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi chiuso","avesti chiuso","ebbe chiuso","avemmo chiuso","aveste chiuso","ebbero chiuso"],"verb":"chiudere","imperative":["chiudi","chiuda","chiudiamo","chiudete","chiudano"],"presentIndicative":["chiudo","chiudi","chiude","chiudiamo","chiudete","chiudono"],"presentConditional":["chiuderei","chiuderesti","chiuderebbe","chiuderemmo","chiudereste","chiuderebbero"],"impersonalForms":["chiudere","chiudente","chiudendo","chiuso","avere chiuso","avendo chiuso","avente chiuso"],"pastIndicative":["ho chiuso","hai chiuso","ha chiuso","abbiamo chiuso","avete chiuso","hanno chiuso"],"futureIndicative":["chiuder\\xF2","chiuderai","chiuder\\xE0","chiuderemo","chiuderete","chiuderanno"]},{"futurePerfectIndicative":["avr\\xF2 colpito","avrai colpito","avr\\xE0 colpito","avremo colpito","avrete colpito","avranno colpito"],"presentSubjunctive":["colpisca","colpisca","colpisca","colpiamo","colpiate","colpiscano"],"pastRemoteIndicative":["colpii","colpisti","colp\\xEC","colpimmo","colpiste","colpirono"],"pluperfectIndicative":["avevo colpito","avevi colpito","aveva colpito","avevamo colpito","avevate colpito","avevano colpito"],"imperfectSubjunctive":["abbia colpito","abbia colpito","abbia colpito","abbiamo colpito","abbiate colpito","abbiano colpito"],"pastConditional":["avrei colpito","avresti colpito","avrebbe colpito","avremmo colpito","avreste colpito","avrebbero colpito"],"pastSubjunctive":["colpissi","colpissi","colpisse","colpissimo","colpiste","colpissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi colpito","avessi colpito","avesse colpito","avessimo colpito","aveste colpito","avessero colpito"],"imperfectIndicative":["colpivo","colpivi","colpiva","colpivamo","colpivate","colpivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi colpito","avesti colpito","ebbe colpito","avemmo colpito","aveste colpito","ebbero colpito"],"verb":"colpire","imperative":["colpisci","colpisca","colpiamo","colpite","colpiscano"],"presentIndicative":["colpisco","colpisci","colpisce","colpiamo","colpite","colpiscono"],"presentConditional":["colpirei","colpiresti","colpirebbe","colpiremmo","colpireste","colpirebbero"],"impersonalForms":["colpire","colpente","colpendo","colpito","avere colpito","avendo colpito","avente colpito"],"pastIndicative":["ho colpito","hai colpito","ha colpito","abbiamo colpito","avete colpito","hanno colpito"],"futureIndicative":["colpir\\xF2","colpirai","colpir\\xE0","colpiremo","colpirete","colpiranno"]},{"futurePerfectIndicative":["avr\\xF2 coltivato","avrai coltivato","avr\\xE0 coltivato","avremo coltivato","avrete coltivato","avranno coltivato"],"presentSubjunctive":["coltivi","coltivi","coltivi","coltiviamo","coltiviate","coltivino"],"pastRemoteIndicative":["coltivai","coltivasti","coltiv\\xF2","coltivammo","coltivaste","coltivarono"],"pluperfectIndicative":["avevo coltivato","avevi coltivato","aveva coltivato","avevamo coltivato","avevate coltivato","avevano coltivato"],"imperfectSubjunctive":["abbia coltivato","abbia coltivato","abbia coltivato","abbiamo coltivato","abbiate coltivato","abbiano coltivato"],"pastConditional":["avrei coltivato","avresti coltivato","avrebbe coltivato","avremmo coltivato","avreste coltivato","avrebbero coltivato"],"pastSubjunctive":["coltivassi","coltivassi","coltivasse","coltivassimo","coltivaste","coltivassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi coltivato","avessi coltivato","avesse coltivato","avessimo coltivato","aveste coltivato","avessero coltivato"],"imperfectIndicative":["coltivavo","coltivavi","coltivava","coltivavamo","coltivavate","coltivavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi coltivato","avesti coltivato","ebbe coltivato","avemmo coltivato","aveste coltivato","ebbero coltivato"],"verb":"coltivare","imperative":["coltiva","coltivi","coltiviamo","coltivate","coltivino"],"presentIndicative":["coltivo","coltivi","coltiva","coltiviamo","coltivate","coltivano"],"presentConditional":["coltiverei","coltiveresti","coltiverebbe","coltiveremmo","coltivereste","coltiverebbero"],"impersonalForms":["coltivare","coltivante","coltivando","coltivato","avere coltivato","avendo coltivato","avente coltivato"],"pastIndicative":["ho coltivato","hai coltivato","ha coltivato","abbiamo coltivato","avete coltivato","hanno coltivato"],"futureIndicative":["coltiver\\xF2","coltiverai","coltiver\\xE0","coltiveremo","coltiverete","coltiveranno"]},{"futurePerfectIndicative":["avr\\xF2 cominciato; sar\\xF2 cominciato","avrai cominciato; sarai cominciato","avr\\xE0 cominciato; sar\\xE0 cominciato","avremo cominciato; saremo cominciati","avrete cominciato; sarete cominciati","avranno cominciato; saranno cominciati"],"presentSubjunctive":["cominci","cominci","cominci","cominciamo","cominciate","comincino"],"pastRemoteIndicative":["cominciai","cominciasti","cominci\\xF2","cominciammo","cominciaste","cominciarono"],"pluperfectIndicative":["avevo cominciato; ero cominciato","avevi cominciato; eri cominciato","aveva cominciato; era cominciato","avevamo cominciato; eravamo cominciati","avevate cominciato; eravate cominciati","avevano cominciato; erano cominciati"],"imperfectSubjunctive":["abbia cominciato; sia cominciato","abbia cominciato; sia cominciato","abbia cominciato; sia cominciato","abbiamo cominciato; siamo cominciati","abbiate cominciato; siate cominciati","abbiano cominciato; siano cominciati"],"pastConditional":["avrei cominciato; sarei cominciato","avresti cominciato; saresti cominciato","avrebbe cominciato; sarebbe cominciato","avremmo cominciato; saremmo cominciati","avreste cominciato; sareste cominciati","avrebbero cominciato; sarebbero cominciati"],"pastSubjunctive":["cominciassi","cominciassi","cominciasse","cominciassimo","cominciaste","cominciassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cominciato; fossi cominciato","avessi cominciato; fossi cominciato","avesse cominciato; fosse cominciato","avessimo cominciato; fossimo cominciati","aveste cominciato; foste cominciati","avessero cominciato; fossero cominciati"],"imperfectIndicative":["cominciavo","cominciavi","cominciava","cominciavamo","cominciavate","cominciavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi cominciato; fui cominciato","avesti cominciato; fosti cominciato","ebbe cominciato; fu cominciato","avemmo cominciato; fummo cominciati","aveste cominciato; foste cominciati","ebbero cominciato; furono cominciati"],"verb":"cominciare","imperative":["comincia","cominci","cominciamo","cominciate","comincino"],"presentIndicative":["comincio","cominci","comincia","cominciamo","cominciate","cominciano"],"presentConditional":["comincerei","cominceresti","comincerebbe","cominceremmo","comincereste","comincerebbero"],"impersonalForms":["cominciare","cominciante","cominciando","cominciato","avere cominciato; essere cominciato","avendo cominciato; essendo cominciato","avente cominciato; essente cominciato"],"pastIndicative":["ho cominciato; sono cominciato","hai cominciato; sei cominciato","ha cominciato; \\xE8 cominciato","abbiamo cominciato; siamo cominciati","avete cominciato; siete cominciati","hanno cominciato; sono cominciati"],"futureIndicative":["comincer\\xF2","comincerai","comincer\\xE0","cominceremo","comincerete","cominceranno"]},{"futurePerfectIndicative":["avr\\xF2 comprato","avrai comprato","avr\\xE0 comprato","avremo comprato","avrete comprato","avranno comprato"],"presentSubjunctive":["compri","compri","compri","compriamo","compriate","comprino"],"pastRemoteIndicative":["comprai","comprasti","compr\\xF2","comprammo","compraste","comprarono"],"pluperfectIndicative":["avevo comprato","avevi comprato","aveva comprato","avevamo comprato","avevate comprato","avevano comprato"],"imperfectSubjunctive":["abbia comprato","abbia comprato","abbia comprato","abbiamo comprato","abbiate comprato","abbiano comprato"],"pastConditional":["avrei comprato","avresti comprato","avrebbe comprato","avremmo comprato","avreste comprato","avrebbero comprato"],"pastSubjunctive":["comprassi","comprassi","comprasse","comprassimo","compraste","comprassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi comprato","avessi comprato","avesse comprato","avessimo comprato","aveste comprato","avessero comprato"],"imperfectIndicative":["compravo","compravi","comprava","compravamo","compravate","compravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi comprato","avesti comprato","ebbe comprato","avemmo comprato","aveste comprato","ebbero comprato"],"verb":"comprare","imperative":["compra","compri","compriamo","comprate","comprino"],"presentIndicative":["compro","compri","compra","compriamo","comprate","comprano"],"presentConditional":["comprerei","compreresti","comprerebbe","compreremmo","comprereste","comprerebbero"],"impersonalForms":["comprare","comprante","comprando","comprato","avere comprato","avendo comprato","avente comprato"],"pastIndicative":["ho comprato","hai comprato","ha comprato","abbiamo comprato","avete comprato","hanno comprato"],"futureIndicative":["comprer\\xF2","comprerai","comprer\\xE0","compreremo","comprerete","compreranno"]},{"futurePerfectIndicative":["avr\\xF2 concordato","avrai concordato","avr\\xE0 concordato","avremo concordato","avrete concordato","avranno concordato"],"presentSubjunctive":["concordi","concordi","concordi","concordiamo","concordiate","concordino"],"pastRemoteIndicative":["concordai","concordasti","concord\\xF2","concordammo","concordaste","concordarono"],"pluperfectIndicative":["avevo concordato","avevi concordato","aveva concordato","avevamo concordato","avevate concordato","avevano concordato"],"imperfectSubjunctive":["abbia concordato","abbia concordato","abbia concordato","abbiamo concordato","abbiate concordato","abbiano concordato"],"pastConditional":["avrei concordato","avresti concordato","avrebbe concordato","avremmo concordato","avreste concordato","avrebbero concordato"],"pastSubjunctive":["concordassi","concordassi","concordasse","concordassimo","concordaste","concordassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi concordato","avessi concordato","avesse concordato","avessimo concordato","aveste concordato","avessero concordato"],"imperfectIndicative":["concordavo","concordavi","concordava","concordavamo","concordavate","concordavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi concordato","avesti concordato","ebbe concordato","avemmo concordato","aveste concordato","ebbero concordato"],"verb":"concordare","imperative":["concorda","concordi","concordiamo","concordate","concordino"],"presentIndicative":["concordo","concordi","concorda","concordiamo","concordate","concordano"],"presentConditional":["concorderei","concorderesti","concorderebbe","concorderemmo","concordereste","concorderebbero"],"impersonalForms":["concordare","concordante","concordando","concordato","avere concordato","avendo concordato","avente concordato"],"pastIndicative":["ho concordato","hai concordato","ha concordato","abbiamo concordato","avete concordato","hanno concordato"],"futureIndicative":["concorder\\xF2","concorderai","concorder\\xE0","concorderemo","concorderete","concorderanno"]},{"futurePerfectIndicative":["avr\\xF2 confuso","avrai confuso","avr\\xE0 confuso","avremo confuso","avrete confuso","avranno confuso"],"presentSubjunctive":["confonda","confonda","confonda","confondiamo","confondiate","confondano"],"pastRemoteIndicative":["confusi","confondesti","confuse","confondemmo","confondeste","confusero"],"pluperfectIndicative":["avevo confuso","avevi confuso","aveva confuso","avevamo confuso","avevate confuso","avevano confuso"],"imperfectSubjunctive":["abbia confuso","abbia confuso","abbia confuso","abbiamo confuso","abbiate confuso","abbiano confuso"],"pastConditional":["avrei confuso","avresti confuso","avrebbe confuso","avremmo confuso","avreste confuso","avrebbero confuso"],"pastSubjunctive":["confondessi","confondessi","confondesse","confondessimo","confondeste","confondessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi confuso","avessi confuso","avesse confuso","avessimo confuso","aveste confuso","avessero confuso"],"imperfectIndicative":["confondevo","confondevi","confondeva","confondevamo","confondevate","confondevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi confuso","avesti confuso","ebbe confuso","avemmo confuso","aveste confuso","ebbero confuso"],"verb":"confondere","imperative":["confondi","confonda","confondiamo","confondete","confondano"],"presentIndicative":["confondo","confondi","confonde","confondiamo","confondete","confondono"],"presentConditional":["confonderei","confonderesti","confonderebbe","confonderemmo","confondereste","confonderebbero"],"impersonalForms":["confondere","confondente","confondendo","confuso","avere confuso","avendo confuso","avente confuso"],"pastIndicative":["ho confuso","hai confuso","ha confuso","abbiamo confuso","avete confuso","hanno confuso"],"futureIndicative":["confonder\\xF2","confonderai","confonder\\xE0","confonderemo","confonderete","confonderanno"]},{"futurePerfectIndicative":["avr\\xF2 conosciuto","avrai conosciuto","avr\\xE0 conosciuto","avremo conosciuto","avrete conosciuto","avranno conosciuto"],"presentSubjunctive":["conosca","conosca","conosca","conosciamo","conosciate","conoscano"],"pastRemoteIndicative":["conobbi","conoscesti","conobbe","conoscemmo","conosceste","conobbero"],"pluperfectIndicative":["avevo conosciuto","avevi conosciuto","aveva conosciuto","avevamo conosciuto","avevate conosciuto","avevano conosciuto"],"imperfectSubjunctive":["abbia conosciuto","abbia conosciuto","abbia conosciuto","abbiamo conosciuto","abbiate conosciuto","abbiano conosciuto"],"pastConditional":["avrei conosciuto","avresti conosciuto","avrebbe conosciuto","avremmo conosciuto","avreste conosciuto","avrebbero conosciuto"],"pastSubjunctive":["conoscessi","conoscessi","conoscesse","conoscessimo","conosceste","conoscessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi conosciuto","avessi conosciuto","avesse conosciuto","avessimo conosciuto","aveste conosciuto","avessero conosciuto"],"imperfectIndicative":["conoscevo","conoscevi","conosceva","conoscevamo","conoscevate","conoscevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi conosciuto","avesti conosciuto","ebbe conosciuto","avemmo conosciuto","aveste conosciuto","ebbero conosciuto"],"verb":"conoscere","imperative":["conosci","conosca","conosciamo","conoscete","conoscano"],"presentIndicative":["conosco","conosci","conosce","conosciamo","conoscete","conoscono"],"presentConditional":["conoscerei","conosceresti","conoscerebbe","conosceremmo","conoscereste","conoscerebbero"],"impersonalForms":["conoscere","conoscente","conoscendo","conosciuto","avere conosciuto","avendo conosciuto","avente conosciuto"],"pastIndicative":["ho conosciuto","hai conosciuto","ha conosciuto","abbiamo conosciuto","avete conosciuto","hanno conosciuto"],"futureIndicative":["conoscer\\xF2","conoscerai","conoscer\\xE0","conosceremo","conoscerete","conosceranno"]},{"futurePerfectIndicative":["avr\\xF2 controllato","avrai controllato","avr\\xE0 controllato","avremo controllato","avrete controllato","avranno controllato"],"presentSubjunctive":["controlli","controlli","controlli","controlliamo","controlliate","controllino"],"pastRemoteIndicative":["controllai","controllasti","controll\\xF2","controllammo","controllaste","controllarono"],"pluperfectIndicative":["avevo controllato","avevi controllato","aveva controllato","avevamo controllato","avevate controllato","avevano controllato"],"imperfectSubjunctive":["abbia controllato","abbia controllato","abbia controllato","abbiamo controllato","abbiate controllato","abbiano controllato"],"pastConditional":["avrei controllato","avresti controllato","avrebbe controllato","avremmo controllato","avreste controllato","avrebbero controllato"],"pastSubjunctive":["controllassi","controllassi","controllasse","controllassimo","controllaste","controllassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi controllato","avessi controllato","avesse controllato","avessimo controllato","aveste controllato","avessero controllato"],"imperfectIndicative":["controllavo","controllavi","controllava","controllavamo","controllavate","controllavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi controllato","avesti controllato","ebbe controllato","avemmo controllato","aveste controllato","ebbero controllato"],"verb":"controllare","imperative":["controlla","controlli","controlliamo","controllate","controllino"],"presentIndicative":["controllo","controlli","controlla","controlliamo","controllate","controllano"],"presentConditional":["controllerei","controlleresti","controllerebbe","controlleremmo","controllereste","controllerebbero"],"impersonalForms":["controllare","controllante","controllando","controllato","avere controllato","avendo controllato","avente controllato"],"pastIndicative":["ho controllato","hai controllato","ha controllato","abbiamo controllato","avete controllato","hanno controllato"],"futureIndicative":["controller\\xF2","controllerai","controller\\xE0","controlleremo","controllerete","controlleranno"]},{"futurePerfectIndicative":["avr\\xF2 corso; sar\\xF2 corso","avrai corso; sarai corso","avr\\xE0 corso; sar\\xE0 corso","avremo corso; saremo corsi","avrete corso; sarete corsi","avranno corso; saranno corsi"],"presentSubjunctive":["corra","corra","corra","corriamo","corriate","corrano"],"pastRemoteIndicative":["corsi","corresti","corse","corremmo","correste","corsero"],"pluperfectIndicative":["avevo corso; ero corso","avevi corso; eri corso","aveva corso; era corso","avevamo corso; eravamo corsi","avevate corso; eravate corsi","avevano corso; erano corsi"],"imperfectSubjunctive":["abbia corso; sia corso","abbia corso; sia corso","abbia corso; sia corso","abbiamo corso; siamo corsi","abbiate corso; siate corsi","abbiano corso; siano corsi"],"pastConditional":["avrei corso; sarei corso","avresti corso; saresti corso","avrebbe corso; sarebbe corso","avremmo corso; saremmo corsi","avreste corso; sareste corsi","avrebbero corso; sarebbero corsi"],"pastSubjunctive":["corressi","corressi","corresse","corressimo","correste","corressero"],"similarVerbs":"","pluperfectSubjunctive":["avessi corso; fossi corso","avessi corso; fossi corso","avesse corso; fosse corso","avessimo corso; fossimo corsi","aveste corso; foste corsi","avessero corso; fossero corsi"],"imperfectIndicative":["correvo","correvi","correva","correvamo","correvate","correvano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi corso; fui corso","avesti corso; fosti corso","ebbe corso; fu corso","avemmo corso; fummo corsi","aveste corso; foste corsi","ebbero corso; furono corsi"],"verb":"correre","imperative":["corri","corra","corriamo","correte","corrano"],"presentIndicative":["corro","corri","corre","corriamo","correte","corrono"],"presentConditional":["correrei","correresti","correrebbe","correremmo","correreste","correrebbero"],"impersonalForms":["correre","corrente","correndo","corso","avere corso; essere corso","avendo corso; essendo corso","avente corso; essente corso"],"pastIndicative":["ho corso; sono corso","hai corso; sei corso","ha corso; \\xE8 corso","abbiamo corso; siamo corsi","avete corso; siete corsi","hanno corso; sono corsi"],"futureIndicative":["correr\\xF2","correrai","correr\\xE0","correremo","correrete","correranno"]},{"futurePerfectIndicative":["sar\\xF2 costato","sarai costato","sar\\xE0 costato","saremo costati","sarete costati","saranno costati"],"presentSubjunctive":["costi","costi","costi","costiamo","costiate","costino"],"pastRemoteIndicative":["costai","costasti","cost\\xF2","costammo","costaste","costarono"],"pluperfectIndicative":["ero costato","eri costato","era costato","eravamo costati","eravate costati","erano costati"],"imperfectSubjunctive":["sia costato","sia costato","sia costato","siamo costati","siate costati","siano costati"],"pastConditional":["sarei costato","saresti costato","sarebbe costato","saremmo costati","sareste costati","sarebbero costati"],"pastSubjunctive":["costassi","costassi","costasse","costassimo","costaste","costassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi costato","fossi costato","fosse costato","fossimo costati","foste costati","fossero costati"],"imperfectIndicative":["costavo","costavi","costava","costavamo","costavate","costavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui costato","fosti costato","fu costato","fummo costati","foste costati","furono costati"],"verb":"costare","imperative":["costa","costi","costiamo","costate","costino"],"presentIndicative":["costo","costi","costa","costiamo","costate","costano"],"presentConditional":["costerei","costeresti","costerebbe","costeremmo","costereste","costerebbero"],"impersonalForms":["costare","costante","costando","costato","essere costato","essendo costato","essente costato"],"pastIndicative":["sono costato","sei costato","\\xE8 costato","siamo costati","siete costati","sono costati"],"futureIndicative":["coster\\xF2","costerai","coster\\xE0","costeremo","costerete","costeranno"]},{"futurePerfectIndicative":["avr\\xF2 costruito","avrai costruito","avr\\xE0 costruito","avremo costruito","avrete costruito","avranno costruito"],"presentSubjunctive":["costruisca","costruisca","costruisca","costruiamo","costruiate","costruiscano"],"pastRemoteIndicative":["costrussi; costruii","costruisti","costrusse; costru\\xEC","costruimmo","costruiste","costrussero; costruirono"],"pluperfectIndicative":["avevo costruito","avevi costruito","aveva costruito","avevamo costruito","avevate costruito","avevano costruito"],"imperfectSubjunctive":["abbia costruito","abbia costruito","abbia costruito","abbiamo costruito","abbiate costruito","abbiano costruito"],"pastConditional":["avrei costruito","avresti costruito","avrebbe costruito","avremmo costruito","avreste costruito","avrebbero costruito"],"pastSubjunctive":["costruissi","costruissi","costruisse","costruissimo","costruiste","costruissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi costruito","avessi costruito","avesse costruito","avessimo costruito","aveste costruito","avessero costruito"],"imperfectIndicative":["costruivo","costruivi","costruiva","costruivamo","costruivate","costruivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi costruito","avesti costruito","ebbe costruito","avemmo costruito","aveste costruito","ebbero costruito"],"verb":"costruire","imperative":["costruisci","costruisca","costruiamo","costruite","costruiscano"],"presentIndicative":["costruisco","costruisci","costruisce","costruiamo","costruite","costruiscono"],"presentConditional":["costruirei","costruiresti","costruirebbe","costruiremmo","costruireste","costruirebbero"],"impersonalForms":["costruire","costruente","costruendo","costruito; costrutto","avere costruito","avendo costruito","avente costruito"],"pastIndicative":["ho costruito","hai costruito","ha costruito","abbiamo costruito","avete costruito","hanno costruito"],"futureIndicative":["costruir\\xF2","costruirai","costruir\\xE0","costruiremo","costruirete","costruiranno"]},{"futurePerfectIndicative":["avr\\xF2 creduto","avrai creduto","avr\\xE0 creduto","avremo creduto","avrete creduto","avranno creduto"],"presentSubjunctive":["creda","creda","creda","crediamo","crediate","credano"],"pastRemoteIndicative":["credei; credetti","credesti","cred\\xE9; credette","credemmo","credeste","crederono; credettero"],"pluperfectIndicative":["avevo creduto","avevi creduto","aveva creduto","avevamo creduto","avevate creduto","avevano creduto"],"imperfectSubjunctive":["abbia creduto","abbia creduto","abbia creduto","abbiamo creduto","abbiate creduto","abbiano creduto"],"pastConditional":["avrei creduto","avresti creduto","avrebbe creduto","avremmo creduto","avreste creduto","avrebbero creduto"],"pastSubjunctive":["credessi","credessi","credesse","credessimo","credeste","credessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi creduto","avessi creduto","avesse creduto","avessimo creduto","aveste creduto","avessero creduto"],"imperfectIndicative":["credevo","credevi","credeva","credevamo","credevate","credevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi creduto","avesti creduto","ebbe creduto","avemmo creduto","aveste creduto","ebbero creduto"],"verb":"credere","imperative":["credi","creda","crediamo","credete","credano"],"presentIndicative":["credo","credi","crede","crediamo","credete","credono"],"presentConditional":["crederei","crederesti","crederebbe","crederemmo","credereste","crederebbero"],"impersonalForms":["credere","credente","credendo","creduto","avere creduto","avendo creduto","avente creduto"],"pastIndicative":["ho creduto","hai creduto","ha creduto","abbiamo creduto","avete creduto","hanno creduto"],"futureIndicative":["creder\\xF2","crederai","creder\\xE0","crederemo","crederete","crederanno"]},{"futurePerfectIndicative":["sar\\xF2 cresciuto","sarai cresciuto","sar\\xE0 cresciuto","saremo cresciuti","sarete cresciuti","saranno cresciuti"],"presentSubjunctive":["cresca","cresca","cresca","cresciamo","cresciate","crescano"],"pastRemoteIndicative":["crebbi","crescesti","crebbe","crescemmo","cresceste","crebbero"],"pluperfectIndicative":["ero cresciuto","eri cresciuto","era cresciuto","eravamo cresciuti","eravate cresciuti","erano cresciuti"],"imperfectSubjunctive":["sia cresciuto","sia cresciuto","sia cresciuto","siamo cresciuti","siate cresciuti","siano cresciuti"],"pastConditional":["sarei cresciuto","saresti cresciuto","sarebbe cresciuto","saremmo cresciuti","sareste cresciuti","sarebbero cresciuti"],"pastSubjunctive":["crescessi","crescessi","crescesse","crescessimo","cresceste","crescessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi cresciuto","fossi cresciuto","fosse cresciuto","fossimo cresciuti","foste cresciuti","fossero cresciuti"],"imperfectIndicative":["crescevo","crescevi","cresceva","crescevamo","crescevate","crescevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui cresciuto","fosti cresciuto","fu cresciuto","fummo cresciuti","foste cresciuti","furono cresciuti"],"verb":"crescere","imperative":["cresci","cresca","cresciamo","crescete","crescano"],"presentIndicative":["cresco","cresci","cresce","cresciamo","crescete","crescono"],"presentConditional":["crescerei","cresceresti","crescerebbe","cresceremmo","crescereste","crescerebbero"],"impersonalForms":["crescere","crescente","crescendo","cresciuto","essere cresciuto","essendo cresciuto","essente cresciuto"],"pastIndicative":["sono cresciuto","sei cresciuto","\\xE8 cresciuto","siamo cresciuti","siete cresciuti","sono cresciuti"],"futureIndicative":["crescer\\xF2","crescerai","crescer\\xE0","cresceremo","crescerete","cresceranno"]},{"futurePerfectIndicative":["avr\\xF2 cucinato","avrai cucinato","avr\\xE0 cucinato","avremo cucinato","avrete cucinato","avranno cucinato"],"presentSubjunctive":["cucini","cucini","cucini","cuciniamo","cuciniate","cucinino"],"pastRemoteIndicative":["cucinai","cucinasti","cucin\\xF2","cucinammo","cucinaste","cucinarono"],"pluperfectIndicative":["avevo cucinato","avevi cucinato","aveva cucinato","avevamo cucinato","avevate cucinato","avevano cucinato"],"imperfectSubjunctive":["abbia cucinato","abbia cucinato","abbia cucinato","abbiamo cucinato","abbiate cucinato","abbiano cucinato"],"pastConditional":["avrei cucinato","avresti cucinato","avrebbe cucinato","avremmo cucinato","avreste cucinato","avrebbero cucinato"],"pastSubjunctive":["cucinassi","cucinassi","cucinasse","cucinassimo","cucinaste","cucinassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi cucinato","avessi cucinato","avesse cucinato","avessimo cucinato","aveste cucinato","avessero cucinato"],"imperfectIndicative":["cucinavo","cucinavi","cucinava","cucinavamo","cucinavate","cucinavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi cucinato","avesti cucinato","ebbe cucinato","avemmo cucinato","aveste cucinato","ebbero cucinato"],"verb":"cucinare","imperative":["cucina","cucini","cuciniamo","cucinate","cucinino"],"presentIndicative":["cucino","cucini","cucina","cuciniamo","cucinate","cucinano"],"presentConditional":["cucinerei","cucineresti","cucinerebbe","cucineremmo","cucinereste","cucinerebbero"],"impersonalForms":["cucinare","cucinante","cucinando","cucinato","avere cucinato","avendo cucinato","avente cucinato"],"pastIndicative":["ho cucinato","hai cucinato","ha cucinato","abbiamo cucinato","avete cucinato","hanno cucinato"],"futureIndicative":["cuciner\\xF2","cucinerai","cuciner\\xE0","cucineremo","cucinerete","cucineranno"]},{"futurePerfectIndicative":["avr\\xF2 dato","avrai dato","avr\\xE0 dato","avremo dato","avrete dato","avranno dato"],"presentSubjunctive":["dia","dia","dia","diamo","diate","diano"],"pastRemoteIndicative":["diedi; detti","desti","diede; dette; d\\xE8tte","demmo","deste","diedero; dettero"],"pluperfectIndicative":["avevo dato","avevi dato","aveva dato","avevamo dato","avevate dato","avevano dato"],"imperfectSubjunctive":["abbia dato","abbia dato","abbia dato","abbiamo dato","abbiate dato","abbiano dato"],"pastConditional":["avrei dato","avresti dato","avrebbe dato","avremmo dato","avreste dato","avrebbero dato"],"pastSubjunctive":["dessi","dessi","desse","dessimo","deste","dessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dato","avessi dato","avesse dato","avessimo dato","aveste dato","avessero dato"],"imperfectIndicative":["davo","davi","dava","davamo","davate","davano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi dato","avesti dato","ebbe dato","avemmo dato","aveste dato","ebbero dato"],"verb":"dare","imperative":["da\'; dai","dia","diamo","date","diano"],"presentIndicative":["do","dai","d\\xE0","diamo","date","d\\xE0nno"],"presentConditional":["darei","daresti","darebbe","daremmo","dareste","darebbero"],"impersonalForms":["dare","dante","dando","dato","avere dato","avendo dato","avente dato"],"pastIndicative":["ho dato","hai dato","ha dato","abbiamo dato","avete dato","hanno dato"],"futureIndicative":["dar\\xF2","darai","dar\\xE0","daremo","darete","daranno"]},{"futurePerfectIndicative":["avr\\xF2 deciso","avrai deciso","avr\\xE0 deciso","avremo deciso","avrete deciso","avranno deciso"],"presentSubjunctive":["decida","decida","decida","decidiamo","decidiate","decidano"],"pastRemoteIndicative":["decisi","decidesti","decise","decidemmo","decideste","decisero"],"pluperfectIndicative":["avevo deciso","avevi deciso","aveva deciso","avevamo deciso","avevate deciso","avevano deciso"],"imperfectSubjunctive":["abbia deciso","abbia deciso","abbia deciso","abbiamo deciso","abbiate deciso","abbiano deciso"],"pastConditional":["avrei deciso","avresti deciso","avrebbe deciso","avremmo deciso","avreste deciso","avrebbero deciso"],"pastSubjunctive":["decidessi","decidessi","decidesse","decidessimo","decideste","decidessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi deciso","avessi deciso","avesse deciso","avessimo deciso","aveste deciso","avessero deciso"],"imperfectIndicative":["decidevo","decidevi","decideva","decidevamo","decidevate","decidevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi deciso","avesti deciso","ebbe deciso","avemmo deciso","aveste deciso","ebbero deciso"],"verb":"decidere","imperative":["decidi","decida","decidiamo","decidete","decidano"],"presentIndicative":["decido","decidi","decide","decidiamo","decidete","decidono"],"presentConditional":["deciderei","decideresti","deciderebbe","decideremmo","decidereste","deciderebbero"],"impersonalForms":["decidere","decidente","decidendo","deciso","avere deciso","avendo deciso","avente deciso"],"pastIndicative":["ho deciso","hai deciso","ha deciso","abbiamo deciso","avete deciso","hanno deciso"],"futureIndicative":["decider\\xF2","deciderai","decider\\xE0","decideremo","deciderete","decideranno"]},{"futurePerfectIndicative":["avr\\xF2 descritto","avrai descritto","avr\\xE0 descritto","avremo descritto","avrete descritto","avranno descritto"],"presentSubjunctive":["descriva","descriva","descriva","descriviamo","descriviate","descrivano"],"pastRemoteIndicative":["descrissi","descrivesti","descrisse","descrivemmo","descriveste","descrissero"],"pluperfectIndicative":["avevo descritto","avevi descritto","aveva descritto","avevamo descritto","avevate descritto","avevano descritto"],"imperfectSubjunctive":["abbia descritto","abbia descritto","abbia descritto","abbiamo descritto","abbiate descritto","abbiano descritto"],"pastConditional":["avrei descritto","avresti descritto","avrebbe descritto","avremmo descritto","avreste descritto","avrebbero descritto"],"pastSubjunctive":["descrivessi","descrivessi","descrivesse","descrivessimo","descriveste","descrivessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi descritto","avessi descritto","avesse descritto","avessimo descritto","aveste descritto","avessero descritto"],"imperfectIndicative":["descrivevo","descrivevi","descriveva","descrivevamo","descrivevate","descrivevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi descritto","avesti descritto","ebbe descritto","avemmo descritto","aveste descritto","ebbero descritto"],"verb":"descrivere","imperative":["descrivi","descriva","descriviamo","descrivete","descrivano"],"presentIndicative":["descrivo","descrivi","descrive","descriviamo","descrivete","descrivono"],"presentConditional":["descriverei","descriveresti","descriverebbe","descriveremmo","descrivereste","descriverebbero"],"impersonalForms":["descrivere","descrivente","descrivendo","descritto","avere descritto","avendo descritto","avente descritto"],"pastIndicative":["ho descritto","hai descritto","ha descritto","abbiamo descritto","avete descritto","hanno descritto"],"futureIndicative":["descriver\\xF2","descriverai","descriver\\xE0","descriveremo","descriverete","descriveranno"]},{"futurePerfectIndicative":["avr\\xF2 dimenticato","avrai dimenticato","avr\\xE0 dimenticato","avremo dimenticato","avrete dimenticato","avranno dimenticato"],"presentSubjunctive":["dimentichi","dimentichi","dimentichi","dimentichiamo","dimentichiate","dimentichino"],"pastRemoteIndicative":["dimenticai","dimenticasti","dimentic\\xF2","dimenticammo","dimenticaste","dimenticarono"],"pluperfectIndicative":["avevo dimenticato","avevi dimenticato","aveva dimenticato","avevamo dimenticato","avevate dimenticato","avevano dimenticato"],"imperfectSubjunctive":["abbia dimenticato","abbia dimenticato","abbia dimenticato","abbiamo dimenticato","abbiate dimenticato","abbiano dimenticato"],"pastConditional":["avrei dimenticato","avresti dimenticato","avrebbe dimenticato","avremmo dimenticato","avreste dimenticato","avrebbero dimenticato"],"pastSubjunctive":["dimenticassi","dimenticassi","dimenticasse","dimenticassimo","dimenticaste","dimenticassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dimenticato","avessi dimenticato","avesse dimenticato","avessimo dimenticato","aveste dimenticato","avessero dimenticato"],"imperfectIndicative":["dimenticavo","dimenticavi","dimenticava","dimenticavamo","dimenticavate","dimenticavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi dimenticato","avesti dimenticato","ebbe dimenticato","avemmo dimenticato","aveste dimenticato","ebbero dimenticato"],"verb":"dimenticare","imperative":["dimentica","dimentichi","dimentichiamo","dimenticate","dimentichino"],"presentIndicative":["dimentico","dimentichi","dimentica","dimentichiamo","dimenticate","dimenticano"],"presentConditional":["dimenticherei","dimenticheresti","dimenticherebbe","dimenticheremmo","dimentichereste","dimenticherebbero"],"impersonalForms":["dimenticare","dimenticante","dimenticando","dimenticato","avere dimenticato","avendo dimenticato","avente dimenticato"],"pastIndicative":["ho dimenticato","hai dimenticato","ha dimenticato","abbiamo dimenticato","avete dimenticato","hanno dimenticato"],"futureIndicative":["dimenticher\\xF2","dimenticherai","dimenticher\\xE0","dimenticheremo","dimenticherete","dimenticheranno"]},{"futurePerfectIndicative":["avr\\xF2 dimostrato","avrai dimostrato","avr\\xE0 dimostrato","avremo dimostrato","avrete dimostrato","avranno dimostrato"],"presentSubjunctive":["dimostri","dimostri","dimostri","dimostriamo","dimostriate","dimostrino"],"pastRemoteIndicative":["dimostrai","dimostrasti","dimostr\\xF2","dimostrammo","dimostraste","dimostrarono"],"pluperfectIndicative":["avevo dimostrato","avevi dimostrato","aveva dimostrato","avevamo dimostrato","avevate dimostrato","avevano dimostrato"],"imperfectSubjunctive":["abbia dimostrato","abbia dimostrato","abbia dimostrato","abbiamo dimostrato","abbiate dimostrato","abbiano dimostrato"],"pastConditional":["avrei dimostrato","avresti dimostrato","avrebbe dimostrato","avremmo dimostrato","avreste dimostrato","avrebbero dimostrato"],"pastSubjunctive":["dimostrassi","dimostrassi","dimostrasse","dimostrassimo","dimostraste","dimostrassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dimostrato","avessi dimostrato","avesse dimostrato","avessimo dimostrato","aveste dimostrato","avessero dimostrato"],"imperfectIndicative":["dimostravo","dimostravi","dimostrava","dimostravamo","dimostravate","dimostravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi dimostrato","avesti dimostrato","ebbe dimostrato","avemmo dimostrato","aveste dimostrato","ebbero dimostrato"],"verb":"dimostrare","imperative":["dimostra","dimostri","dimostriamo","dimostrate","dimostrino"],"presentIndicative":["dimostro","dimostri","dimostra","dimostriamo","dimostrate","dimostrano"],"presentConditional":["dimostrerei","dimostreresti","dimostrerebbe","dimostreremmo","dimostrereste","dimostrerebbero"],"impersonalForms":["dimostrare","dimostrante","dimostrando","dimostrato","avere dimostrato","avendo dimostrato","avente dimostrato"],"pastIndicative":["ho dimostrato","hai dimostrato","ha dimostrato","abbiamo dimostrato","avete dimostrato","hanno dimostrato"],"futureIndicative":["dimostrer\\xF2","dimostrerai","dimostrer\\xE0","dimostreremo","dimostrerete","dimostreranno"]},{"futurePerfectIndicative":["avr\\xF2 dipinto","avrai dipinto","avr\\xE0 dipinto","avremo dipinto","avrete dipinto","avranno dipinto"],"presentSubjunctive":["dipinga","dipinga","dipinga","dipingiamo","dipingiate","dipingano"],"pastRemoteIndicative":["dipinsi","dipingesti","dipinse","dipingemmo","dipingeste","dipinsero"],"pluperfectIndicative":["avevo dipinto","avevi dipinto","aveva dipinto","avevamo dipinto","avevate dipinto","avevano dipinto"],"imperfectSubjunctive":["abbia dipinto","abbia dipinto","abbia dipinto","abbiamo dipinto","abbiate dipinto","abbiano dipinto"],"pastConditional":["avrei dipinto","avresti dipinto","avrebbe dipinto","avremmo dipinto","avreste dipinto","avrebbero dipinto"],"pastSubjunctive":["dipingessi","dipingessi","dipingesse","dipingessimo","dipingeste","dipingessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dipinto","avessi dipinto","avesse dipinto","avessimo dipinto","aveste dipinto","avessero dipinto"],"imperfectIndicative":["dipingevo","dipingevi","dipingeva","dipingevamo","dipingevate","dipingevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi dipinto","avesti dipinto","ebbe dipinto","avemmo dipinto","aveste dipinto","ebbero dipinto"],"verb":"dipingere","imperative":["dipingi","dipinga","dipingiamo","dipingete","dipingano"],"presentIndicative":["dipingo","dipingi","dipinge","dipingiamo","dipingete","dipingono"],"presentConditional":["dipingerei","dipingeresti","dipingerebbe","dipingeremmo","dipingereste","dipingerebbero"],"impersonalForms":["dipingere; dipignere","dipingente","dipingendo","dipinto","avere dipinto","avendo dipinto","avente dipinto"],"pastIndicative":["ho dipinto","hai dipinto","ha dipinto","abbiamo dipinto","avete dipinto","hanno dipinto"],"futureIndicative":["dipinger\\xF2","dipingerai","dipinger\\xE0","dipingeremo","dipingerete","dipingeranno"]},{"futurePerfectIndicative":["avr\\xF2 detto","avrai detto","avr\\xE0 detto","avremo detto","avrete detto","avranno detto"],"presentSubjunctive":["dica","dica","dica","diciamo","diciate","dicano"],"pastRemoteIndicative":["dissi","dicesti","disse","dicemmo","diceste","dissero"],"pluperfectIndicative":["avevo detto","avevi detto","aveva detto","avevamo detto","avevate detto","avevano detto"],"imperfectSubjunctive":["abbia detto","abbia detto","abbia detto","abbiamo detto","abbiate detto","abbiano detto"],"pastConditional":["avrei detto","avresti detto","avrebbe detto","avremmo detto","avreste detto","avrebbero detto"],"pastSubjunctive":["dicessi","dicessi","dicesse","dicessimo","diceste","dicessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi detto","avessi detto","avesse detto","avessimo detto","aveste detto","avessero detto"],"imperfectIndicative":["dicevo","dicevi","diceva","dicevamo","dicevate","dicevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi detto","avesti detto","ebbe detto","avemmo detto","aveste detto","ebbero detto"],"verb":"dire","imperative":["di\'","dica","diciamo","dite","dicano"],"presentIndicative":["dico","dici","dice","diciamo","dite","dicono"],"presentConditional":["direi","diresti","direbbe","diremmo","direste","direbbero"],"impersonalForms":["dire","dicente","dicendo","detto","avere detto","avendo detto","avente detto"],"pastIndicative":["ho detto","hai detto","ha detto","abbiamo detto","avete detto","hanno detto"],"futureIndicative":["dir\\xF2","dirai","dir\\xE0","diremo","direte","diranno"]},{"futurePerfectIndicative":["avr\\xF2 disegnato","avrai disegnato","avr\\xE0 disegnato","avremo disegnato","avrete disegnato","avranno disegnato"],"presentSubjunctive":["disegni","disegni","disegni","disegniamo","disegniate","disegnino"],"pastRemoteIndicative":["disegnai","disegnasti","disegn\\xF2","disegnammo","disegnaste","disegnarono"],"pluperfectIndicative":["avevo disegnato","avevi disegnato","aveva disegnato","avevamo disegnato","avevate disegnato","avevano disegnato"],"imperfectSubjunctive":["abbia disegnato","abbia disegnato","abbia disegnato","abbiamo disegnato","abbiate disegnato","abbiano disegnato"],"pastConditional":["avrei disegnato","avresti disegnato","avrebbe disegnato","avremmo disegnato","avreste disegnato","avrebbero disegnato"],"pastSubjunctive":["disegnassi","disegnassi","disegnasse","disegnassimo","disegnaste","disegnassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi disegnato","avessi disegnato","avesse disegnato","avessimo disegnato","aveste disegnato","avessero disegnato"],"imperfectIndicative":["disegnavo","disegnavi","disegnava","disegnavamo","disegnavate","disegnavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi disegnato","avesti disegnato","ebbe disegnato","avemmo disegnato","aveste disegnato","ebbero disegnato"],"verb":"disegnare","imperative":["disegna","disegni","disegniamo","disegnate","disegnino"],"presentIndicative":["disegno","disegni","disegna","disegniamo","disegnate","disegnano"],"presentConditional":["disegnerei","disegneresti","disegnerebbe","disegneremmo","disegnereste","disegnerebbero"],"impersonalForms":["disegnare","disegnante","disegnando","disegnato","avere disegnato","avendo disegnato","avente disegnato"],"pastIndicative":["ho disegnato","hai disegnato","ha disegnato","abbiamo disegnato","avete disegnato","hanno disegnato"],"futureIndicative":["disegner\\xF2","disegnerai","disegner\\xE0","disegneremo","disegnerete","disegneranno"]},{"futurePerfectIndicative":["sar\\xF2 diventato","sarai diventato","sar\\xE0 diventato","saremo diventati","sarete diventati","saranno diventati"],"presentSubjunctive":["diventi","diventi","diventi","diventiamo","diventiate","diventino"],"pastRemoteIndicative":["diventai","diventasti","divent\\xF2","diventammo","diventaste","diventarono"],"pluperfectIndicative":["ero diventato","eri diventato","era diventato","eravamo diventati","eravate diventati","erano diventati"],"imperfectSubjunctive":["sia diventato","sia diventato","sia diventato","siamo diventati","siate diventati","siano diventati"],"pastConditional":["sarei diventato","saresti diventato","sarebbe diventato","saremmo diventati","sareste diventati","sarebbero diventati"],"pastSubjunctive":["diventassi","diventassi","diventasse","diventassimo","diventaste","diventassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi diventato","fossi diventato","fosse diventato","fossimo diventati","foste diventati","fossero diventati"],"imperfectIndicative":["diventavo","diventavi","diventava","diventavamo","diventavate","diventavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui diventato","fosti diventato","fu diventato","fummo diventati","foste diventati","furono diventati"],"verb":"diventare","imperative":["diventa","diventi","diventiamo","diventate","diventino"],"presentIndicative":["divento","diventi","diventa","diventiamo","diventate","diventano"],"presentConditional":["diventerei","diventeresti","diventerebbe","diventeremmo","diventereste","diventerebbero"],"impersonalForms":["diventare; doventare","diventante","diventando","diventato","essere diventato","essendo diventato","essente diventato"],"pastIndicative":["sono diventato","sei diventato","\\xE8 diventato","siamo diventati","siete diventati","sono diventati"],"futureIndicative":["diventer\\xF2","diventerai","diventer\\xE0","diventeremo","diventerete","diventeranno"]},{"futurePerfectIndicative":["avr\\xF2 dormito","avrai dormito","avr\\xE0 dormito","avremo dormito","avrete dormito","avranno dormito"],"presentSubjunctive":["dorma","dorma","dorma","dormiamo","dormiate","dormano"],"pastRemoteIndicative":["dormii","dormisti","dorm\\xEC","dormimmo","dormiste","dormirono"],"pluperfectIndicative":["avevo dormito","avevi dormito","aveva dormito","avevamo dormito","avevate dormito","avevano dormito"],"imperfectSubjunctive":["abbia dormito","abbia dormito","abbia dormito","abbiamo dormito","abbiate dormito","abbiano dormito"],"pastConditional":["avrei dormito","avresti dormito","avrebbe dormito","avremmo dormito","avreste dormito","avrebbero dormito"],"pastSubjunctive":["dormissi","dormissi","dormisse","dormissimo","dormiste","dormissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dormito","avessi dormito","avesse dormito","avessimo dormito","aveste dormito","avessero dormito"],"imperfectIndicative":["dormivo","dormivi","dormiva","dormivamo","dormivate","dormivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi dormito","avesti dormito","ebbe dormito","avemmo dormito","aveste dormito","ebbero dormito"],"verb":"dormire","imperative":["dormi","dorma","dormiamo","dormite","dormano"],"presentIndicative":["dormo","dormi","dorme","dormiamo","dormite","dormono"],"presentConditional":["dormirei","dormiresti","dormirebbe","dormiremmo","dormireste","dormirebbero"],"impersonalForms":["dormire","dormente","dormendo","dormito","avere dormito","avendo dormito","avente dormito"],"pastIndicative":["ho dormito","hai dormito","ha dormito","abbiamo dormito","avete dormito","hanno dormito"],"futureIndicative":["dormir\\xF2","dormirai","dormir\\xE0","dormiremo","dormirete","dormiranno"]},{"futurePerfectIndicative":["avr\\xF2 dovuto","avrai dovuto","avr\\xE0 dovuto","avremo dovuto","avrete dovuto","avranno dovuto"],"presentSubjunctive":["debba","debba","debba","dobbiamo","dobbiate","debbano"],"pastRemoteIndicative":["dovei; dovetti","dovesti","dov\\xE9; dovette","dovemmo","doveste","doverono; dovettero"],"pluperfectIndicative":["avevo dovuto","avevi dovuto","aveva dovuto","avevamo dovuto","avevate dovuto","avevano dovuto"],"imperfectSubjunctive":["abbia dovuto","abbia dovuto","abbia dovuto","abbiamo dovuto","abbiate dovuto","abbiano dovuto"],"pastConditional":["avrei dovuto","avresti dovuto","avrebbe dovuto","avremmo dovuto","avreste dovuto","avrebbero dovuto"],"pastSubjunctive":["dovessi","dovessi","dovesse","dovessimo","doveste","dovessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi dovuto","avessi dovuto","avesse dovuto","avessimo dovuto","aveste dovuto","avessero dovuto"],"imperfectIndicative":["dovevo","dovevi","doveva","dovevamo","dovevate","dovevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi dovuto","avesti dovuto","ebbe dovuto","avemmo dovuto","aveste dovuto","ebbero dovuto"],"verb":"dovere","imperative":["devi","debba","dobbiamo","dovete","debbano"],"presentIndicative":["devo; debbo","devi","deve","dobbiamo","dovete","devono; debbono"],"presentConditional":["dovrei","dovresti","dovrebbe","dovremmo","dovreste","dovrebbero"],"impersonalForms":["dovere","dovente","dovendo","dovuto","avere dovuto","avendo dovuto","avente dovuto"],"pastIndicative":["ho dovuto","hai dovuto","ha dovuto","abbiamo dovuto","avete dovuto","hanno dovuto"],"futureIndicative":["dovr\\xF2","dovrai","dovr\\xE0","dovremo","dovrete","dovranno"]},{"futurePerfectIndicative":["sar\\xF2 entrato","sarai entrato","sar\\xE0 entrato","saremo entrati","sarete entrati","saranno entrati"],"presentSubjunctive":["entri","entri","entri","entriamo","entriate","entrino"],"pastRemoteIndicative":["entrai","entrasti","entr\\xF2","entrammo","entraste","entrarono"],"pluperfectIndicative":["ero entrato","eri entrato","era entrato","eravamo entrati","eravate entrati","erano entrati"],"imperfectSubjunctive":["sia entrato","sia entrato","sia entrato","siamo entrati","siate entrati","siano entrati"],"pastConditional":["sarei entrato","saresti entrato","sarebbe entrato","saremmo entrati","sareste entrati","sarebbero entrati"],"pastSubjunctive":["entrassi","entrassi","entrasse","entrassimo","entraste","entrassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi entrato","fossi entrato","fosse entrato","fossimo entrati","foste entrati","fossero entrati"],"imperfectIndicative":["entravo","entravi","entrava","entravamo","entravate","entravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui entrato","fosti entrato","fu entrato","fummo entrati","foste entrati","furono entrati"],"verb":"entrare","imperative":["entra","entri","entriamo","entrate","entrino"],"presentIndicative":["entro","entri","entra","entriamo","entrate","entrano"],"presentConditional":["entrerei","entreresti","entrerebbe","entreremmo","entrereste","entrerebbero"],"impersonalForms":["entrare","entrante","entrando","entrato","essere entrato","essendo entrato","essente entrato"],"pastIndicative":["sono entrato","sei entrato","\\xE8 entrato","siamo entrati","siete entrati","sono entrati"],"futureIndicative":["entrer\\xF2","entrerai","entrer\\xE0","entreremo","entrerete","entreranno"]},{"futurePerfectIndicative":["avr\\xF2 esercitato","avrai esercitato","avr\\xE0 esercitato","avremo esercitato","avrete esercitato","avranno esercitato"],"presentSubjunctive":["eserciti","eserciti","eserciti","esercitiamo","esercitiate","esercitino"],"pastRemoteIndicative":["esercitai","esercitasti","esercit\\xF2","esercitammo","esercitaste","esercitarono"],"pluperfectIndicative":["avevo esercitato","avevi esercitato","aveva esercitato","avevamo esercitato","avevate esercitato","avevano esercitato"],"imperfectSubjunctive":["abbia esercitato","abbia esercitato","abbia esercitato","abbiamo esercitato","abbiate esercitato","abbiano esercitato"],"pastConditional":["avrei esercitato","avresti esercitato","avrebbe esercitato","avremmo esercitato","avreste esercitato","avrebbero esercitato"],"pastSubjunctive":["esercitassi","esercitassi","esercitasse","esercitassimo","esercitaste","esercitassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi esercitato","avessi esercitato","avesse esercitato","avessimo esercitato","aveste esercitato","avessero esercitato"],"imperfectIndicative":["esercitavo","esercitavi","esercitava","esercitavamo","esercitavate","esercitavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi esercitato","avesti esercitato","ebbe esercitato","avemmo esercitato","aveste esercitato","ebbero esercitato"],"verb":"esercitare","imperative":["esercita","eserciti","esercitiamo","esercitate","esercitino"],"presentIndicative":["esercito","eserciti","esercita","esercitiamo","esercitate","esercitano"],"presentConditional":["eserciterei","eserciteresti","eserciterebbe","eserciteremmo","esercitereste","eserciterebbero"],"impersonalForms":["esercitare","esercitante","esercitando","esercitato","avere esercitato","avendo esercitato","avente esercitato"],"pastIndicative":["ho esercitato","hai esercitato","ha esercitato","abbiamo esercitato","avete esercitato","hanno esercitato"],"futureIndicative":["eserciter\\xF2","eserciterai","eserciter\\xE0","eserciteremo","eserciterete","eserciteranno"]},{"futurePerfectIndicative":["avr\\xF2 esplorato","avrai esplorato","avr\\xE0 esplorato","avremo esplorato","avrete esplorato","avranno esplorato"],"presentSubjunctive":["esplori","esplori","esplori","esploriamo","esploriate","esplorino"],"pastRemoteIndicative":["esplorai","esplorasti","esplor\\xF2","esplorammo","esploraste","esplorarono"],"pluperfectIndicative":["avevo esplorato","avevi esplorato","aveva esplorato","avevamo esplorato","avevate esplorato","avevano esplorato"],"imperfectSubjunctive":["abbia esplorato","abbia esplorato","abbia esplorato","abbiamo esplorato","abbiate esplorato","abbiano esplorato"],"pastConditional":["avrei esplorato","avresti esplorato","avrebbe esplorato","avremmo esplorato","avreste esplorato","avrebbero esplorato"],"pastSubjunctive":["esplorassi","esplorassi","esplorasse","esplorassimo","esploraste","esplorassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi esplorato","avessi esplorato","avesse esplorato","avessimo esplorato","aveste esplorato","avessero esplorato"],"imperfectIndicative":["esploravo","esploravi","esplorava","esploravamo","esploravate","esploravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi esplorato","avesti esplorato","ebbe esplorato","avemmo esplorato","aveste esplorato","ebbero esplorato"],"verb":"esplorare","imperative":["esplora","esplori","esploriamo","esplorate","esplorino"],"presentIndicative":["esploro","esplori","esplora","esploriamo","esplorate","esplorano"],"presentConditional":["esplorerei","esploreresti","esplorerebbe","esploreremmo","esplorereste","esplorerebbero"],"impersonalForms":["esplorare","esplorante","esplorando","esplorato","avere esplorato","avendo esplorato","avente esplorato"],"pastIndicative":["ho esplorato","hai esplorato","ha esplorato","abbiamo esplorato","avete esplorato","hanno esplorato"],"futureIndicative":["esplorer\\xF2","esplorerai","esplorer\\xE0","esploreremo","esplorerete","esploreranno"]},{"futurePerfectIndicative":["avr\\xF2 espresso","avrai espresso","avr\\xE0 espresso","avremo espresso","avrete espresso","avranno espresso"],"presentSubjunctive":["esprima","esprima","esprima","esprimiamo","esprimiate","esprimano"],"pastRemoteIndicative":["espressi","esprimesti","espresse","esprimemmo","esprimeste","espressero"],"pluperfectIndicative":["avevo espresso","avevi espresso","aveva espresso","avevamo espresso","avevate espresso","avevano espresso"],"imperfectSubjunctive":["abbia espresso","abbia espresso","abbia espresso","abbiamo espresso","abbiate espresso","abbiano espresso"],"pastConditional":["avrei espresso","avresti espresso","avrebbe espresso","avremmo espresso","avreste espresso","avrebbero espresso"],"pastSubjunctive":["esprimessi","esprimessi","esprimesse","esprimessimo","esprimeste","esprimessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi espresso","avessi espresso","avesse espresso","avessimo espresso","aveste espresso","avessero espresso"],"imperfectIndicative":["esprimevo","esprimevi","esprimeva","esprimevamo","esprimevate","esprimevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi espresso","avesti espresso","ebbe espresso","avemmo espresso","aveste espresso","ebbero espresso"],"verb":"esprimere","imperative":["esprimi","esprima","esprimiamo","esprimete","esprimano"],"presentIndicative":["esprimo","esprimi","esprime","esprimiamo","esprimete","esprimono"],"presentConditional":["esprimerei","esprimeresti","esprimerebbe","esprimeremmo","esprimereste","esprimerebbero"],"impersonalForms":["esprimere","esprimente","esprimendo","espresso","avere espresso","avendo espresso","avente espresso"],"pastIndicative":["ho espresso","hai espresso","ha espresso","abbiamo espresso","avete espresso","hanno espresso"],"futureIndicative":["esprimer\\xF2","esprimerai","esprimer\\xE0","esprimeremo","esprimerete","esprimeranno"]},{"futurePerfectIndicative":["sar\\xF2 stato","sarai stato","sar\\xE0 stato","saremo stati","sarete stati","saranno stati"],"presentSubjunctive":["sia","sia","sia","siamo","siate","siano"],"pastRemoteIndicative":["fui","fosti","fu","fummo","foste","furono"],"pluperfectIndicative":["ero stato","eri stato","era stato","eravamo stati","eravate stati","erano stati"],"imperfectSubjunctive":["sia stato","sia stato","sia stato","siamo stati","siate stati","siano stati"],"pastConditional":["sarei stato","saresti stato","sarebbe stato","saremmo stati","sareste stati","sarebbero stati"],"pastSubjunctive":["fossi","fossi","fosse","fossimo","foste","fossero"],"similarVerbs":"","pluperfectSubjunctive":["fossi stato","fossi stato","fosse stato","fossimo stati","foste stati","fossero stati"],"imperfectIndicative":["ero","eri","era","eravamo","eravate","erano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui stato","fosti stato","fu stato","fummo stati","foste stati","furono stati"],"verb":"essere","imperative":["sii","sia","siamo","siate","siano"],"presentIndicative":["sono","sei","\\xE8","siamo","siete","sono"],"presentConditional":["sarei","saresti","sarebbe","saremmo","sareste","sarebbero"],"impersonalForms":["essere","essente","essendo","stato","essere stato","essendo stato","essente stato"],"pastIndicative":["sono stato","sei stato","\\xE8 stato","siamo stati","siete stati","sono stati"],"futureIndicative":["sar\\xF2","sarai","sar\\xE0","saremo","sarete","saranno"]},{"futurePerfectIndicative":["avr\\xF2 fallito; sar\\xF2 fallito","avrai fallito; sarai fallito","avr\\xE0 fallito; sar\\xE0 fallito","avremo fallito; saremo falliti","avrete fallito; sarete falliti","avranno fallito; saranno falliti"],"presentSubjunctive":["fallisca","fallisca","fallisca","falliamo","falliate","falliscano"],"pastRemoteIndicative":["fallii","fallisti","fall\\xEC","fallimmo","falliste","fallirono"],"pluperfectIndicative":["avevo fallito; ero fallito","avevi fallito; eri fallito","aveva fallito; era fallito","avevamo fallito; eravamo falliti","avevate fallito; eravate falliti","avevano fallito; erano falliti"],"imperfectSubjunctive":["abbia fallito; sia fallito","abbia fallito; sia fallito","abbia fallito; sia fallito","abbiamo fallito; siamo falliti","abbiate fallito; siate falliti","abbiano fallito; siano falliti"],"pastConditional":["avrei fallito; sarei fallito","avresti fallito; saresti fallito","avrebbe fallito; sarebbe fallito","avremmo fallito; saremmo falliti","avreste fallito; sareste falliti","avrebbero fallito; sarebbero falliti"],"pastSubjunctive":["fallissi","fallissi","fallisse","fallissimo","falliste","fallissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fallito; fossi fallito","avessi fallito; fossi fallito","avesse fallito; fosse fallito","avessimo fallito; fossimo falliti","aveste fallito; foste falliti","avessero fallito; fossero falliti"],"imperfectIndicative":["fallivo","fallivi","falliva","fallivamo","fallivate","fallivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi fallito; fui fallito","avesti fallito; fosti fallito","ebbe fallito; fu fallito","avemmo fallito; fummo falliti","aveste fallito; foste falliti","ebbero fallito; furono falliti"],"verb":"fallire","imperative":["fallisci","fallisca","falliamo","fallite","falliscano"],"presentIndicative":["fallisco","fallisci","fallisce","falliamo","fallite","falliscono"],"presentConditional":["fallirei","falliresti","fallirebbe","falliremmo","fallireste","fallirebbero"],"impersonalForms":["fallire","fallente","fallendo","fallito","avere fallito; essere fallito","avendo fallito; essendo fallito","avente fallito; essente fallito"],"pastIndicative":["ho fallito; sono fallito","hai fallito; sei fallito","ha fallito; \\xE8 fallito","abbiamo fallito; siamo falliti","avete fallito; siete falliti","hanno fallito; sono falliti"],"futureIndicative":["fallir\\xF2","fallirai","fallir\\xE0","falliremo","fallirete","falliranno"]},{"futurePerfectIndicative":["avr\\xF2 fatto","avrai fatto","avr\\xE0 fatto","avremo fatto","avrete fatto","avranno fatto"],"presentSubjunctive":["faccia","faccia","faccia","facciamo","facciate","facciano"],"pastRemoteIndicative":["feci","facesti","fece","facemmo","faceste","fecero"],"pluperfectIndicative":["avevo fatto","avevi fatto","aveva fatto","avevamo fatto","avevate fatto","avevano fatto"],"imperfectSubjunctive":["abbia fatto","abbia fatto","abbia fatto","abbiamo fatto","abbiate fatto","abbiano fatto"],"pastConditional":["avrei fatto","avresti fatto","avrebbe fatto","avremmo fatto","avreste fatto","avrebbero fatto"],"pastSubjunctive":["facessi","facessi","facesse","facessimo","faceste","facessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fatto","avessi fatto","avesse fatto","avessimo fatto","aveste fatto","avessero fatto"],"imperfectIndicative":["facevo","facevi","faceva","facevamo","facevate","facevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi fatto","avesti fatto","ebbe fatto","avemmo fatto","aveste fatto","ebbero fatto"],"verb":"fare","imperative":["fa\'; fai","faccia","facciamo","fate","facciano"],"presentIndicative":["faccio","fai","fa","facciamo","fate","fanno"],"presentConditional":["farei","faresti","farebbe","faremmo","fareste","farebbero"],"impersonalForms":["fare","facente","facendo","fatto","avere fatto","avendo fatto","avente fatto"],"pastIndicative":["ho fatto","hai fatto","ha fatto","abbiamo fatto","avete fatto","hanno fatto"],"futureIndicative":["far\\xF2","farai","far\\xE0","faremo","farete","faranno"]},{"futurePerfectIndicative":["avr\\xF2 ferito","avrai ferito","avr\\xE0 ferito","avremo ferito","avrete ferito","avranno ferito"],"presentSubjunctive":["ferisca","ferisca","ferisca","feriamo","feriate","feriscano"],"pastRemoteIndicative":["ferii","feristi","fer\\xEC","ferimmo","feriste","ferirono"],"pluperfectIndicative":["avevo ferito","avevi ferito","aveva ferito","avevamo ferito","avevate ferito","avevano ferito"],"imperfectSubjunctive":["abbia ferito","abbia ferito","abbia ferito","abbiamo ferito","abbiate ferito","abbiano ferito"],"pastConditional":["avrei ferito","avresti ferito","avrebbe ferito","avremmo ferito","avreste ferito","avrebbero ferito"],"pastSubjunctive":["ferissi","ferissi","ferisse","ferissimo","feriste","ferissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ferito","avessi ferito","avesse ferito","avessimo ferito","aveste ferito","avessero ferito"],"imperfectIndicative":["ferivo","ferivi","feriva","ferivamo","ferivate","ferivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ferito","avesti ferito","ebbe ferito","avemmo ferito","aveste ferito","ebbero ferito"],"verb":"ferire","imperative":["ferisci","ferisca","feriamo","ferite","feriscano"],"presentIndicative":["ferisco","ferisci","ferisce","feriamo","ferite","feriscono"],"presentConditional":["ferirei","feriresti","ferirebbe","feriremmo","ferireste","ferirebbero"],"impersonalForms":["ferire","ferente","ferendo","ferito","avere ferito","avendo ferito","avente ferito"],"pastIndicative":["ho ferito","hai ferito","ha ferito","abbiamo ferito","avete ferito","hanno ferito"],"futureIndicative":["ferir\\xF2","ferirai","ferir\\xE0","feriremo","ferirete","feriranno"]},{"futurePerfectIndicative":["avr\\xF2 fermato","avrai fermato","avr\\xE0 fermato","avremo fermato","avrete fermato","avranno fermato"],"presentSubjunctive":["fermi","fermi","fermi","fermiamo","fermiate","fermino"],"pastRemoteIndicative":["fermai","fermasti","ferm\\xF2","fermammo","fermaste","fermarono"],"pluperfectIndicative":["avevo fermato","avevi fermato","aveva fermato","avevamo fermato","avevate fermato","avevano fermato"],"imperfectSubjunctive":["abbia fermato","abbia fermato","abbia fermato","abbiamo fermato","abbiate fermato","abbiano fermato"],"pastConditional":["avrei fermato","avresti fermato","avrebbe fermato","avremmo fermato","avreste fermato","avrebbero fermato"],"pastSubjunctive":["fermassi","fermassi","fermasse","fermassimo","fermaste","fermassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fermato","avessi fermato","avesse fermato","avessimo fermato","aveste fermato","avessero fermato"],"imperfectIndicative":["fermavo","fermavi","fermava","fermavamo","fermavate","fermavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi fermato","avesti fermato","ebbe fermato","avemmo fermato","aveste fermato","ebbero fermato"],"verb":"fermare","imperative":["ferma","fermi","fermiamo","fermate","fermino"],"presentIndicative":["fermo","fermi","ferma","fermiamo","fermate","fermano"],"presentConditional":["fermerei","fermeresti","fermerebbe","fermeremmo","fermereste","fermerebbero"],"impersonalForms":["fermare","fermante","fermando","fermato","avere fermato","avendo fermato","avente fermato"],"pastIndicative":["ho fermato","hai fermato","ha fermato","abbiamo fermato","avete fermato","hanno fermato"],"futureIndicative":["fermer\\xF2","fermerai","fermer\\xE0","fermeremo","fermerete","fermeranno"]},{"futurePerfectIndicative":["avr\\xF2 filmato","avrai filmato","avr\\xE0 filmato","avremo filmato","avrete filmato","avranno filmato"],"presentSubjunctive":["filmi","filmi","filmi","filmiamo","filmiate","filmino"],"pastRemoteIndicative":["filmai","filmasti","film\\xF2","filmammo","filmaste","filmarono"],"pluperfectIndicative":["avevo filmato","avevi filmato","aveva filmato","avevamo filmato","avevate filmato","avevano filmato"],"imperfectSubjunctive":["abbia filmato","abbia filmato","abbia filmato","abbiamo filmato","abbiate filmato","abbiano filmato"],"pastConditional":["avrei filmato","avresti filmato","avrebbe filmato","avremmo filmato","avreste filmato","avrebbero filmato"],"pastSubjunctive":["filmassi","filmassi","filmasse","filmassimo","filmaste","filmassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi filmato","avessi filmato","avesse filmato","avessimo filmato","aveste filmato","avessero filmato"],"imperfectIndicative":["filmavo","filmavi","filmava","filmavamo","filmavate","filmavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi filmato","avesti filmato","ebbe filmato","avemmo filmato","aveste filmato","ebbero filmato"],"verb":"filmare","imperative":["filma","filmi","filmiamo","filmate","filmino"],"presentIndicative":["filmo","filmi","filma","filmiamo","filmate","filmano"],"presentConditional":["filmerei","filmeresti","filmerebbe","filmeremmo","filmereste","filmerebbero"],"impersonalForms":["filmare","filmante","filmando","filmato","avere filmato","avendo filmato","avente filmato"],"pastIndicative":["ho filmato","hai filmato","ha filmato","abbiamo filmato","avete filmato","hanno filmato"],"futureIndicative":["filmer\\xF2","filmerai","filmer\\xE0","filmeremo","filmerete","filmeranno"]},{"futurePerfectIndicative":["avr\\xF2 finito; sar\\xF2 finito","avrai finito; sarai finito","avr\\xE0 finito; sar\\xE0 finito","avremo finito; saremo finiti","avrete finito; sarete finiti","avranno finito; saranno finiti"],"presentSubjunctive":["finisca","finisca","finisca","finiamo","finiate","finiscano"],"pastRemoteIndicative":["finii","finisti","fin\\xEC","finimmo","finiste","finirono"],"pluperfectIndicative":["avevo finito; ero finito","avevi finito; eri finito","aveva finito; era finito","avevamo finito; eravamo finiti","avevate finito; eravate finiti","avevano finito; erano finiti"],"imperfectSubjunctive":["abbia finito; sia finito","abbia finito; sia finito","abbia finito; sia finito","abbiamo finito; siamo finiti","abbiate finito; siate finiti","abbiano finito; siano finiti"],"pastConditional":["avrei finito; sarei finito","avresti finito; saresti finito","avrebbe finito; sarebbe finito","avremmo finito; saremmo finiti","avreste finito; sareste finiti","avrebbero finito; sarebbero finiti"],"pastSubjunctive":["finissi","finissi","finisse","finissimo","finiste","finissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi finito; fossi finito","avessi finito; fossi finito","avesse finito; fosse finito","avessimo finito; fossimo finiti","aveste finito; foste finiti","avessero finito; fossero finiti"],"imperfectIndicative":["finivo","finivi","finiva","finivamo","finivate","finivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi finito; fui finito","avesti finito; fosti finito","ebbe finito; fu finito","avemmo finito; fummo finiti","aveste finito; foste finiti","ebbero finito; furono finiti"],"verb":"finire","imperative":["finisci","finisca","finiamo","finite","finiscano"],"presentIndicative":["finisco","finisci","finisce","finiamo","finite","finiscono"],"presentConditional":["finirei","finiresti","finirebbe","finiremmo","finireste","finirebbero"],"impersonalForms":["finire","finente","finendo","finito","avere finito; essere finito","avendo finito; essendo finito","avente finito; essente finito"],"pastIndicative":["ho finito; sono finito","hai finito; sei finito","ha finito; \\xE8 finito","abbiamo finito; siamo finiti","avete finito; siete finiti","hanno finito; sono finiti"],"futureIndicative":["finir\\xF2","finirai","finir\\xE0","finiremo","finirete","finiranno"]},{"futurePerfectIndicative":["avr\\xF2 fotografato","avrai fotografato","avr\\xE0 fotografato","avremo fotografato","avrete fotografato","avranno fotografato"],"presentSubjunctive":["fotografi","fotografi","fotografi","fotografiamo","fotografiate","fotografino"],"pastRemoteIndicative":["fotografai","fotografasti","fotograf\\xF2","fotografammo","fotografaste","fotografarono"],"pluperfectIndicative":["avevo fotografato","avevi fotografato","aveva fotografato","avevamo fotografato","avevate fotografato","avevano fotografato"],"imperfectSubjunctive":["abbia fotografato","abbia fotografato","abbia fotografato","abbiamo fotografato","abbiate fotografato","abbiano fotografato"],"pastConditional":["avrei fotografato","avresti fotografato","avrebbe fotografato","avremmo fotografato","avreste fotografato","avrebbero fotografato"],"pastSubjunctive":["fotografassi","fotografassi","fotografasse","fotografassimo","fotografaste","fotografassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fotografato","avessi fotografato","avesse fotografato","avessimo fotografato","aveste fotografato","avessero fotografato"],"imperfectIndicative":["fotografavo","fotografavi","fotografava","fotografavamo","fotografavate","fotografavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi fotografato","avesti fotografato","ebbe fotografato","avemmo fotografato","aveste fotografato","ebbero fotografato"],"verb":"fotografare","imperative":["fotografa","fotografi","fotografiamo","fotografate","fotografino"],"presentIndicative":["fotografo","fotografi","fotografa","fotografiamo","fotografate","fotografano"],"presentConditional":["fotograferei","fotograferesti","fotograferebbe","fotograferemmo","fotografereste","fotograferebbero"],"impersonalForms":["fotografare","fotografante","fotografando","fotografato","avere fotografato","avendo fotografato","avente fotografato"],"pastIndicative":["ho fotografato","hai fotografato","ha fotografato","abbiamo fotografato","avete fotografato","hanno fotografato"],"futureIndicative":["fotografer\\xF2","fotograferai","fotografer\\xE0","fotograferemo","fotograferete","fotograferanno"]},{"futurePerfectIndicative":["avr\\xF2 fritto","avrai fritto","avr\\xE0 fritto","avremo fritto","avrete fritto","avranno fritto"],"presentSubjunctive":["frigga","frigga","frigga","friggiamo","friggiate","friggano"],"pastRemoteIndicative":["frissi","friggesti","frisse","friggemmo","friggeste","frissero"],"pluperfectIndicative":["avevo fritto","avevi fritto","aveva fritto","avevamo fritto","avevate fritto","avevano fritto"],"imperfectSubjunctive":["abbia fritto","abbia fritto","abbia fritto","abbiamo fritto","abbiate fritto","abbiano fritto"],"pastConditional":["avrei fritto","avresti fritto","avrebbe fritto","avremmo fritto","avreste fritto","avrebbero fritto"],"pastSubjunctive":["friggessi","friggessi","friggesse","friggessimo","friggeste","friggessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fritto","avessi fritto","avesse fritto","avessimo fritto","aveste fritto","avessero fritto"],"imperfectIndicative":["friggevo","friggevi","friggeva","friggevamo","friggevate","friggevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi fritto","avesti fritto","ebbe fritto","avemmo fritto","aveste fritto","ebbero fritto"],"verb":"friggere","imperative":["friggi","frigga","friggiamo","friggete","friggano"],"presentIndicative":["friggo","friggi","frigge","friggiamo","friggete","friggono"],"presentConditional":["friggerei","friggeresti","friggerebbe","friggeremmo","friggereste","friggerebbero"],"impersonalForms":["friggere","friggente","friggendo","fritto","avere fritto","avendo fritto","avente fritto"],"pastIndicative":["ho fritto","hai fritto","ha fritto","abbiamo fritto","avete fritto","hanno fritto"],"futureIndicative":["frigger\\xF2","friggerai","frigger\\xE0","friggeremo","friggerete","friggeranno"]},{"futurePerfectIndicative":["avr\\xF2 fumato","avrai fumato","avr\\xE0 fumato","avremo fumato","avrete fumato","avranno fumato"],"presentSubjunctive":["fumi","fumi","fumi","fumiamo","fumiate","fumino"],"pastRemoteIndicative":["fumai","fumasti","fum\\xF2","fumammo","fumaste","fumarono"],"pluperfectIndicative":["avevo fumato","avevi fumato","aveva fumato","avevamo fumato","avevate fumato","avevano fumato"],"imperfectSubjunctive":["abbia fumato","abbia fumato","abbia fumato","abbiamo fumato","abbiate fumato","abbiano fumato"],"pastConditional":["avrei fumato","avresti fumato","avrebbe fumato","avremmo fumato","avreste fumato","avrebbero fumato"],"pastSubjunctive":["fumassi","fumassi","fumasse","fumassimo","fumaste","fumassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi fumato","avessi fumato","avesse fumato","avessimo fumato","aveste fumato","avessero fumato"],"imperfectIndicative":["fumavo","fumavi","fumava","fumavamo","fumavate","fumavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi fumato","avesti fumato","ebbe fumato","avemmo fumato","aveste fumato","ebbero fumato"],"verb":"fumare","imperative":["fuma","fumi","fumiamo","fumate","fumino"],"presentIndicative":["fumo","fumi","fuma","fumiamo","fumate","fumano"],"presentConditional":["fumerei","fumeresti","fumerebbe","fumeremmo","fumereste","fumerebbero"],"impersonalForms":["fumare","fumante","fumando","fumato","avere fumato","avendo fumato","avente fumato"],"pastIndicative":["ho fumato","hai fumato","ha fumato","abbiamo fumato","avete fumato","hanno fumato"],"futureIndicative":["fumer\\xF2","fumerai","fumer\\xE0","fumeremo","fumerete","fumeranno"]},{"futurePerfectIndicative":["avr\\xF2 giocato","avrai giocato","avr\\xE0 giocato","avremo giocato","avrete giocato","avranno giocato"],"presentSubjunctive":["giochi","giochi","giochi","giochiamo","giochiate","giochino"],"pastRemoteIndicative":["giocai","giocasti","gioc\\xF2","giocammo","giocaste","giocarono"],"pluperfectIndicative":["avevo giocato","avevi giocato","aveva giocato","avevamo giocato","avevate giocato","avevano giocato"],"imperfectSubjunctive":["abbia giocato","abbia giocato","abbia giocato","abbiamo giocato","abbiate giocato","abbiano giocato"],"pastConditional":["avrei giocato","avresti giocato","avrebbe giocato","avremmo giocato","avreste giocato","avrebbero giocato"],"pastSubjunctive":["giocassi","giocassi","giocasse","giocassimo","giocaste","giocassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi giocato","avessi giocato","avesse giocato","avessimo giocato","aveste giocato","avessero giocato"],"imperfectIndicative":["giocavo","giocavi","giocava","giocavamo","giocavate","giocavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi giocato","avesti giocato","ebbe giocato","avemmo giocato","aveste giocato","ebbero giocato"],"verb":"giocare","imperative":["gioca","giochi","giochiamo","giocate","giochino"],"presentIndicative":["gioco","giochi","gioca","giochiamo","giocate","giocano"],"presentConditional":["giocherei","giocheresti","giocherebbe","giocheremmo","giochereste","giocherebbero"],"impersonalForms":["giocare","giocante","giocando","giocato","avere giocato","avendo giocato","avente giocato"],"pastIndicative":["ho giocato","hai giocato","ha giocato","abbiamo giocato","avete giocato","hanno giocato"],"futureIndicative":["giocher\\xF2","giocherai","giocher\\xE0","giocheremo","giocherete","giocheranno"]},{"futurePerfectIndicative":["avr\\xF2 girato; sar\\xF2 girato","avrai girato; sarai girato","avr\\xE0 girato; sar\\xE0 girato","avremo girato; saremo girati","avrete girato; sarete girati","avranno girato; saranno girati"],"presentSubjunctive":["giri","giri","giri","giriamo","giriate","girino"],"pastRemoteIndicative":["girai","girasti","gir\\xF2","girammo","giraste","girarono"],"pluperfectIndicative":["avevo girato; ero girato","avevi girato; eri girato","aveva girato; era girato","avevamo girato; eravamo girati","avevate girato; eravate girati","avevano girato; erano girati"],"imperfectSubjunctive":["abbia girato; sia girato","abbia girato; sia girato","abbia girato; sia girato","abbiamo girato; siamo girati","abbiate girato; siate girati","abbiano girato; siano girati"],"pastConditional":["avrei girato; sarei girato","avresti girato; saresti girato","avrebbe girato; sarebbe girato","avremmo girato; saremmo girati","avreste girato; sareste girati","avrebbero girato; sarebbero girati"],"pastSubjunctive":["girassi","girassi","girasse","girassimo","giraste","girassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi girato; fossi girato","avessi girato; fossi girato","avesse girato; fosse girato","avessimo girato; fossimo girati","aveste girato; foste girati","avessero girato; fossero girati"],"imperfectIndicative":["giravo","giravi","girava","giravamo","giravate","giravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi girato; fui girato","avesti girato; fosti girato","ebbe girato; fu girato","avemmo girato; fummo girati","aveste girato; foste girati","ebbero girato; furono girati"],"verb":"girare","imperative":["gira","giri","giriamo","girate","girino"],"presentIndicative":["giro","giri","gira","giriamo","girate","girano"],"presentConditional":["girerei","gireresti","girerebbe","gireremmo","girereste","girerebbero"],"impersonalForms":["girare","girante","girando","girato","avere girato; essere girato","avendo girato; essendo girato","avente girato; essente girato"],"pastIndicative":["ho girato; sono girato","hai girato; sei girato","ha girato; \\xE8 girato","abbiamo girato; siamo girati","avete girato; siete girati","hanno girato; sono girati"],"futureIndicative":["girer\\xF2","girerai","girer\\xE0","gireremo","girerete","gireranno"]},{"futurePerfectIndicative":["avr\\xF2 giudicato","avrai giudicato","avr\\xE0 giudicato","avremo giudicato","avrete giudicato","avranno giudicato"],"presentSubjunctive":["giudichi","giudichi","giudichi","giudichiamo","giudichiate","giudichino"],"pastRemoteIndicative":["giudicai","giudicasti","giudic\\xF2","giudicammo","giudicaste","giudicarono"],"pluperfectIndicative":["avevo giudicato","avevi giudicato","aveva giudicato","avevamo giudicato","avevate giudicato","avevano giudicato"],"imperfectSubjunctive":["abbia giudicato","abbia giudicato","abbia giudicato","abbiamo giudicato","abbiate giudicato","abbiano giudicato"],"pastConditional":["avrei giudicato","avresti giudicato","avrebbe giudicato","avremmo giudicato","avreste giudicato","avrebbero giudicato"],"pastSubjunctive":["giudicassi","giudicassi","giudicasse","giudicassimo","giudicaste","giudicassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi giudicato","avessi giudicato","avesse giudicato","avessimo giudicato","aveste giudicato","avessero giudicato"],"imperfectIndicative":["giudicavo","giudicavi","giudicava","giudicavamo","giudicavate","giudicavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi giudicato","avesti giudicato","ebbe giudicato","avemmo giudicato","aveste giudicato","ebbero giudicato"],"verb":"giudicare","imperative":["giudica","giudichi","giudichiamo","giudicate","giudichino"],"presentIndicative":["giudico","giudichi","giudica","giudichiamo","giudicate","giudicano"],"presentConditional":["giudicherei","giudicheresti","giudicherebbe","giudicheremmo","giudichereste","giudicherebbero"],"impersonalForms":["giudicare","giudicante","giudicando","giudicato","avere giudicato","avendo giudicato","avente giudicato"],"pastIndicative":["ho giudicato","hai giudicato","ha giudicato","abbiamo giudicato","avete giudicato","hanno giudicato"],"futureIndicative":["giudicher\\xF2","giudicherai","giudicher\\xE0","giudicheremo","giudicherete","giudicheranno"]},{"futurePerfectIndicative":["avr\\xF2 gridato","avrai gridato","avr\\xE0 gridato","avremo gridato","avrete gridato","avranno gridato"],"presentSubjunctive":["gridi","gridi","gridi","gridiamo","gridiate","gridino"],"pastRemoteIndicative":["gridai","gridasti","grid\\xF2","gridammo","gridaste","gridarono"],"pluperfectIndicative":["avevo gridato","avevi gridato","aveva gridato","avevamo gridato","avevate gridato","avevano gridato"],"imperfectSubjunctive":["abbia gridato","abbia gridato","abbia gridato","abbiamo gridato","abbiate gridato","abbiano gridato"],"pastConditional":["avrei gridato","avresti gridato","avrebbe gridato","avremmo gridato","avreste gridato","avrebbero gridato"],"pastSubjunctive":["gridassi","gridassi","gridasse","gridassimo","gridaste","gridassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi gridato","avessi gridato","avesse gridato","avessimo gridato","aveste gridato","avessero gridato"],"imperfectIndicative":["gridavo","gridavi","gridava","gridavamo","gridavate","gridavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi gridato","avesti gridato","ebbe gridato","avemmo gridato","aveste gridato","ebbero gridato"],"verb":"gridare","imperative":["grida","gridi","gridiamo","gridate","gridino"],"presentIndicative":["grido","gridi","grida","gridiamo","gridate","gridano"],"presentConditional":["griderei","grideresti","griderebbe","grideremmo","gridereste","griderebbero"],"impersonalForms":["gridare","gridante","gridando","gridato","avere gridato","avendo gridato","avente gridato"],"pastIndicative":["ho gridato","hai gridato","ha gridato","abbiamo gridato","avete gridato","hanno gridato"],"futureIndicative":["grider\\xF2","griderai","grider\\xE0","grideremo","griderete","grideranno"]},{"futurePerfectIndicative":["avr\\xF2 guadagnato","avrai guadagnato","avr\\xE0 guadagnato","avremo guadagnato","avrete guadagnato","avranno guadagnato"],"presentSubjunctive":["guadagni","guadagni","guadagni","guadagniamo","guadagniate","guadagnino"],"pastRemoteIndicative":["guadagnai","guadagnasti","guadagn\\xF2","guadagnammo","guadagnaste","guadagnarono"],"pluperfectIndicative":["avevo guadagnato","avevi guadagnato","aveva guadagnato","avevamo guadagnato","avevate guadagnato","avevano guadagnato"],"imperfectSubjunctive":["abbia guadagnato","abbia guadagnato","abbia guadagnato","abbiamo guadagnato","abbiate guadagnato","abbiano guadagnato"],"pastConditional":["avrei guadagnato","avresti guadagnato","avrebbe guadagnato","avremmo guadagnato","avreste guadagnato","avrebbero guadagnato"],"pastSubjunctive":["guadagnassi","guadagnassi","guadagnasse","guadagnassimo","guadagnaste","guadagnassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi guadagnato","avessi guadagnato","avesse guadagnato","avessimo guadagnato","aveste guadagnato","avessero guadagnato"],"imperfectIndicative":["guadagnavo","guadagnavi","guadagnava","guadagnavamo","guadagnavate","guadagnavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi guadagnato","avesti guadagnato","ebbe guadagnato","avemmo guadagnato","aveste guadagnato","ebbero guadagnato"],"verb":"guadagnare","imperative":["guadagna","guadagni","guadagniamo","guadagnate","guadagnino"],"presentIndicative":["guadagno","guadagni","guadagna","guadagniamo","guadagnate","guadagnano"],"presentConditional":["guadagnerei","guadagneresti","guadagnerebbe","guadagneremmo","guadagnereste","guadagnerebbero"],"impersonalForms":["guadagnare","guadagnante","guadagnando","guadagnato","avere guadagnato","avendo guadagnato","avente guadagnato"],"pastIndicative":["ho guadagnato","hai guadagnato","ha guadagnato","abbiamo guadagnato","avete guadagnato","hanno guadagnato"],"futureIndicative":["guadagner\\xF2","guadagnerai","guadagner\\xE0","guadagneremo","guadagnerete","guadagneranno"]},{"futurePerfectIndicative":["avr\\xF2 guardato","avrai guardato","avr\\xE0 guardato","avremo guardato","avrete guardato","avranno guardato"],"presentSubjunctive":["guardi","guardi","guardi","guardiamo","guardiate","guardino"],"pastRemoteIndicative":["guardai","guardasti","guard\\xF2","guardammo","guardaste","guardarono"],"pluperfectIndicative":["avevo guardato","avevi guardato","aveva guardato","avevamo guardato","avevate guardato","avevano guardato"],"imperfectSubjunctive":["abbia guardato","abbia guardato","abbia guardato","abbiamo guardato","abbiate guardato","abbiano guardato"],"pastConditional":["avrei guardato","avresti guardato","avrebbe guardato","avremmo guardato","avreste guardato","avrebbero guardato"],"pastSubjunctive":["guardassi","guardassi","guardasse","guardassimo","guardaste","guardassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi guardato","avessi guardato","avesse guardato","avessimo guardato","aveste guardato","avessero guardato"],"imperfectIndicative":["guardavo","guardavi","guardava","guardavamo","guardavate","guardavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi guardato","avesti guardato","ebbe guardato","avemmo guardato","aveste guardato","ebbero guardato"],"verb":"guardare","imperative":["guarda","guardi","guardiamo","guardate","guardino"],"presentIndicative":["guardo","guardi","guarda","guardiamo","guardate","guardano"],"presentConditional":["guarderei","guarderesti","guarderebbe","guarderemmo","guardereste","guarderebbero"],"impersonalForms":["guardare","guardante","guardando","guardato","avere guardato","avendo guardato","avente guardato"],"pastIndicative":["ho guardato","hai guardato","ha guardato","abbiamo guardato","avete guardato","hanno guardato"],"futureIndicative":["guarder\\xF2","guarderai","guarder\\xE0","guarderemo","guarderete","guarderanno"]},{"futurePerfectIndicative":["avr\\xF2 guidato","avrai guidato","avr\\xE0 guidato","avremo guidato","avrete guidato","avranno guidato"],"presentSubjunctive":["guidi","guidi","guidi","guidiamo","guidiate","guidino"],"pastRemoteIndicative":["guidai","guidasti","guid\\xF2","guidammo","guidaste","guidarono"],"pluperfectIndicative":["avevo guidato","avevi guidato","aveva guidato","avevamo guidato","avevate guidato","avevano guidato"],"imperfectSubjunctive":["abbia guidato","abbia guidato","abbia guidato","abbiamo guidato","abbiate guidato","abbiano guidato"],"pastConditional":["avrei guidato","avresti guidato","avrebbe guidato","avremmo guidato","avreste guidato","avrebbero guidato"],"pastSubjunctive":["guidassi","guidassi","guidasse","guidassimo","guidaste","guidassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi guidato","avessi guidato","avesse guidato","avessimo guidato","aveste guidato","avessero guidato"],"imperfectIndicative":["guidavo","guidavi","guidava","guidavamo","guidavate","guidavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi guidato","avesti guidato","ebbe guidato","avemmo guidato","aveste guidato","ebbero guidato"],"verb":"guidare","imperative":["guida","guidi","guidiamo","guidate","guidino"],"presentIndicative":["guido","guidi","guida","guidiamo","guidate","guidano"],"presentConditional":["guiderei","guideresti","guiderebbe","guideremmo","guidereste","guiderebbero"],"impersonalForms":["guidare","guidante","guidando","guidato","avere guidato","avendo guidato","avente guidato"],"pastIndicative":["ho guidato","hai guidato","ha guidato","abbiamo guidato","avete guidato","hanno guidato"],"futureIndicative":["guider\\xF2","guiderai","guider\\xE0","guideremo","guiderete","guideranno"]},{"futurePerfectIndicative":["avr\\xF2 imparato","avrai imparato","avr\\xE0 imparato","avremo imparato","avrete imparato","avranno imparato"],"presentSubjunctive":["impari","impari","impari","impariamo","impariate","imparino"],"pastRemoteIndicative":["imparai","imparasti","impar\\xF2","imparammo","imparaste","impararono"],"pluperfectIndicative":["avevo imparato","avevi imparato","aveva imparato","avevamo imparato","avevate imparato","avevano imparato"],"imperfectSubjunctive":["abbia imparato","abbia imparato","abbia imparato","abbiamo imparato","abbiate imparato","abbiano imparato"],"pastConditional":["avrei imparato","avresti imparato","avrebbe imparato","avremmo imparato","avreste imparato","avrebbero imparato"],"pastSubjunctive":["imparassi","imparassi","imparasse","imparassimo","imparaste","imparassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi imparato","avessi imparato","avesse imparato","avessimo imparato","aveste imparato","avessero imparato"],"imperfectIndicative":["imparavo","imparavi","imparava","imparavamo","imparavate","imparavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi imparato","avesti imparato","ebbe imparato","avemmo imparato","aveste imparato","ebbero imparato"],"verb":"imparare","imperative":["impara","impari","impariamo","imparate","imparino"],"presentIndicative":["imparo","impari","impara","impariamo","imparate","imparano"],"presentConditional":["imparerei","impareresti","imparerebbe","impareremmo","imparereste","imparerebbero"],"impersonalForms":["imparare","imparante","imparando","imparato","avere imparato","avendo imparato","avente imparato"],"pastIndicative":["ho imparato","hai imparato","ha imparato","abbiamo imparato","avete imparato","hanno imparato"],"futureIndicative":["imparer\\xF2","imparerai","imparer\\xE0","impareremo","imparerete","impareranno"]},{"futurePerfectIndicative":["avr\\xF2 incluso","avrai incluso","avr\\xE0 incluso","avremo incluso","avrete incluso","avranno incluso"],"presentSubjunctive":["includa","includa","includa","includiamo","includiate","includano"],"pastRemoteIndicative":["inclusi","includesti","incluse","includemmo","includeste","inclusero"],"pluperfectIndicative":["avevo incluso","avevi incluso","aveva incluso","avevamo incluso","avevate incluso","avevano incluso"],"imperfectSubjunctive":["abbia incluso","abbia incluso","abbia incluso","abbiamo incluso","abbiate incluso","abbiano incluso"],"pastConditional":["avrei incluso","avresti incluso","avrebbe incluso","avremmo incluso","avreste incluso","avrebbero incluso"],"pastSubjunctive":["includessi","includessi","includesse","includessimo","includeste","includessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi incluso","avessi incluso","avesse incluso","avessimo incluso","aveste incluso","avessero incluso"],"imperfectIndicative":["includevo","includevi","includeva","includevamo","includevate","includevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi incluso","avesti incluso","ebbe incluso","avemmo incluso","aveste incluso","ebbero incluso"],"verb":"includere","imperative":["includi","includa","includiamo","includete","includano"],"presentIndicative":["includo","includi","include","includiamo","includete","includono"],"presentConditional":["includerei","includeresti","includerebbe","includeremmo","includereste","includerebbero"],"impersonalForms":["includere","includente","includendo","incluso","avere incluso","avendo incluso","avente incluso"],"pastIndicative":["ho incluso","hai incluso","ha incluso","abbiamo incluso","avete incluso","hanno incluso"],"futureIndicative":["includer\\xF2","includerai","includer\\xE0","includeremo","includerete","includeranno"]},{"futurePerfectIndicative":["avr\\xF2 incontrato; sar\\xF2 incontrato","avrai incontrato; sarai incontrato","avr\\xE0 incontrato; sar\\xE0 incontrato","avremo incontrato; saremo incontrati","avrete incontrato; sarete incontrati","avranno incontrato; saranno incontrati"],"presentSubjunctive":["incontri","incontri","incontri","incontriamo","incontriate","incontrino"],"pastRemoteIndicative":["incontrai","incontrasti","incontr\\xF2","incontrammo","incontraste","incontrarono"],"pluperfectIndicative":["avevo incontrato; ero incontrato","avevi incontrato; eri incontrato","aveva incontrato; era incontrato","avevamo incontrato; eravamo incontrati","avevate incontrato; eravate incontrati","avevano incontrato; erano incontrati"],"imperfectSubjunctive":["abbia incontrato; sia incontrato","abbia incontrato; sia incontrato","abbia incontrato; sia incontrato","abbiamo incontrato; siamo incontrati","abbiate incontrato; siate incontrati","abbiano incontrato; siano incontrati"],"pastConditional":["avrei incontrato; sarei incontrato","avresti incontrato; saresti incontrato","avrebbe incontrato; sarebbe incontrato","avremmo incontrato; saremmo incontrati","avreste incontrato; sareste incontrati","avrebbero incontrato; sarebbero incontrati"],"pastSubjunctive":["incontrassi","incontrassi","incontrasse","incontrassimo","incontraste","incontrassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi incontrato; fossi incontrato","avessi incontrato; fossi incontrato","avesse incontrato; fosse incontrato","avessimo incontrato; fossimo incontrati","aveste incontrato; foste incontrati","avessero incontrato; fossero incontrati"],"imperfectIndicative":["incontravo","incontravi","incontrava","incontravamo","incontravate","incontravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi incontrato; fui incontrato","avesti incontrato; fosti incontrato","ebbe incontrato; fu incontrato","avemmo incontrato; fummo incontrati","aveste incontrato; foste incontrati","ebbero incontrato; furono incontrati"],"verb":"incontrare","imperative":["incontra","incontri","incontriamo","incontrate","incontrino"],"presentIndicative":["incontro","incontri","incontra","incontriamo","incontrate","incontrano"],"presentConditional":["incontrerei","incontreresti","incontrerebbe","incontreremmo","incontrereste","incontrerebbero"],"impersonalForms":["incontrare","incontrante","incontrando","incontrato","avere incontrato; essere incontrato","avendo incontrato; essendo incontrato","avente incontrato; essente incontrato"],"pastIndicative":["ho incontrato; sono incontrato","hai incontrato; sei incontrato","ha incontrato; \\xE8 incontrato","abbiamo incontrato; siamo incontrati","avete incontrato; siete incontrati","hanno incontrato; sono incontrati"],"futureIndicative":["incontrer\\xF2","incontrerai","incontrer\\xE0","incontreremo","incontrerete","incontreranno"]},{"futurePerfectIndicative":["avr\\xF2 indicato","avrai indicato","avr\\xE0 indicato","avremo indicato","avrete indicato","avranno indicato"],"presentSubjunctive":["indichi","indichi","indichi","indichiamo","indichiate","indichino"],"pastRemoteIndicative":["indicai","indicasti","indic\\xF2","indicammo","indicaste","indicarono"],"pluperfectIndicative":["avevo indicato","avevi indicato","aveva indicato","avevamo indicato","avevate indicato","avevano indicato"],"imperfectSubjunctive":["abbia indicato","abbia indicato","abbia indicato","abbiamo indicato","abbiate indicato","abbiano indicato"],"pastConditional":["avrei indicato","avresti indicato","avrebbe indicato","avremmo indicato","avreste indicato","avrebbero indicato"],"pastSubjunctive":["indicassi","indicassi","indicasse","indicassimo","indicaste","indicassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi indicato","avessi indicato","avesse indicato","avessimo indicato","aveste indicato","avessero indicato"],"imperfectIndicative":["indicavo","indicavi","indicava","indicavamo","indicavate","indicavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi indicato","avesti indicato","ebbe indicato","avemmo indicato","aveste indicato","ebbero indicato"],"verb":"indicare","imperative":["indica","indichi","indichiamo","indicate","indichino"],"presentIndicative":["indico","indichi","indica","indichiamo","indicate","indicano"],"presentConditional":["indicherei","indicheresti","indicherebbe","indicheremmo","indichereste","indicherebbero"],"impersonalForms":["indicare","indicante","indicando","indicato","avere indicato","avendo indicato","avente indicato"],"pastIndicative":["ho indicato","hai indicato","ha indicato","abbiamo indicato","avete indicato","hanno indicato"],"futureIndicative":["indicher\\xF2","indicherai","indicher\\xE0","indicheremo","indicherete","indicheranno"]},{"futurePerfectIndicative":["avr\\xF2 indossato","avrai indossato","avr\\xE0 indossato","avremo indossato","avrete indossato","avranno indossato"],"presentSubjunctive":["indossi","indossi","indossi","indossiamo","indossiate","indossino"],"pastRemoteIndicative":["indossai","indossasti","indoss\\xF2","indossammo","indossaste","indossarono"],"pluperfectIndicative":["avevo indossato","avevi indossato","aveva indossato","avevamo indossato","avevate indossato","avevano indossato"],"imperfectSubjunctive":["abbia indossato","abbia indossato","abbia indossato","abbiamo indossato","abbiate indossato","abbiano indossato"],"pastConditional":["avrei indossato","avresti indossato","avrebbe indossato","avremmo indossato","avreste indossato","avrebbero indossato"],"pastSubjunctive":["indossassi","indossassi","indossasse","indossassimo","indossaste","indossassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi indossato","avessi indossato","avesse indossato","avessimo indossato","aveste indossato","avessero indossato"],"imperfectIndicative":["indossavo","indossavi","indossava","indossavamo","indossavate","indossavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi indossato","avesti indossato","ebbe indossato","avemmo indossato","aveste indossato","ebbero indossato"],"verb":"indossare","imperative":["indossa","indossi","indossiamo","indossate","indossino"],"presentIndicative":["indosso","indossi","indossa","indossiamo","indossate","indossano"],"presentConditional":["indosserei","indosseresti","indosserebbe","indosseremmo","indossereste","indosserebbero"],"impersonalForms":["indossare","indossante","indossando","indossato","avere indossato","avendo indossato","avente indossato"],"pastIndicative":["ho indossato","hai indossato","ha indossato","abbiamo indossato","avete indossato","hanno indossato"],"futureIndicative":["indosser\\xF2","indosserai","indosser\\xE0","indosseremo","indosserete","indosseranno"]},{"futurePerfectIndicative":["avr\\xF2 iniziato","avrai iniziato","avr\\xE0 iniziato","avremo iniziato","avrete iniziato","avranno iniziato"],"presentSubjunctive":["inizi","inizi","inizi","iniziamo","iniziate","inizino"],"pastRemoteIndicative":["iniziai","iniziasti","inizi\\xF2","iniziammo","iniziaste","iniziarono"],"pluperfectIndicative":["avevo iniziato","avevi iniziato","aveva iniziato","avevamo iniziato","avevate iniziato","avevano iniziato"],"imperfectSubjunctive":["abbia iniziato","abbia iniziato","abbia iniziato","abbiamo iniziato","abbiate iniziato","abbiano iniziato"],"pastConditional":["avrei iniziato","avresti iniziato","avrebbe iniziato","avremmo iniziato","avreste iniziato","avrebbero iniziato"],"pastSubjunctive":["iniziassi","iniziassi","iniziasse","iniziassimo","iniziaste","iniziassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi iniziato","avessi iniziato","avesse iniziato","avessimo iniziato","aveste iniziato","avessero iniziato"],"imperfectIndicative":["iniziavo","iniziavi","iniziava","iniziavamo","iniziavate","iniziavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi iniziato","avesti iniziato","ebbe iniziato","avemmo iniziato","aveste iniziato","ebbero iniziato"],"verb":"iniziare","imperative":["inizia","inizi","iniziamo","iniziate","inizino"],"presentIndicative":["inizio","inizi","inizia","iniziamo","iniziate","iniziano"],"presentConditional":["inizierei","inizieresti","inizierebbe","inizieremmo","iniziereste","inizierebbero"],"impersonalForms":["iniziare","iniziante","iniziando","iniziato","avere iniziato","avendo iniziato","avente iniziato"],"pastIndicative":["ho iniziato","hai iniziato","ha iniziato","abbiamo iniziato","avete iniziato","hanno iniziato"],"futureIndicative":["inizier\\xF2","inizierai","inizier\\xE0","inizieremo","inizierete","inizieranno"]},{"futurePerfectIndicative":["avr\\xF2 insegnato","avrai insegnato","avr\\xE0 insegnato","avremo insegnato","avrete insegnato","avranno insegnato"],"presentSubjunctive":["insegni","insegni","insegni","insegniamo","insegniate","insegnino"],"pastRemoteIndicative":["insegnai","insegnasti","insegn\\xF2","insegnammo","insegnaste","insegnarono"],"pluperfectIndicative":["avevo insegnato","avevi insegnato","aveva insegnato","avevamo insegnato","avevate insegnato","avevano insegnato"],"imperfectSubjunctive":["abbia insegnato","abbia insegnato","abbia insegnato","abbiamo insegnato","abbiate insegnato","abbiano insegnato"],"pastConditional":["avrei insegnato","avresti insegnato","avrebbe insegnato","avremmo insegnato","avreste insegnato","avrebbero insegnato"],"pastSubjunctive":["insegnassi","insegnassi","insegnasse","insegnassimo","insegnaste","insegnassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi insegnato","avessi insegnato","avesse insegnato","avessimo insegnato","aveste insegnato","avessero insegnato"],"imperfectIndicative":["insegnavo","insegnavi","insegnava","insegnavamo","insegnavate","insegnavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi insegnato","avesti insegnato","ebbe insegnato","avemmo insegnato","aveste insegnato","ebbero insegnato"],"verb":"insegnare","imperative":["insegna","insegni","insegniamo","insegnate","insegnino"],"presentIndicative":["insegno","insegni","insegna","insegniamo","insegnate","insegnano"],"presentConditional":["insegnerei","insegneresti","insegnerebbe","insegneremmo","insegnereste","insegnerebbero"],"impersonalForms":["insegnare","insegnante","insegnando","insegnato","avere insegnato","avendo insegnato","avente insegnato"],"pastIndicative":["ho insegnato","hai insegnato","ha insegnato","abbiamo insegnato","avete insegnato","hanno insegnato"],"futureIndicative":["insegner\\xF2","insegnerai","insegner\\xE0","insegneremo","insegnerete","insegneranno"]},{"futurePerfectIndicative":["avr\\xF2 insistito","avrai insistito","avr\\xE0 insistito","avremo insistito","avrete insistito","avranno insistito"],"presentSubjunctive":["insista","insista","insista","insistiamo","insistiate","insistano"],"pastRemoteIndicative":["insistei; insistetti","insistesti","insist\\xE9; insistette","insistemmo","insisteste","insisterono; insistettero"],"pluperfectIndicative":["avevo insistito","avevi insistito","aveva insistito","avevamo insistito","avevate insistito","avevano insistito"],"imperfectSubjunctive":["abbia insistito","abbia insistito","abbia insistito","abbiamo insistito","abbiate insistito","abbiano insistito"],"pastConditional":["avrei insistito","avresti insistito","avrebbe insistito","avremmo insistito","avreste insistito","avrebbero insistito"],"pastSubjunctive":["insistessi","insistessi","insistesse","insistessimo","insisteste","insistessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi insistito","avessi insistito","avesse insistito","avessimo insistito","aveste insistito","avessero insistito"],"imperfectIndicative":["insistevo","insistevi","insisteva","insistevamo","insistevate","insistevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi insistito","avesti insistito","ebbe insistito","avemmo insistito","aveste insistito","ebbero insistito"],"verb":"insistere","imperative":["insisti","insista","insistiamo","insistete","insistano"],"presentIndicative":["insisto","insisti","insiste","insistiamo","insistete","insistono"],"presentConditional":["insisterei","insisteresti","insisterebbe","insisteremmo","insistereste","insisterebbero"],"impersonalForms":["insistere","insistente","insistendo","insistito","avere insistito","avendo insistito","avente insistito"],"pastIndicative":["ho insistito","hai insistito","ha insistito","abbiamo insistito","avete insistito","hanno insistito"],"futureIndicative":["insister\\xF2","insisterai","insister\\xE0","insisteremo","insisterete","insisteranno"]},{"futurePerfectIndicative":["avr\\xF2 inviato","avrai inviato","avr\\xE0 inviato","avremo inviato","avrete inviato","avranno inviato"],"presentSubjunctive":["invii","invii","invii","inviamo","inviate","inviino"],"pastRemoteIndicative":["inviai","inviasti","invi\\xF2","inviammo","inviaste","inviarono"],"pluperfectIndicative":["avevo inviato","avevi inviato","aveva inviato","avevamo inviato","avevate inviato","avevano inviato"],"imperfectSubjunctive":["abbia inviato","abbia inviato","abbia inviato","abbiamo inviato","abbiate inviato","abbiano inviato"],"pastConditional":["avrei inviato","avresti inviato","avrebbe inviato","avremmo inviato","avreste inviato","avrebbero inviato"],"pastSubjunctive":["inviassi","inviassi","inviasse","inviassimo","inviaste","inviassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi inviato","avessi inviato","avesse inviato","avessimo inviato","aveste inviato","avessero inviato"],"imperfectIndicative":["inviavo","inviavi","inviava","inviavamo","inviavate","inviavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi inviato","avesti inviato","ebbe inviato","avemmo inviato","aveste inviato","ebbero inviato"],"verb":"inviare","imperative":["invia","invii","inviamo","inviate","inviino"],"presentIndicative":["invio","invii","invia","inviamo","inviate","inviano"],"presentConditional":["invierei","invieresti","invierebbe","invieremmo","inviereste","invierebbero"],"impersonalForms":["inviare","inviante","inviando","inviato","avere inviato","avendo inviato","avente inviato"],"pastIndicative":["ho inviato","hai inviato","ha inviato","abbiamo inviato","avete inviato","hanno inviato"],"futureIndicative":["invier\\xF2","invierai","invier\\xE0","invieremo","invierete","invieranno"]},{"futurePerfectIndicative":["avr\\xF2 invitato","avrai invitato","avr\\xE0 invitato","avremo invitato","avrete invitato","avranno invitato"],"presentSubjunctive":["inviti","inviti","inviti","invitiamo","invitiate","invitino"],"pastRemoteIndicative":["invitai","invitasti","invit\\xF2","invitammo","invitaste","invitarono"],"pluperfectIndicative":["avevo invitato","avevi invitato","aveva invitato","avevamo invitato","avevate invitato","avevano invitato"],"imperfectSubjunctive":["abbia invitato","abbia invitato","abbia invitato","abbiamo invitato","abbiate invitato","abbiano invitato"],"pastConditional":["avrei invitato","avresti invitato","avrebbe invitato","avremmo invitato","avreste invitato","avrebbero invitato"],"pastSubjunctive":["invitassi","invitassi","invitasse","invitassimo","invitaste","invitassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi invitato","avessi invitato","avesse invitato","avessimo invitato","aveste invitato","avessero invitato"],"imperfectIndicative":["invitavo","invitavi","invitava","invitavamo","invitavate","invitavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi invitato","avesti invitato","ebbe invitato","avemmo invitato","aveste invitato","ebbero invitato"],"verb":"invitare","imperative":["invita","inviti","invitiamo","invitate","invitino"],"presentIndicative":["invito","inviti","invita","invitiamo","invitate","invitano"],"presentConditional":["inviterei","inviteresti","inviterebbe","inviteremmo","invitereste","inviterebbero"],"impersonalForms":["invitare","invitante","invitando","invitato","avere invitato","avendo invitato","avente invitato"],"pastIndicative":["ho invitato","hai invitato","ha invitato","abbiamo invitato","avete invitato","hanno invitato"],"futureIndicative":["inviter\\xF2","inviterai","inviter\\xE0","inviteremo","inviterete","inviteranno"]},{"futurePerfectIndicative":["avr\\xF2 lasciato","avrai lasciato","avr\\xE0 lasciato","avremo lasciato","avrete lasciato","avranno lasciato"],"presentSubjunctive":["lasci","lasci","lasci","lasciamo","lasciate","lascino"],"pastRemoteIndicative":["lasciai","lasciasti","lasci\\xF2","lasciammo","lasciaste","lasciarono"],"pluperfectIndicative":["avevo lasciato","avevi lasciato","aveva lasciato","avevamo lasciato","avevate lasciato","avevano lasciato"],"imperfectSubjunctive":["abbia lasciato","abbia lasciato","abbia lasciato","abbiamo lasciato","abbiate lasciato","abbiano lasciato"],"pastConditional":["avrei lasciato","avresti lasciato","avrebbe lasciato","avremmo lasciato","avreste lasciato","avrebbero lasciato"],"pastSubjunctive":["lasciassi","lasciassi","lasciasse","lasciassimo","lasciaste","lasciassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi lasciato","avessi lasciato","avesse lasciato","avessimo lasciato","aveste lasciato","avessero lasciato"],"imperfectIndicative":["lasciavo","lasciavi","lasciava","lasciavamo","lasciavate","lasciavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi lasciato","avesti lasciato","ebbe lasciato","avemmo lasciato","aveste lasciato","ebbero lasciato"],"verb":"lasciare","imperative":["lascia","lasci","lasciamo","lasciate","lascino"],"presentIndicative":["lascio","lasci","lascia","lasciamo","lasciate","lasciano"],"presentConditional":["lascerei","lasceresti","lascerebbe","lasceremmo","lascereste","lascerebbero"],"impersonalForms":["lasciare","lasciante","lasciando","lasciato","avere lasciato","avendo lasciato","avente lasciato"],"pastIndicative":["ho lasciato","hai lasciato","ha lasciato","abbiamo lasciato","avete lasciato","hanno lasciato"],"futureIndicative":["lascer\\xF2","lascerai","lascer\\xE0","lasceremo","lascerete","lasceranno"]},{"futurePerfectIndicative":["avr\\xF2 lavato","avrai lavato","avr\\xE0 lavato","avremo lavato","avrete lavato","avranno lavato"],"presentSubjunctive":["lavi","lavi","lavi","laviamo","laviate","lavino"],"pastRemoteIndicative":["lavai","lavasti","lav\\xF2","lavammo","lavaste","lavarono"],"pluperfectIndicative":["avevo lavato","avevi lavato","aveva lavato","avevamo lavato","avevate lavato","avevano lavato"],"imperfectSubjunctive":["abbia lavato","abbia lavato","abbia lavato","abbiamo lavato","abbiate lavato","abbiano lavato"],"pastConditional":["avrei lavato","avresti lavato","avrebbe lavato","avremmo lavato","avreste lavato","avrebbero lavato"],"pastSubjunctive":["lavassi","lavassi","lavasse","lavassimo","lavaste","lavassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi lavato","avessi lavato","avesse lavato","avessimo lavato","aveste lavato","avessero lavato"],"imperfectIndicative":["lavavo","lavavi","lavava","lavavamo","lavavate","lavavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi lavato","avesti lavato","ebbe lavato","avemmo lavato","aveste lavato","ebbero lavato"],"verb":"lavare","imperative":["lava","lavi","laviamo","lavate","lavino"],"presentIndicative":["lavo","lavi","lava","laviamo","lavate","lavano"],"presentConditional":["laverei","laveresti","laverebbe","laveremmo","lavereste","laverebbero"],"impersonalForms":["lavare","lavante","lavando","lavato","avere lavato","avendo lavato","avente lavato"],"pastIndicative":["ho lavato","hai lavato","ha lavato","abbiamo lavato","avete lavato","hanno lavato"],"futureIndicative":["laver\\xF2","laverai","laver\\xE0","laveremo","laverete","laveranno"]},{"futurePerfectIndicative":["avr\\xF2 lavorato","avrai lavorato","avr\\xE0 lavorato","avremo lavorato","avrete lavorato","avranno lavorato"],"presentSubjunctive":["lavori","lavori","lavori","lavoriamo","lavoriate","lavorino"],"pastRemoteIndicative":["lavorai","lavorasti","lavor\\xF2","lavorammo","lavoraste","lavorarono"],"pluperfectIndicative":["avevo lavorato","avevi lavorato","aveva lavorato","avevamo lavorato","avevate lavorato","avevano lavorato"],"imperfectSubjunctive":["abbia lavorato","abbia lavorato","abbia lavorato","abbiamo lavorato","abbiate lavorato","abbiano lavorato"],"pastConditional":["avrei lavorato","avresti lavorato","avrebbe lavorato","avremmo lavorato","avreste lavorato","avrebbero lavorato"],"pastSubjunctive":["lavorassi","lavorassi","lavorasse","lavorassimo","lavoraste","lavorassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi lavorato","avessi lavorato","avesse lavorato","avessimo lavorato","aveste lavorato","avessero lavorato"],"imperfectIndicative":["lavoravo","lavoravi","lavorava","lavoravamo","lavoravate","lavoravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi lavorato","avesti lavorato","ebbe lavorato","avemmo lavorato","aveste lavorato","ebbero lavorato"],"verb":"lavorare","imperative":["lavora","lavori","lavoriamo","lavorate","lavorino"],"presentIndicative":["lavoro","lavori","lavora","lavoriamo","lavorate","lavorano"],"presentConditional":["lavorerei","lavoreresti","lavorerebbe","lavoreremmo","lavorereste","lavorerebbero"],"impersonalForms":["lavorare","lavorante","lavorando","lavorato","avere lavorato","avendo lavorato","avente lavorato"],"pastIndicative":["ho lavorato","hai lavorato","ha lavorato","abbiamo lavorato","avete lavorato","hanno lavorato"],"futureIndicative":["lavorer\\xF2","lavorerai","lavorer\\xE0","lavoreremo","lavorerete","lavoreranno"]},{"futurePerfectIndicative":["avr\\xF2 letto","avrai letto","avr\\xE0 letto","avremo letto","avrete letto","avranno letto"],"presentSubjunctive":["legga","legga","legga","leggiamo","leggiate","leggano"],"pastRemoteIndicative":["lessi","leggesti","lesse","leggemmo","leggeste","lessero"],"pluperfectIndicative":["avevo letto","avevi letto","aveva letto","avevamo letto","avevate letto","avevano letto"],"imperfectSubjunctive":["abbia letto","abbia letto","abbia letto","abbiamo letto","abbiate letto","abbiano letto"],"pastConditional":["avrei letto","avresti letto","avrebbe letto","avremmo letto","avreste letto","avrebbero letto"],"pastSubjunctive":["leggessi","leggessi","leggesse","leggessimo","leggeste","leggessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi letto","avessi letto","avesse letto","avessimo letto","aveste letto","avessero letto"],"imperfectIndicative":["leggevo","leggevi","leggeva","leggevamo","leggevate","leggevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi letto","avesti letto","ebbe letto","avemmo letto","aveste letto","ebbero letto"],"verb":"leggere","imperative":["leggi","legga","leggiamo","leggete","leggano"],"presentIndicative":["leggo","leggi","legge","leggiamo","leggete","leggono"],"presentConditional":["leggerei","leggeresti","leggerebbe","leggeremmo","leggereste","leggerebbero"],"impersonalForms":["leggere","leggente","leggendo","letto","avere letto","avendo letto","avente letto"],"pastIndicative":["ho letto","hai letto","ha letto","abbiamo letto","avete letto","hanno letto"],"futureIndicative":["legger\\xF2","leggerai","legger\\xE0","leggeremo","leggerete","leggeranno"]},{"futurePerfectIndicative":["avr\\xF2 mancato; sar\\xF2 mancato","avrai mancato; sarai mancato","avr\\xE0 mancato; sar\\xE0 mancato","avremo mancato; saremo mancati","avrete mancato; sarete mancati","avranno mancato; saranno mancati"],"presentSubjunctive":["manchi","manchi","manchi","manchiamo","manchiate","manchino"],"pastRemoteIndicative":["mancai","mancasti","manc\\xF2","mancammo","mancaste","mancarono"],"pluperfectIndicative":["avevo mancato; ero mancato","avevi mancato; eri mancato","aveva mancato; era mancato","avevamo mancato; eravamo mancati","avevate mancato; eravate mancati","avevano mancato; erano mancati"],"imperfectSubjunctive":["abbia mancato; sia mancato","abbia mancato; sia mancato","abbia mancato; sia mancato","abbiamo mancato; siamo mancati","abbiate mancato; siate mancati","abbiano mancato; siano mancati"],"pastConditional":["avrei mancato; sarei mancato","avresti mancato; saresti mancato","avrebbe mancato; sarebbe mancato","avremmo mancato; saremmo mancati","avreste mancato; sareste mancati","avrebbero mancato; sarebbero mancati"],"pastSubjunctive":["mancassi","mancassi","mancasse","mancassimo","mancaste","mancassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi mancato; fossi mancato","avessi mancato; fossi mancato","avesse mancato; fosse mancato","avessimo mancato; fossimo mancati","aveste mancato; foste mancati","avessero mancato; fossero mancati"],"imperfectIndicative":["mancavo","mancavi","mancava","mancavamo","mancavate","mancavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi mancato; fui mancato","avesti mancato; fosti mancato","ebbe mancato; fu mancato","avemmo mancato; fummo mancati","aveste mancato; foste mancati","ebbero mancato; furono mancati"],"verb":"mancare","imperative":["manca","manchi","manchiamo","mancate","manchino"],"presentIndicative":["manco","manchi","manca","manchiamo","mancate","mancano"],"presentConditional":["mancherei","mancheresti","mancherebbe","mancheremmo","manchereste","mancherebbero"],"impersonalForms":["mancare","mancante","mancando","mancato","avere mancato; essere mancato","avendo mancato; essendo mancato","avente mancato; essente mancato"],"pastIndicative":["ho mancato; sono mancato","hai mancato; sei mancato","ha mancato; \\xE8 mancato","abbiamo mancato; siamo mancati","avete mancato; siete mancati","hanno mancato; sono mancati"],"futureIndicative":["mancher\\xF2","mancherai","mancher\\xE0","mancheremo","mancherete","mancheranno"]},{"futurePerfectIndicative":["avr\\xF2 mandato","avrai mandato","avr\\xE0 mandato","avremo mandato","avrete mandato","avranno mandato"],"presentSubjunctive":["mandi","mandi","mandi","mandiamo","mandiate","mandino"],"pastRemoteIndicative":["mandai","mandasti","mand\\xF2","mandammo","mandaste","mandarono"],"pluperfectIndicative":["avevo mandato","avevi mandato","aveva mandato","avevamo mandato","avevate mandato","avevano mandato"],"imperfectSubjunctive":["abbia mandato","abbia mandato","abbia mandato","abbiamo mandato","abbiate mandato","abbiano mandato"],"pastConditional":["avrei mandato","avresti mandato","avrebbe mandato","avremmo mandato","avreste mandato","avrebbero mandato"],"pastSubjunctive":["mandassi","mandassi","mandasse","mandassimo","mandaste","mandassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi mandato","avessi mandato","avesse mandato","avessimo mandato","aveste mandato","avessero mandato"],"imperfectIndicative":["mandavo","mandavi","mandava","mandavamo","mandavate","mandavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi mandato","avesti mandato","ebbe mandato","avemmo mandato","aveste mandato","ebbero mandato"],"verb":"mandare","imperative":["manda","mandi","mandiamo","mandate","mandino"],"presentIndicative":["mando","mandi","manda","mandiamo","mandate","mandano"],"presentConditional":["manderei","manderesti","manderebbe","manderemmo","mandereste","manderebbero"],"impersonalForms":["mandare","mandante","mandando","mandato","avere mandato","avendo mandato","avente mandato"],"pastIndicative":["ho mandato","hai mandato","ha mandato","abbiamo mandato","avete mandato","hanno mandato"],"futureIndicative":["mander\\xF2","manderai","mander\\xE0","manderemo","manderete","manderanno"]},{"futurePerfectIndicative":["avr\\xF2 mangiato","avrai mangiato","avr\\xE0 mangiato","avremo mangiato","avrete mangiato","avranno mangiato"],"presentSubjunctive":["mangi","mangi","mangi","mangiamo","mangiate","mangino"],"pastRemoteIndicative":["mangiai","mangiasti","mangi\\xF2","mangiammo","mangiaste","mangiarono"],"pluperfectIndicative":["avevo mangiato","avevi mangiato","aveva mangiato","avevamo mangiato","avevate mangiato","avevano mangiato"],"imperfectSubjunctive":["abbia mangiato","abbia mangiato","abbia mangiato","abbiamo mangiato","abbiate mangiato","abbiano mangiato"],"pastConditional":["avrei mangiato","avresti mangiato","avrebbe mangiato","avremmo mangiato","avreste mangiato","avrebbero mangiato"],"pastSubjunctive":["mangiassi","mangiassi","mangiasse","mangiassimo","mangiaste","mangiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi mangiato","avessi mangiato","avesse mangiato","avessimo mangiato","aveste mangiato","avessero mangiato"],"imperfectIndicative":["mangiavo","mangiavi","mangiava","mangiavamo","mangiavate","mangiavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi mangiato","avesti mangiato","ebbe mangiato","avemmo mangiato","aveste mangiato","ebbero mangiato"],"verb":"mangiare","imperative":["mangia","mangi","mangiamo","mangiate","mangino"],"presentIndicative":["mangio","mangi","mangia","mangiamo","mangiate","mangiano"],"presentConditional":["mangerei","mangeresti","mangerebbe","mangeremmo","mangereste","mangerebbero"],"impersonalForms":["mangiare","mangiante","mangiando","mangiato","avere mangiato","avendo mangiato","avente mangiato"],"pastIndicative":["ho mangiato","hai mangiato","ha mangiato","abbiamo mangiato","avete mangiato","hanno mangiato"],"futureIndicative":["manger\\xF2","mangerai","manger\\xE0","mangeremo","mangerete","mangeranno"]},{"futurePerfectIndicative":["avr\\xF2 mentito","avrai mentito","avr\\xE0 mentito","avremo mentito","avrete mentito","avranno mentito"],"presentSubjunctive":["menta; mentisca","menta; mentisca","menta; mentisca","mentiamo","mentiate","mentano; mentiscano"],"pastRemoteIndicative":["mentii","mentisti","ment\\xEC","mentimmo","mentiste","mentirono"],"pluperfectIndicative":["avevo mentito","avevi mentito","aveva mentito","avevamo mentito","avevate mentito","avevano mentito"],"imperfectSubjunctive":["abbia mentito","abbia mentito","abbia mentito","abbiamo mentito","abbiate mentito","abbiano mentito"],"pastConditional":["avrei mentito","avresti mentito","avrebbe mentito","avremmo mentito","avreste mentito","avrebbero mentito"],"pastSubjunctive":["mentissi","mentissi","mentisse","mentissimo","mentiste","mentissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi mentito","avessi mentito","avesse mentito","avessimo mentito","aveste mentito","avessero mentito"],"imperfectIndicative":["mentivo","mentivi","mentiva","mentivamo","mentivate","mentivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi mentito","avesti mentito","ebbe mentito","avemmo mentito","aveste mentito","ebbero mentito"],"verb":"mentire","imperative":["menti; mentisci","menta; mentisca","mentiamo","mentite","mentano; mentiscano"],"presentIndicative":["mento; mentisco","menti; mentisci","mente; mentisce","mentiamo","mentite","mentono; mentiscono"],"presentConditional":["mentirei","mentiresti","mentirebbe","mentiremmo","mentireste","mentirebbero"],"impersonalForms":["mentire","mentente","mentendo","mentito","avere mentito","avendo mentito","avente mentito"],"pastIndicative":["ho mentito","hai mentito","ha mentito","abbiamo mentito","avete mentito","hanno mentito"],"futureIndicative":["mentir\\xF2","mentirai","mentir\\xE0","mentiremo","mentirete","mentiranno"]},{"futurePerfectIndicative":["avr\\xF2 messo","avrai messo","avr\\xE0 messo","avremo messo","avrete messo","avranno messo"],"presentSubjunctive":["metta","metta","metta","mettiamo","mettiate","mettano"],"pastRemoteIndicative":["misi","mettesti","mise","mettemmo","metteste","misero"],"pluperfectIndicative":["avevo messo","avevi messo","aveva messo","avevamo messo","avevate messo","avevano messo"],"imperfectSubjunctive":["abbia messo","abbia messo","abbia messo","abbiamo messo","abbiate messo","abbiano messo"],"pastConditional":["avrei messo","avresti messo","avrebbe messo","avremmo messo","avreste messo","avrebbero messo"],"pastSubjunctive":["mettessi","mettessi","mettesse","mettessimo","metteste","mettessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi messo","avessi messo","avesse messo","avessimo messo","aveste messo","avessero messo"],"imperfectIndicative":["mettevo","mettevi","metteva","mettevamo","mettevate","mettevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi messo","avesti messo","ebbe messo","avemmo messo","aveste messo","ebbero messo"],"verb":"mettere","imperative":["metti","metta","mettiamo","mettete","mettano"],"presentIndicative":["metto","metti","mette","mettiamo","mettete","mettono"],"presentConditional":["metterei","metteresti","metterebbe","metteremmo","mettereste","metterebbero"],"impersonalForms":["mettere","mettente","mettendo","messo","avere messo","avendo messo","avente messo"],"pastIndicative":["ho messo","hai messo","ha messo","abbiamo messo","avete messo","hanno messo"],"futureIndicative":["metter\\xF2","metterai","metter\\xE0","metteremo","metterete","metteranno"]},{"futurePerfectIndicative":["avr\\xF2 migliorato; sar\\xF2 migliorato","avrai migliorato; sarai migliorato","avr\\xE0 migliorato; sar\\xE0 migliorato","avremo migliorato; saremo migliorati","avrete migliorato; sarete migliorati","avranno migliorato; saranno migliorati"],"presentSubjunctive":["migliori","migliori","migliori","miglioriamo","miglioriate","migliorino"],"pastRemoteIndicative":["migliorai","migliorasti","miglior\\xF2","migliorammo","miglioraste","migliorarono"],"pluperfectIndicative":["avevo migliorato; ero migliorato","avevi migliorato; eri migliorato","aveva migliorato; era migliorato","avevamo migliorato; eravamo migliorati","avevate migliorato; eravate migliorati","avevano migliorato; erano migliorati"],"imperfectSubjunctive":["abbia migliorato; sia migliorato","abbia migliorato; sia migliorato","abbia migliorato; sia migliorato","abbiamo migliorato; siamo migliorati","abbiate migliorato; siate migliorati","abbiano migliorato; siano migliorati"],"pastConditional":["avrei migliorato; sarei migliorato","avresti migliorato; saresti migliorato","avrebbe migliorato; sarebbe migliorato","avremmo migliorato; saremmo migliorati","avreste migliorato; sareste migliorati","avrebbero migliorato; sarebbero migliorati"],"pastSubjunctive":["migliorassi","migliorassi","migliorasse","migliorassimo","miglioraste","migliorassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi migliorato; fossi migliorato","avessi migliorato; fossi migliorato","avesse migliorato; fosse migliorato","avessimo migliorato; fossimo migliorati","aveste migliorato; foste migliorati","avessero migliorato; fossero migliorati"],"imperfectIndicative":["miglioravo","miglioravi","migliorava","miglioravamo","miglioravate","miglioravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi migliorato; fui migliorato","avesti migliorato; fosti migliorato","ebbe migliorato; fu migliorato","avemmo migliorato; fummo migliorati","aveste migliorato; foste migliorati","ebbero migliorato; furono migliorati"],"verb":"migliorare","imperative":["migliora","migliori","miglioriamo","migliorate","migliorino"],"presentIndicative":["miglioro","migliori","migliora","miglioriamo","migliorate","migliorano"],"presentConditional":["migliorerei","miglioreresti","migliorerebbe","miglioreremmo","migliorereste","migliorerebbero"],"impersonalForms":["migliorare; megliorare","migliorante","migliorando","migliorato","avere migliorato; essere migliorato","avendo migliorato; essendo migliorato","avente migliorato; essente migliorato"],"pastIndicative":["ho migliorato; sono migliorato","hai migliorato; sei migliorato","ha migliorato; \\xE8 migliorato","abbiamo migliorato; siamo migliorati","avete migliorato; siete migliorati","hanno migliorato; sono migliorati"],"futureIndicative":["migliorer\\xF2","migliorerai","migliorer\\xE0","miglioreremo","migliorerete","miglioreranno"]},{"futurePerfectIndicative":["sar\\xF2 morto","sarai morto","sar\\xE0 morto","saremo morti","sarete morti","saranno morti"],"presentSubjunctive":["muoia","muoia","muoia","moriamo","moriate","muoiano"],"pastRemoteIndicative":["morii","moristi","mor\\xEC","morimmo","moriste","morirono"],"pluperfectIndicative":["ero morto","eri morto","era morto","eravamo morti","eravate morti","erano morti"],"imperfectSubjunctive":["sia morto","sia morto","sia morto","siamo morti","siate morti","siano morti"],"pastConditional":["sarei morto","saresti morto","sarebbe morto","saremmo morti","sareste morti","sarebbero morti"],"pastSubjunctive":["morissi","morissi","morisse","morissimo","moriste","morissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi morto","fossi morto","fosse morto","fossimo morti","foste morti","fossero morti"],"imperfectIndicative":["morivo","morivi","moriva","morivamo","morivate","morivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui morto","fosti morto","fu morto","fummo morti","foste morti","furono morti"],"verb":"morire","imperative":["muori","muoia","moriamo","morite","muoiano"],"presentIndicative":["muoio","muori","muore","moriamo","morite","muoiono"],"presentConditional":["morirei; morrei","moriresti; morresti","morirebbe; morrebbe","moriremmo; morremmo","morireste; morreste","morirebbero; morrebbero"],"impersonalForms":["morire","morente","morendo","morto","essere morto","essendo morto","essente morto"],"pastIndicative":["sono morto","sei morto","\\xE8 morto","siamo morti","siete morti","sono morti"],"futureIndicative":["morir\\xF2; morr\\xF2","morirai; morrai","morir\\xE0; morr\\xE0","moriremo; morremo","morirete; morrete","moriranno; morranno"]},{"futurePerfectIndicative":["avr\\xF2 nevicato; sar\\xF2 nevicato","avrai nevicato; sarai nevicato","avr\\xE0 nevicato; sar\\xE0 nevicato","avremo nevicato; saremo nevicati","avrete nevicato; sarete nevicati","avranno nevicato; saranno nevicati"],"presentSubjunctive":["nevichi","nevichi","nevichi","nevichiamo","nevichiate","nevichino"],"pastRemoteIndicative":["nevicai","nevicasti","nevic\\xF2","nevicammo","nevicaste","nevicarono"],"pluperfectIndicative":["avevo nevicato; ero nevicato","avevi nevicato; eri nevicato","aveva nevicato; era nevicato","avevamo nevicato; eravamo nevicati","avevate nevicato; eravate nevicati","avevano nevicato; erano nevicati"],"imperfectSubjunctive":["abbia nevicato; sia nevicato","abbia nevicato; sia nevicato","abbia nevicato; sia nevicato","abbiamo nevicato; siamo nevicati","abbiate nevicato; siate nevicati","abbiano nevicato; siano nevicati"],"pastConditional":["avrei nevicato; sarei nevicato","avresti nevicato; saresti nevicato","avrebbe nevicato; sarebbe nevicato","avremmo nevicato; saremmo nevicati","avreste nevicato; sareste nevicati","avrebbero nevicato; sarebbero nevicati"],"pastSubjunctive":["nevicassi","nevicassi","nevicasse","nevicassimo","nevicaste","nevicassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi nevicato; fossi nevicato","avessi nevicato; fossi nevicato","avesse nevicato; fosse nevicato","avessimo nevicato; fossimo nevicati","aveste nevicato; foste nevicati","avessero nevicato; fossero nevicati"],"imperfectIndicative":["nevicavo","nevicavi","nevicava","nevicavamo","nevicavate","nevicavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi nevicato; fui nevicato","avesti nevicato; fosti nevicato","ebbe nevicato; fu nevicato","avemmo nevicato; fummo nevicati","aveste nevicato; foste nevicati","ebbero nevicato; furono nevicati"],"verb":"nevicare","imperative":["nevica","nevichi","nevichiamo","nevicate","nevichino"],"presentIndicative":["nevico","nevichi","nevica","nevichiamo","nevicate","nevicano"],"presentConditional":["nevicherei","nevicheresti","nevicherebbe","nevicheremmo","nevichereste","nevicherebbero"],"impersonalForms":["nevicare","nevicante","nevicando","nevicato","avere nevicato; essere nevicato","avendo nevicato; essendo nevicato","avente nevicato; essente nevicato"],"pastIndicative":["ho nevicato; sono nevicato","hai nevicato; sei nevicato","ha nevicato; \\xE8 nevicato","abbiamo nevicato; siamo nevicati","avete nevicato; siete nevicati","hanno nevicato; sono nevicati"],"futureIndicative":["nevicher\\xF2","nevicherai","nevicher\\xE0","nevicheremo","nevicherete","nevicheranno"]},{"futurePerfectIndicative":["avr\\xF2 nuotato","avrai nuotato","avr\\xE0 nuotato","avremo nuotato","avrete nuotato","avranno nuotato"],"presentSubjunctive":["nuoti","nuoti","nuoti","nuotiamo","nuotiate","nuotino"],"pastRemoteIndicative":["nuotai","nuotasti","nuot\\xF2","nuotammo","nuotaste","nuotarono"],"pluperfectIndicative":["avevo nuotato","avevi nuotato","aveva nuotato","avevamo nuotato","avevate nuotato","avevano nuotato"],"imperfectSubjunctive":["abbia nuotato","abbia nuotato","abbia nuotato","abbiamo nuotato","abbiate nuotato","abbiano nuotato"],"pastConditional":["avrei nuotato","avresti nuotato","avrebbe nuotato","avremmo nuotato","avreste nuotato","avrebbero nuotato"],"pastSubjunctive":["nuotassi","nuotassi","nuotasse","nuotassimo","nuotaste","nuotassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi nuotato","avessi nuotato","avesse nuotato","avessimo nuotato","aveste nuotato","avessero nuotato"],"imperfectIndicative":["nuotavo","nuotavi","nuotava","nuotavamo","nuotavate","nuotavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi nuotato","avesti nuotato","ebbe nuotato","avemmo nuotato","aveste nuotato","ebbero nuotato"],"verb":"nuotare","imperative":["nuota","nuoti","nuotiamo","nuotate","nuotino"],"presentIndicative":["nuoto","nuoti","nuota","nuotiamo","nuotate","nuotano"],"presentConditional":["nuoterei","nuoteresti","nuoterebbe","nuoteremmo","nuotereste","nuoterebbero"],"impersonalForms":["nuotare","nuotante","nuotando","nuotato","avere nuotato","avendo nuotato","avente nuotato"],"pastIndicative":["ho nuotato","hai nuotato","ha nuotato","abbiamo nuotato","avete nuotato","hanno nuotato"],"futureIndicative":["nuoter\\xF2","nuoterai","nuoter\\xE0","nuoteremo","nuoterete","nuoteranno"]},{"futurePerfectIndicative":["avr\\xF2 odiato","avrai odiato","avr\\xE0 odiato","avremo odiato","avrete odiato","avranno odiato"],"presentSubjunctive":["odii","odii","odii","odiamo","odiate","odiino"],"pastRemoteIndicative":["odiai","odiasti","odi\\xF2","odiammo","odiaste","odiarono"],"pluperfectIndicative":["avevo odiato","avevi odiato","aveva odiato","avevamo odiato","avevate odiato","avevano odiato"],"imperfectSubjunctive":["abbia odiato","abbia odiato","abbia odiato","abbiamo odiato","abbiate odiato","abbiano odiato"],"pastConditional":["avrei odiato","avresti odiato","avrebbe odiato","avremmo odiato","avreste odiato","avrebbero odiato"],"pastSubjunctive":["odiassi","odiassi","odiasse","odiassimo","odiaste","odiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi odiato","avessi odiato","avesse odiato","avessimo odiato","aveste odiato","avessero odiato"],"imperfectIndicative":["odiavo","odiavi","odiava","odiavamo","odiavate","odiavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi odiato","avesti odiato","ebbe odiato","avemmo odiato","aveste odiato","ebbero odiato"],"verb":"odiare","imperative":["odia","odii","odiamo","odiate","odiino"],"presentIndicative":["odio","odii","odia","odiamo","odiate","odiano"],"presentConditional":["odierei","odieresti","odierebbe","odieremmo","odiereste","odierebbero"],"impersonalForms":["odiare","odiante","odiando","odiato","avere odiato","avendo odiato","avente odiato"],"pastIndicative":["ho odiato","hai odiato","ha odiato","abbiamo odiato","avete odiato","hanno odiato"],"futureIndicative":["odier\\xF2","odierai","odier\\xE0","odieremo","odierete","odieranno"]},{"futurePerfectIndicative":["avr\\xF2 offerto","avrai offerto","avr\\xE0 offerto","avremo offerto","avrete offerto","avranno offerto"],"presentSubjunctive":["offra","offra","offra","offriamo","offriate","offrano"],"pastRemoteIndicative":["offrii; offersi","offristi","offr\\xEC; offerse","offrimmo","offriste","offrirono; offersero"],"pluperfectIndicative":["avevo offerto","avevi offerto","aveva offerto","avevamo offerto","avevate offerto","avevano offerto"],"imperfectSubjunctive":["abbia offerto","abbia offerto","abbia offerto","abbiamo offerto","abbiate offerto","abbiano offerto"],"pastConditional":["avrei offerto","avresti offerto","avrebbe offerto","avremmo offerto","avreste offerto","avrebbero offerto"],"pastSubjunctive":["offrissi","offrissi","offrisse","offrissimo","offriste","offrissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi offerto","avessi offerto","avesse offerto","avessimo offerto","aveste offerto","avessero offerto"],"imperfectIndicative":["offrivo","offrivi","offriva","offrivamo","offrivate","offrivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi offerto","avesti offerto","ebbe offerto","avemmo offerto","aveste offerto","ebbero offerto"],"verb":"offrire","imperative":["offri","offra","offriamo","offrite","offrano"],"presentIndicative":["offro","offri","offre","offriamo","offrite","offrono"],"presentConditional":["offrirei","offriresti","offrirebbe","offriremmo","offrireste","offrirebbero"],"impersonalForms":["offrire; offerire","offrente","offrendo","offerto","avere offerto","avendo offerto","avente offerto"],"pastIndicative":["ho offerto","hai offerto","ha offerto","abbiamo offerto","avete offerto","hanno offerto"],"futureIndicative":["offrir\\xF2","offrirai","offrir\\xE0","offriremo","offrirete","offriranno"]},{"futurePerfectIndicative":["avr\\xF2 pagato","avrai pagato","avr\\xE0 pagato","avremo pagato","avrete pagato","avranno pagato"],"presentSubjunctive":["paghi","paghi","paghi","paghiamo","paghiate","paghino"],"pastRemoteIndicative":["pagai","pagasti","pag\\xF2","pagammo","pagaste","pagarono"],"pluperfectIndicative":["avevo pagato","avevi pagato","aveva pagato","avevamo pagato","avevate pagato","avevano pagato"],"imperfectSubjunctive":["abbia pagato","abbia pagato","abbia pagato","abbiamo pagato","abbiate pagato","abbiano pagato"],"pastConditional":["avrei pagato","avresti pagato","avrebbe pagato","avremmo pagato","avreste pagato","avrebbero pagato"],"pastSubjunctive":["pagassi","pagassi","pagasse","pagassimo","pagaste","pagassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pagato","avessi pagato","avesse pagato","avessimo pagato","aveste pagato","avessero pagato"],"imperfectIndicative":["pagavo","pagavi","pagava","pagavamo","pagavate","pagavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pagato","avesti pagato","ebbe pagato","avemmo pagato","aveste pagato","ebbero pagato"],"verb":"pagare","imperative":["paga","paghi","paghiamo","pagate","paghino"],"presentIndicative":["pago","paghi","paga","paghiamo","pagate","pagano"],"presentConditional":["pagherei","pagheresti","pagherebbe","pagheremmo","paghereste","pagherebbero"],"impersonalForms":["pagare","pagante","pagando","pagato","avere pagato","avendo pagato","avente pagato"],"pastIndicative":["ho pagato","hai pagato","ha pagato","abbiamo pagato","avete pagato","hanno pagato"],"futureIndicative":["pagher\\xF2","pagherai","pagher\\xE0","pagheremo","pagherete","pagheranno"]},{"futurePerfectIndicative":["avr\\xF2 parcheggiato","avrai parcheggiato","avr\\xE0 parcheggiato","avremo parcheggiato","avrete parcheggiato","avranno parcheggiato"],"presentSubjunctive":["parcheggi","parcheggi","parcheggi","parcheggiamo","parcheggiate","parcheggino"],"pastRemoteIndicative":["parcheggiai","parcheggiasti","parcheggi\\xF2","parcheggiammo","parcheggiaste","parcheggiarono"],"pluperfectIndicative":["avevo parcheggiato","avevi parcheggiato","aveva parcheggiato","avevamo parcheggiato","avevate parcheggiato","avevano parcheggiato"],"imperfectSubjunctive":["abbia parcheggiato","abbia parcheggiato","abbia parcheggiato","abbiamo parcheggiato","abbiate parcheggiato","abbiano parcheggiato"],"pastConditional":["avrei parcheggiato","avresti parcheggiato","avrebbe parcheggiato","avremmo parcheggiato","avreste parcheggiato","avrebbero parcheggiato"],"pastSubjunctive":["parcheggiassi","parcheggiassi","parcheggiasse","parcheggiassimo","parcheggiaste","parcheggiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi parcheggiato","avessi parcheggiato","avesse parcheggiato","avessimo parcheggiato","aveste parcheggiato","avessero parcheggiato"],"imperfectIndicative":["parcheggiavo","parcheggiavi","parcheggiava","parcheggiavamo","parcheggiavate","parcheggiavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi parcheggiato","avesti parcheggiato","ebbe parcheggiato","avemmo parcheggiato","aveste parcheggiato","ebbero parcheggiato"],"verb":"parcheggiare","imperative":["parcheggia","parcheggi","parcheggiamo","parcheggiate","parcheggino"],"presentIndicative":["parcheggio","parcheggi","parcheggia","parcheggiamo","parcheggiate","parcheggiano"],"presentConditional":["parcheggerei","parcheggeresti","parcheggerebbe","parcheggeremmo","parcheggereste","parcheggerebbero"],"impersonalForms":["parcheggiare","parcheggiante","parcheggiando","parcheggiato","avere parcheggiato","avendo parcheggiato","avente parcheggiato"],"pastIndicative":["ho parcheggiato","hai parcheggiato","ha parcheggiato","abbiamo parcheggiato","avete parcheggiato","hanno parcheggiato"],"futureIndicative":["parchegger\\xF2","parcheggerai","parchegger\\xE0","parcheggeremo","parcheggerete","parcheggeranno"]},{"futurePerfectIndicative":["avr\\xF2 parlato","avrai parlato","avr\\xE0 parlato","avremo parlato","avrete parlato","avranno parlato"],"presentSubjunctive":["parli","parli","parli","parliamo","parliate","parlino"],"pastRemoteIndicative":["parlai","parlasti","parl\\xF2","parlammo","parlaste","parlarono"],"pluperfectIndicative":["avevo parlato","avevi parlato","aveva parlato","avevamo parlato","avevate parlato","avevano parlato"],"imperfectSubjunctive":["abbia parlato","abbia parlato","abbia parlato","abbiamo parlato","abbiate parlato","abbiano parlato"],"pastConditional":["avrei parlato","avresti parlato","avrebbe parlato","avremmo parlato","avreste parlato","avrebbero parlato"],"pastSubjunctive":["parlassi","parlassi","parlasse","parlassimo","parlaste","parlassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi parlato","avessi parlato","avesse parlato","avessimo parlato","aveste parlato","avessero parlato"],"imperfectIndicative":["parlavo","parlavi","parlava","parlavamo","parlavate","parlavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi parlato","avesti parlato","ebbe parlato","avemmo parlato","aveste parlato","ebbero parlato"],"verb":"parlare","imperative":["parla","parli","parliamo","parlate","parlino"],"presentIndicative":["parlo","parli","parla","parliamo","parlate","parlano"],"presentConditional":["parlerei","parleresti","parlerebbe","parleremmo","parlereste","parlerebbero"],"impersonalForms":["parlare","parlante","parlando","parlato","avere parlato","avendo parlato","avente parlato"],"pastIndicative":["ho parlato","hai parlato","ha parlato","abbiamo parlato","avete parlato","hanno parlato"],"futureIndicative":["parler\\xF2","parlerai","parler\\xE0","parleremo","parlerete","parleranno"]},{"futurePerfectIndicative":["avr\\xF2 passato; sar\\xF2 passato","avrai passato; sarai passato","avr\\xE0 passato; sar\\xE0 passato","avremo passato; saremo passati","avrete passato; sarete passati","avranno passato; saranno passati"],"presentSubjunctive":["passi","passi","passi","passiamo","passiate","passino"],"pastRemoteIndicative":["passai","passasti","pass\\xF2","passammo","passaste","passarono"],"pluperfectIndicative":["avevo passato; ero passato","avevi passato; eri passato","aveva passato; era passato","avevamo passato; eravamo passati","avevate passato; eravate passati","avevano passato; erano passati"],"imperfectSubjunctive":["abbia passato; sia passato","abbia passato; sia passato","abbia passato; sia passato","abbiamo passato; siamo passati","abbiate passato; siate passati","abbiano passato; siano passati"],"pastConditional":["avrei passato; sarei passato","avresti passato; saresti passato","avrebbe passato; sarebbe passato","avremmo passato; saremmo passati","avreste passato; sareste passati","avrebbero passato; sarebbero passati"],"pastSubjunctive":["passassi","passassi","passasse","passassimo","passaste","passassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi passato; fossi passato","avessi passato; fossi passato","avesse passato; fosse passato","avessimo passato; fossimo passati","aveste passato; foste passati","avessero passato; fossero passati"],"imperfectIndicative":["passavo","passavi","passava","passavamo","passavate","passavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi passato; fui passato","avesti passato; fosti passato","ebbe passato; fu passato","avemmo passato; fummo passati","aveste passato; foste passati","ebbero passato; furono passati"],"verb":"passare","imperative":["passa","passi","passiamo","passate","passino"],"presentIndicative":["passo","passi","passa","passiamo","passate","passano"],"presentConditional":["passerei","passeresti","passerebbe","passeremmo","passereste","passerebbero"],"impersonalForms":["passare","passante","passando","passato","avere passato; essere passato","avendo passato; essendo passato","avente passato; essente passato"],"pastIndicative":["ho passato; sono passato","hai passato; sei passato","ha passato; \\xE8 passato","abbiamo passato; siamo passati","avete passato; siete passati","hanno passato; sono passati"],"futureIndicative":["passer\\xF2","passerai","passer\\xE0","passeremo","passerete","passeranno"]},{"futurePerfectIndicative":["avr\\xF2 pensato","avrai pensato","avr\\xE0 pensato","avremo pensato","avrete pensato","avranno pensato"],"presentSubjunctive":["pensi","pensi","pensi","pensiamo","pensiate","pensino"],"pastRemoteIndicative":["pensai","pensasti","pens\\xF2","pensammo","pensaste","pensarono"],"pluperfectIndicative":["avevo pensato","avevi pensato","aveva pensato","avevamo pensato","avevate pensato","avevano pensato"],"imperfectSubjunctive":["abbia pensato","abbia pensato","abbia pensato","abbiamo pensato","abbiate pensato","abbiano pensato"],"pastConditional":["avrei pensato","avresti pensato","avrebbe pensato","avremmo pensato","avreste pensato","avrebbero pensato"],"pastSubjunctive":["pensassi","pensassi","pensasse","pensassimo","pensaste","pensassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pensato","avessi pensato","avesse pensato","avessimo pensato","aveste pensato","avessero pensato"],"imperfectIndicative":["pensavo","pensavi","pensava","pensavamo","pensavate","pensavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pensato","avesti pensato","ebbe pensato","avemmo pensato","aveste pensato","ebbero pensato"],"verb":"pensare","imperative":["pensa","pensi","pensiamo","pensate","pensino"],"presentIndicative":["penso","pensi","pensa","pensiamo","pensate","pensano"],"presentConditional":["penserei","penseresti","penserebbe","penseremmo","pensereste","penserebbero"],"impersonalForms":["pensare","pensante","pensando","pensato","avere pensato","avendo pensato","avente pensato"],"pastIndicative":["ho pensato","hai pensato","ha pensato","abbiamo pensato","avete pensato","hanno pensato"],"futureIndicative":["penser\\xF2","penserai","penser\\xE0","penseremo","penserete","penseranno"]},{"futurePerfectIndicative":["avr\\xF2 perduto; perso","avrai perduto; perso","avr\\xE0 perduto; perso","avremo perduto; perso","avrete perduto; perso","avranno perduto; perso"],"presentSubjunctive":["perda","perda","perda","perdiamo","perdiate","perdano"],"pastRemoteIndicative":["persi; perdei; perdetti","perdesti","perse; perd\\xE9; perdette","perdemmo","perdeste","persero; perderono; perdettero"],"pluperfectIndicative":["avevo perduto; perso","avevi perduto; perso","aveva perduto; perso","avevamo perduto; perso","avevate perduto; perso","avevano perduto; perso"],"imperfectSubjunctive":["abbia perduto; perso","abbia perduto; perso","abbia perduto; perso","abbiamo perduto; perso","abbiate perduto; perso","abbiano perduto; perso"],"pastConditional":["avrei perduto; perso","avresti perduto; perso","avrebbe perduto; perso","avremmo perduto; perso","avreste perduto; perso","avrebbero perduto; perso"],"pastSubjunctive":["perdessi","perdessi","perdesse","perdessimo","perdeste","perdessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi perduto; perso","avessi perduto; perso","avesse perduto; perso","avessimo perduto; perso","aveste perduto; perso","avessero perduto; perso"],"imperfectIndicative":["perdevo","perdevi","perdeva","perdevamo","perdevate","perdevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi perduto; perso","avesti perduto; perso","ebbe perduto; perso","avemmo perduto; perso","aveste perduto; perso","ebbero perduto; perso"],"verb":"perdere","imperative":["perdi","perda","perdiamo","perdete","perdano"],"presentIndicative":["perdo","perdi","perde","perdiamo","perdete","perdono"],"presentConditional":["perderei","perderesti","perderebbe","perderemmo","perdereste","perderebbero"],"impersonalForms":["perdere","perdente","perdendo","perduto; perso","avere perduto; perso","avendo perduto; perso","avente perduto; perso"],"pastIndicative":["ho perduto; perso","hai perduto; perso","ha perduto; perso","abbiamo perduto; perso","avete perduto; perso","hanno perduto; perso"],"futureIndicative":["perder\\xF2","perderai","perder\\xE0","perderemo","perderete","perderanno"]},{"futurePerfectIndicative":["avr\\xF2 permesso","avrai permesso","avr\\xE0 permesso","avremo permesso","avrete permesso","avranno permesso"],"presentSubjunctive":["permetta","permetta","permetta","permettiamo","permettiate","permettano"],"pastRemoteIndicative":["permisi","permettesti","permise","permettemmo","permetteste","permisero"],"pluperfectIndicative":["avevo permesso","avevi permesso","aveva permesso","avevamo permesso","avevate permesso","avevano permesso"],"imperfectSubjunctive":["abbia permesso","abbia permesso","abbia permesso","abbiamo permesso","abbiate permesso","abbiano permesso"],"pastConditional":["avrei permesso","avresti permesso","avrebbe permesso","avremmo permesso","avreste permesso","avrebbero permesso"],"pastSubjunctive":["permettessi","permettessi","permettesse","permettessimo","permetteste","permettessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi permesso","avessi permesso","avesse permesso","avessimo permesso","aveste permesso","avessero permesso"],"imperfectIndicative":["permettevo","permettevi","permetteva","permettevamo","permettevate","permettevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi permesso","avesti permesso","ebbe permesso","avemmo permesso","aveste permesso","ebbero permesso"],"verb":"permettere","imperative":["permetti","permetta","permettiamo","permettete","permettano"],"presentIndicative":["permetto","permetti","permette","permettiamo","permettete","permettono"],"presentConditional":["permetterei","permetteresti","permetterebbe","permetteremmo","permettereste","permetterebbero"],"impersonalForms":["permettere","permettente","permettendo","permesso","avere permesso","avendo permesso","avente permesso"],"pastIndicative":["ho permesso","hai permesso","ha permesso","abbiamo permesso","avete permesso","hanno permesso"],"futureIndicative":["permetter\\xF2","permetterai","permetter\\xE0","permetteremo","permetterete","permetteranno"]},{"futurePerfectIndicative":["avr\\xF2 pescato","avrai pescato","avr\\xE0 pescato","avremo pescato","avrete pescato","avranno pescato"],"presentSubjunctive":["peschi","peschi","peschi","peschiamo","peschiate","peschino"],"pastRemoteIndicative":["pescai","pescasti","pesc\\xF2","pescammo","pescaste","pescarono"],"pluperfectIndicative":["avevo pescato","avevi pescato","aveva pescato","avevamo pescato","avevate pescato","avevano pescato"],"imperfectSubjunctive":["abbia pescato","abbia pescato","abbia pescato","abbiamo pescato","abbiate pescato","abbiano pescato"],"pastConditional":["avrei pescato","avresti pescato","avrebbe pescato","avremmo pescato","avreste pescato","avrebbero pescato"],"pastSubjunctive":["pescassi","pescassi","pescasse","pescassimo","pescaste","pescassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pescato","avessi pescato","avesse pescato","avessimo pescato","aveste pescato","avessero pescato"],"imperfectIndicative":["pescavo","pescavi","pescava","pescavamo","pescavate","pescavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pescato","avesti pescato","ebbe pescato","avemmo pescato","aveste pescato","ebbero pescato"],"verb":"pescare","imperative":["pesca","peschi","peschiamo","pescate","peschino"],"presentIndicative":["pesco","peschi","pesca","peschiamo","pescate","pescano"],"presentConditional":["pescherei","pescheresti","pescherebbe","pescheremmo","peschereste","pescherebbero"],"impersonalForms":["pescare","pescante","pescando","pescato","avere pescato","avendo pescato","avente pescato"],"pastIndicative":["ho pescato","hai pescato","ha pescato","abbiamo pescato","avete pescato","hanno pescato"],"futureIndicative":["pescher\\xF2","pescherai","pescher\\xE0","pescheremo","pescherete","pescheranno"]},{"futurePerfectIndicative":["sar\\xF2 piaciuto","sarai piaciuto","sar\\xE0 piaciuto","saremo piaciuti","sarete piaciuti","saranno piaciuti"],"presentSubjunctive":["piaccia","piaccia","piaccia","piacciamo","piacciate","piacciano"],"pastRemoteIndicative":["piacqui","piacesti","piacque","piacemmo","piaceste","piacquero"],"pluperfectIndicative":["ero piaciuto","eri piaciuto","era piaciuto","eravamo piaciuti","eravate piaciuti","erano piaciuti"],"imperfectSubjunctive":["sia piaciuto","sia piaciuto","sia piaciuto","siamo piaciuti","siate piaciuti","siano piaciuti"],"pastConditional":["sarei piaciuto","saresti piaciuto","sarebbe piaciuto","saremmo piaciuti","sareste piaciuti","sarebbero piaciuti"],"pastSubjunctive":["piacessi","piacessi","piacesse","piacessimo","piaceste","piacessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi piaciuto","fossi piaciuto","fosse piaciuto","fossimo piaciuti","foste piaciuti","fossero piaciuti"],"imperfectIndicative":["piacevo","piacevi","piaceva","piacevamo","piacevate","piacevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui piaciuto","fosti piaciuto","fu piaciuto","fummo piaciuti","foste piaciuti","furono piaciuti"],"verb":"piacere","imperative":["piaci","piaccia","piacciamo","piacete","piacciano"],"presentIndicative":["piaccio","piaci","piace","piacciamo","piacete","piacciono"],"presentConditional":["piacerei","piaceresti","piacerebbe","piaceremmo","piacereste","piacerebbero"],"impersonalForms":["piacere","piacente","piacendo","piaciuto","essere piaciuto","essendo piaciuto","essente piaciuto"],"pastIndicative":["sono piaciuto","sei piaciuto","\\xE8 piaciuto","siamo piaciuti","siete piaciuti","sono piaciuti"],"futureIndicative":["piacer\\xF2","piacerai","piacer\\xE0","piaceremo","piacerete","piaceranno"]},{"futurePerfectIndicative":["avr\\xF2 pianto","avrai pianto","avr\\xE0 pianto","avremo pianto","avrete pianto","avranno pianto"],"presentSubjunctive":["pianga","pianga","pianga","piangiamo","piangiate","piangano"],"pastRemoteIndicative":["piansi","piangesti","pianse","piangemmo","piangeste","piansero"],"pluperfectIndicative":["avevo pianto","avevi pianto","aveva pianto","avevamo pianto","avevate pianto","avevano pianto"],"imperfectSubjunctive":["abbia pianto","abbia pianto","abbia pianto","abbiamo pianto","abbiate pianto","abbiano pianto"],"pastConditional":["avrei pianto","avresti pianto","avrebbe pianto","avremmo pianto","avreste pianto","avrebbero pianto"],"pastSubjunctive":["piangessi","piangessi","piangesse","piangessimo","piangeste","piangessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pianto","avessi pianto","avesse pianto","avessimo pianto","aveste pianto","avessero pianto"],"imperfectIndicative":["piangevo","piangevi","piangeva","piangevamo","piangevate","piangevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pianto","avesti pianto","ebbe pianto","avemmo pianto","aveste pianto","ebbero pianto"],"verb":"piangere","imperative":["piangi","pianga","piangiamo","piangete","piangano"],"presentIndicative":["piango","piangi","piange","piangiamo","piangete","piangono"],"presentConditional":["piangerei","piangeresti","piangerebbe","piangeremmo","piangereste","piangerebbero"],"impersonalForms":["piangere","piangente","piangendo","pianto","avere pianto","avendo pianto","avente pianto"],"pastIndicative":["ho pianto","hai pianto","ha pianto","abbiamo pianto","avete pianto","hanno pianto"],"futureIndicative":["pianger\\xF2","piangerai","pianger\\xE0","piangeremo","piangerete","piangeranno"]},{"futurePerfectIndicative":["avr\\xF2 pianificato","avrai pianificato","avr\\xE0 pianificato","avremo pianificato","avrete pianificato","avranno pianificato"],"presentSubjunctive":["pianifichi","pianifichi","pianifichi","pianifichiamo","pianifichiate","pianifichino"],"pastRemoteIndicative":["pianificai","pianificasti","pianific\\xF2","pianificammo","pianificaste","pianificarono"],"pluperfectIndicative":["avevo pianificato","avevi pianificato","aveva pianificato","avevamo pianificato","avevate pianificato","avevano pianificato"],"imperfectSubjunctive":["abbia pianificato","abbia pianificato","abbia pianificato","abbiamo pianificato","abbiate pianificato","abbiano pianificato"],"pastConditional":["avrei pianificato","avresti pianificato","avrebbe pianificato","avremmo pianificato","avreste pianificato","avrebbero pianificato"],"pastSubjunctive":["pianificassi","pianificassi","pianificasse","pianificassimo","pianificaste","pianificassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pianificato","avessi pianificato","avesse pianificato","avessimo pianificato","aveste pianificato","avessero pianificato"],"imperfectIndicative":["pianificavo","pianificavi","pianificava","pianificavamo","pianificavate","pianificavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pianificato","avesti pianificato","ebbe pianificato","avemmo pianificato","aveste pianificato","ebbero pianificato"],"verb":"pianificare","imperative":["pianifica","pianifichi","pianifichiamo","pianificate","pianifichino"],"presentIndicative":["pianifico","pianifichi","pianifica","pianifichiamo","pianificate","pianificano"],"presentConditional":["pianificherei","pianificheresti","pianificherebbe","pianificheremmo","pianifichereste","pianificherebbero"],"impersonalForms":["pianificare","pianificante","pianificando","pianificato","avere pianificato","avendo pianificato","avente pianificato"],"pastIndicative":["ho pianificato","hai pianificato","ha pianificato","abbiamo pianificato","avete pianificato","hanno pianificato"],"futureIndicative":["pianificher\\xF2","pianificherai","pianificher\\xE0","pianificheremo","pianificherete","pianificheranno"]},{"futurePerfectIndicative":["avr\\xF2 piovuto; sar\\xF2 piovuto","avrai piovuto; sarai piovuto","avr\\xE0 piovuto; sar\\xE0 piovuto","avremo piovuto; saremo piovuti","avrete piovuto; sarete piovuti","avranno piovuto; saranno piovuti"],"presentSubjunctive":["piova","piova","piova","pioviamo","pioviate","piovano"],"pastRemoteIndicative":["piovei; piovetti","piovesti","piov\\xE9; piovette","piovemmo","pioveste","pioverono; piovettero"],"pluperfectIndicative":["avevo piovuto; ero piovuto","avevi piovuto; eri piovuto","aveva piovuto; era piovuto","avevamo piovuto; eravamo piovuti","avevate piovuto; eravate piovuti","avevano piovuto; erano piovuti"],"imperfectSubjunctive":["abbia piovuto; sia piovuto","abbia piovuto; sia piovuto","abbia piovuto; sia piovuto","abbiamo piovuto; siamo piovuti","abbiate piovuto; siate piovuti","abbiano piovuto; siano piovuti"],"pastConditional":["avrei piovuto; sarei piovuto","avresti piovuto; saresti piovuto","avrebbe piovuto; sarebbe piovuto","avremmo piovuto; saremmo piovuti","avreste piovuto; sareste piovuti","avrebbero piovuto; sarebbero piovuti"],"pastSubjunctive":["piovessi","piovessi","piovesse","piovessimo","pioveste","piovessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi piovuto; fossi piovuto","avessi piovuto; fossi piovuto","avesse piovuto; fosse piovuto","avessimo piovuto; fossimo piovuti","aveste piovuto; foste piovuti","avessero piovuto; fossero piovuti"],"imperfectIndicative":["piovevo","piovevi","pioveva","piovevamo","piovevate","piovevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi piovuto; fui piovuto","avesti piovuto; fosti piovuto","ebbe piovuto; fu piovuto","avemmo piovuto; fummo piovuti","aveste piovuto; foste piovuti","ebbero piovuto; furono piovuti"],"verb":"piovere","imperative":["piovi","piova","pioviamo","piovete","piovano"],"presentIndicative":["piovo","piovi","piove","pioviamo","piovete","piovono"],"presentConditional":["pioverei","pioveresti","pioverebbe","pioveremmo","piovereste","pioverebbero"],"impersonalForms":["piovere","piovente","piovendo","piovuto","avere piovuto; essere piovuto","avendo piovuto; essendo piovuto","avente piovuto; essente piovuto"],"pastIndicative":["ho piovuto; sono piovuto","hai piovuto; sei piovuto","ha piovuto; \\xE8 piovuto","abbiamo piovuto; siamo piovuti","avete piovuto; siete piovuti","hanno piovuto; sono piovuti"],"futureIndicative":["piover\\xF2","pioverai","piover\\xE0","pioveremo","pioverete","pioveranno"]},{"futurePerfectIndicative":["avr\\xF2 posto","avrai posto","avr\\xE0 posto","avremo posto","avrete posto","avranno posto"],"presentSubjunctive":["ponga","ponga","ponga","poniamo","poniate","pongano"],"pastRemoteIndicative":["posi","ponesti","pose","ponemmo","poneste","posero"],"pluperfectIndicative":["avevo posto","avevi posto","aveva posto","avevamo posto","avevate posto","avevano posto"],"imperfectSubjunctive":["abbia posto","abbia posto","abbia posto","abbiamo posto","abbiate posto","abbiano posto"],"pastConditional":["avrei posto","avresti posto","avrebbe posto","avremmo posto","avreste posto","avrebbero posto"],"pastSubjunctive":["ponessi","ponessi","ponesse","ponessimo","poneste","ponessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi posto","avessi posto","avesse posto","avessimo posto","aveste posto","avessero posto"],"imperfectIndicative":["ponevo","ponevi","poneva","ponevamo","ponevate","ponevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi posto","avesti posto","ebbe posto","avemmo posto","aveste posto","ebbero posto"],"verb":"porre","imperative":["poni","ponga","poniamo","ponete","pongano"],"presentIndicative":["pongo","poni","pone","poniamo","ponete","pongono"],"presentConditional":["porrei","porresti","porrebbe","porremmo","porreste","porrebbero"],"impersonalForms":["porre","ponente","ponendo","posto","avere posto","avendo posto","avente posto"],"pastIndicative":["ho posto","hai posto","ha posto","abbiamo posto","avete posto","hanno posto"],"futureIndicative":["porr\\xF2","porrai","porr\\xE0","porremo","porrete","porranno"]},{"futurePerfectIndicative":["avr\\xF2 portato","avrai portato","avr\\xE0 portato","avremo portato","avrete portato","avranno portato"],"presentSubjunctive":["porti","porti","porti","portiamo","portiate","portino"],"pastRemoteIndicative":["portai","portasti","port\\xF2","portammo","portaste","portarono"],"pluperfectIndicative":["avevo portato","avevi portato","aveva portato","avevamo portato","avevate portato","avevano portato"],"imperfectSubjunctive":["abbia portato","abbia portato","abbia portato","abbiamo portato","abbiate portato","abbiano portato"],"pastConditional":["avrei portato","avresti portato","avrebbe portato","avremmo portato","avreste portato","avrebbero portato"],"pastSubjunctive":["portassi","portassi","portasse","portassimo","portaste","portassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi portato","avessi portato","avesse portato","avessimo portato","aveste portato","avessero portato"],"imperfectIndicative":["portavo","portavi","portava","portavamo","portavate","portavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi portato","avesti portato","ebbe portato","avemmo portato","aveste portato","ebbero portato"],"verb":"portare","imperative":["porta","porti","portiamo","portate","portino"],"presentIndicative":["porto","porti","porta","portiamo","portate","portano"],"presentConditional":["porterei","porteresti","porterebbe","porteremmo","portereste","porterebbero"],"impersonalForms":["portare","portante","portando","portato","avere portato","avendo portato","avente portato"],"pastIndicative":["ho portato","hai portato","ha portato","abbiamo portato","avete portato","hanno portato"],"futureIndicative":["porter\\xF2","porterai","porter\\xE0","porteremo","porterete","porteranno"]},{"futurePerfectIndicative":["avr\\xF2 potuto; sar\\xF2 potuto","avrai potuto; sarai potuto","avr\\xE0 potuto; sar\\xE0 potuto","avremo potuto; saremo potuti","avrete potuto; sarete potuti","avranno potuto; saranno potuti"],"presentSubjunctive":["possa","possa","possa","possiamo","possiate","possano"],"pastRemoteIndicative":["potei; potetti","potesti","pot\\xE9; potette","potemmo","poteste","poterono; potettero"],"pluperfectIndicative":["avevo potuto; ero potuto","avevi potuto; eri potuto","aveva potuto; era potuto","avevamo potuto; eravamo potuti","avevate potuto; eravate potuti","avevano potuto; erano potuti"],"imperfectSubjunctive":["abbia potuto; sia potuto","abbia potuto; sia potuto","abbia potuto; sia potuto","abbiamo potuto; siamo potuti","abbiate potuto; siate potuti","abbiano potuto; siano potuti"],"pastConditional":["avrei potuto; sarei potuto","avresti potuto; saresti potuto","avrebbe potuto; sarebbe potuto","avremmo potuto; saremmo potuti","avreste potuto; sareste potuti","avrebbero potuto; sarebbero potuti"],"pastSubjunctive":["potessi","potessi","potesse","potessimo","poteste","potessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi potuto; fossi potuto","avessi potuto; fossi potuto","avesse potuto; fosse potuto","avessimo potuto; fossimo potuti","aveste potuto; foste potuti","avessero potuto; fossero potuti"],"imperfectIndicative":["potevo","potevi","poteva","potevamo","potevate","potevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi potuto; fui potuto","avesti potuto; fosti potuto","ebbe potuto; fu potuto","avemmo potuto; fummo potuti","aveste potuto; foste potuti","ebbero potuto; furono potuti"],"verb":"potere","imperative":["puoi","possa","possiamo","potete","possano"],"presentIndicative":["posso","puoi","pu\\xF2","possiamo","potete","possono"],"presentConditional":["potrei","potresti","potrebbe","potremmo","potreste","potrebbero"],"impersonalForms":["potere","potente","potendo","potuto","avere potuto; essere potuto","avendo potuto; essendo potuto","avente potuto; essente potuto"],"pastIndicative":["ho potuto; sono potuto","hai potuto; sei potuto","ha potuto; \\xE8 potuto","abbiamo potuto; siamo potuti","avete potuto; siete potuti","hanno potuto; sono potuti"],"futureIndicative":["potr\\xF2","potrai","potr\\xE0","potremo","potrete","potranno"]},{"futurePerfectIndicative":["avr\\xF2 preferito","avrai preferito","avr\\xE0 preferito","avremo preferito","avrete preferito","avranno preferito"],"presentSubjunctive":["preferisca","preferisca","preferisca","preferiamo","preferiate","preferiscano"],"pastRemoteIndicative":["preferii","preferisti","prefer\\xEC","preferimmo","preferiste","preferirono"],"pluperfectIndicative":["avevo preferito","avevi preferito","aveva preferito","avevamo preferito","avevate preferito","avevano preferito"],"imperfectSubjunctive":["abbia preferito","abbia preferito","abbia preferito","abbiamo preferito","abbiate preferito","abbiano preferito"],"pastConditional":["avrei preferito","avresti preferito","avrebbe preferito","avremmo preferito","avreste preferito","avrebbero preferito"],"pastSubjunctive":["preferissi","preferissi","preferisse","preferissimo","preferiste","preferissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi preferito","avessi preferito","avesse preferito","avessimo preferito","aveste preferito","avessero preferito"],"imperfectIndicative":["preferivo","preferivi","preferiva","preferivamo","preferivate","preferivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi preferito","avesti preferito","ebbe preferito","avemmo preferito","aveste preferito","ebbero preferito"],"verb":"preferire","imperative":["preferisci","preferisca","preferiamo","preferite","preferiscano"],"presentIndicative":["preferisco","preferisci","preferisce","preferiamo","preferite","preferiscono"],"presentConditional":["preferirei","preferiresti","preferirebbe","preferiremmo","preferireste","preferirebbero"],"impersonalForms":["preferire","preferente","preferendo","preferito","avere preferito","avendo preferito","avente preferito"],"pastIndicative":["ho preferito","hai preferito","ha preferito","abbiamo preferito","avete preferito","hanno preferito"],"futureIndicative":["preferir\\xF2","preferirai","preferir\\xE0","preferiremo","preferirete","preferiranno"]},{"futurePerfectIndicative":["avr\\xF2 pregato","avrai pregato","avr\\xE0 pregato","avremo pregato","avrete pregato","avranno pregato"],"presentSubjunctive":["preghi","preghi","preghi","preghiamo","preghiate","preghino"],"pastRemoteIndicative":["pregai","pregasti","preg\\xF2","pregammo","pregaste","pregarono"],"pluperfectIndicative":["avevo pregato","avevi pregato","aveva pregato","avevamo pregato","avevate pregato","avevano pregato"],"imperfectSubjunctive":["abbia pregato","abbia pregato","abbia pregato","abbiamo pregato","abbiate pregato","abbiano pregato"],"pastConditional":["avrei pregato","avresti pregato","avrebbe pregato","avremmo pregato","avreste pregato","avrebbero pregato"],"pastSubjunctive":["pregassi","pregassi","pregasse","pregassimo","pregaste","pregassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pregato","avessi pregato","avesse pregato","avessimo pregato","aveste pregato","avessero pregato"],"imperfectIndicative":["pregavo","pregavi","pregava","pregavamo","pregavate","pregavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pregato","avesti pregato","ebbe pregato","avemmo pregato","aveste pregato","ebbero pregato"],"verb":"pregare","imperative":["prega","preghi","preghiamo","pregate","preghino"],"presentIndicative":["prego","preghi","prega","preghiamo","pregate","pregano"],"presentConditional":["pregherei","pregheresti","pregherebbe","pregheremmo","preghereste","pregherebbero"],"impersonalForms":["pregare","pregante","pregando","pregato","avere pregato","avendo pregato","avente pregato"],"pastIndicative":["ho pregato","hai pregato","ha pregato","abbiamo pregato","avete pregato","hanno pregato"],"futureIndicative":["pregher\\xF2","pregherai","pregher\\xE0","pregheremo","pregherete","pregheranno"]},{"futurePerfectIndicative":["avr\\xF2 premuto","avrai premuto","avr\\xE0 premuto","avremo premuto","avrete premuto","avranno premuto"],"presentSubjunctive":["prema","prema","prema","premiamo","premiate","premano"],"pastRemoteIndicative":["premei; premetti","premesti","prem\\xE9; premette","prememmo","premeste","premerono; premettero"],"pluperfectIndicative":["avevo premuto","avevi premuto","aveva premuto","avevamo premuto","avevate premuto","avevano premuto"],"imperfectSubjunctive":["abbia premuto","abbia premuto","abbia premuto","abbiamo premuto","abbiate premuto","abbiano premuto"],"pastConditional":["avrei premuto","avresti premuto","avrebbe premuto","avremmo premuto","avreste premuto","avrebbero premuto"],"pastSubjunctive":["premessi","premessi","premesse","premessimo","premeste","premessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi premuto","avessi premuto","avesse premuto","avessimo premuto","aveste premuto","avessero premuto"],"imperfectIndicative":["premevo","premevi","premeva","premevamo","premevate","premevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi premuto","avesti premuto","ebbe premuto","avemmo premuto","aveste premuto","ebbero premuto"],"verb":"premere","imperative":["premi","prema","premiamo","premete","premano"],"presentIndicative":["premo","premi","preme","premiamo","premete","premono"],"presentConditional":["premerei","premeresti","premerebbe","premeremmo","premereste","premerebbero"],"impersonalForms":["premere","premente","premendo","premuto","avere premuto","avendo premuto","avente premuto"],"pastIndicative":["ho premuto","hai premuto","ha premuto","abbiamo premuto","avete premuto","hanno premuto"],"futureIndicative":["premer\\xF2","premerai","premer\\xE0","premeremo","premerete","premeranno"]},{"futurePerfectIndicative":["avr\\xF2 preso","avrai preso","avr\\xE0 preso","avremo preso","avrete preso","avranno preso"],"presentSubjunctive":["prenda","prenda","prenda","prendiamo","prendiate","prendano"],"pastRemoteIndicative":["presi","prendesti","prese","prendemmo","prendeste","presero"],"pluperfectIndicative":["avevo preso","avevi preso","aveva preso","avevamo preso","avevate preso","avevano preso"],"imperfectSubjunctive":["abbia preso","abbia preso","abbia preso","abbiamo preso","abbiate preso","abbiano preso"],"pastConditional":["avrei preso","avresti preso","avrebbe preso","avremmo preso","avreste preso","avrebbero preso"],"pastSubjunctive":["prendessi","prendessi","prendesse","prendessimo","prendeste","prendessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi preso","avessi preso","avesse preso","avessimo preso","aveste preso","avessero preso"],"imperfectIndicative":["prendevo","prendevi","prendeva","prendevamo","prendevate","prendevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi preso","avesti preso","ebbe preso","avemmo preso","aveste preso","ebbero preso"],"verb":"prendere","imperative":["prendi","prenda","prendiamo","prendete","prendano"],"presentIndicative":["prendo","prendi","prende","prendiamo","prendete","prendono"],"presentConditional":["prenderei","prenderesti","prenderebbe","prenderemmo","prendereste","prenderebbero"],"impersonalForms":["prendere","prendente","prendendo","preso","avere preso","avendo preso","avente preso"],"pastIndicative":["ho preso","hai preso","ha preso","abbiamo preso","avete preso","hanno preso"],"futureIndicative":["prender\\xF2","prenderai","prender\\xE0","prenderemo","prenderete","prenderanno"]},{"futurePerfectIndicative":["avr\\xF2 prenotato","avrai prenotato","avr\\xE0 prenotato","avremo prenotato","avrete prenotato","avranno prenotato"],"presentSubjunctive":["prenoti","prenoti","prenoti","prenotiamo","prenotiate","prenotino"],"pastRemoteIndicative":["prenotai","prenotasti","prenot\\xF2","prenotammo","prenotaste","prenotarono"],"pluperfectIndicative":["avevo prenotato","avevi prenotato","aveva prenotato","avevamo prenotato","avevate prenotato","avevano prenotato"],"imperfectSubjunctive":["abbia prenotato","abbia prenotato","abbia prenotato","abbiamo prenotato","abbiate prenotato","abbiano prenotato"],"pastConditional":["avrei prenotato","avresti prenotato","avrebbe prenotato","avremmo prenotato","avreste prenotato","avrebbero prenotato"],"pastSubjunctive":["prenotassi","prenotassi","prenotasse","prenotassimo","prenotaste","prenotassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi prenotato","avessi prenotato","avesse prenotato","avessimo prenotato","aveste prenotato","avessero prenotato"],"imperfectIndicative":["prenotavo","prenotavi","prenotava","prenotavamo","prenotavate","prenotavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi prenotato","avesti prenotato","ebbe prenotato","avemmo prenotato","aveste prenotato","ebbero prenotato"],"verb":"prenotare","imperative":["prenota","prenoti","prenotiamo","prenotate","prenotino"],"presentIndicative":["prenoto","prenoti","prenota","prenotiamo","prenotate","prenotano"],"presentConditional":["prenoterei","prenoteresti","prenoterebbe","prenoteremmo","prenotereste","prenoterebbero"],"impersonalForms":["prenotare","prenotante","prenotando","prenotato","avere prenotato","avendo prenotato","avente prenotato"],"pastIndicative":["ho prenotato","hai prenotato","ha prenotato","abbiamo prenotato","avete prenotato","hanno prenotato"],"futureIndicative":["prenoter\\xF2","prenoterai","prenoter\\xE0","prenoteremo","prenoterete","prenoteranno"]},{"futurePerfectIndicative":["avr\\xF2 preoccupato","avrai preoccupato","avr\\xE0 preoccupato","avremo preoccupato","avrete preoccupato","avranno preoccupato"],"presentSubjunctive":["preoccupi","preoccupi","preoccupi","preoccupiamo","preoccupiate","preoccupino"],"pastRemoteIndicative":["preoccupai","preoccupasti","preoccup\\xF2","preoccupammo","preoccupaste","preoccuparono"],"pluperfectIndicative":["avevo preoccupato","avevi preoccupato","aveva preoccupato","avevamo preoccupato","avevate preoccupato","avevano preoccupato"],"imperfectSubjunctive":["abbia preoccupato","abbia preoccupato","abbia preoccupato","abbiamo preoccupato","abbiate preoccupato","abbiano preoccupato"],"pastConditional":["avrei preoccupato","avresti preoccupato","avrebbe preoccupato","avremmo preoccupato","avreste preoccupato","avrebbero preoccupato"],"pastSubjunctive":["preoccupassi","preoccupassi","preoccupasse","preoccupassimo","preoccupaste","preoccupassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi preoccupato","avessi preoccupato","avesse preoccupato","avessimo preoccupato","aveste preoccupato","avessero preoccupato"],"imperfectIndicative":["preoccupavo","preoccupavi","preoccupava","preoccupavamo","preoccupavate","preoccupavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi preoccupato","avesti preoccupato","ebbe preoccupato","avemmo preoccupato","aveste preoccupato","ebbero preoccupato"],"verb":"preoccupare","imperative":["preoccupa","preoccupi","preoccupiamo","preoccupate","preoccupino"],"presentIndicative":["preoccupo","preoccupi","preoccupa","preoccupiamo","preoccupate","preoccupano"],"presentConditional":["preoccuperei","preoccuperesti","preoccuperebbe","preoccuperemmo","preoccupereste","preoccuperebbero"],"impersonalForms":["preoccupare","preoccupante","preoccupando","preoccupato","avere preoccupato","avendo preoccupato","avente preoccupato"],"pastIndicative":["ho preoccupato","hai preoccupato","ha preoccupato","abbiamo preoccupato","avete preoccupato","hanno preoccupato"],"futureIndicative":["preoccuper\\xF2","preoccuperai","preoccuper\\xE0","preoccuperemo","preoccuperete","preoccuperanno"]},{"futurePerfectIndicative":["avr\\xF2 prestato","avrai prestato","avr\\xE0 prestato","avremo prestato","avrete prestato","avranno prestato"],"presentSubjunctive":["presti","presti","presti","prestiamo","prestiate","prestino"],"pastRemoteIndicative":["prestai","prestasti","prest\\xF2","prestammo","prestaste","prestarono"],"pluperfectIndicative":["avevo prestato","avevi prestato","aveva prestato","avevamo prestato","avevate prestato","avevano prestato"],"imperfectSubjunctive":["abbia prestato","abbia prestato","abbia prestato","abbiamo prestato","abbiate prestato","abbiano prestato"],"pastConditional":["avrei prestato","avresti prestato","avrebbe prestato","avremmo prestato","avreste prestato","avrebbero prestato"],"pastSubjunctive":["prestassi","prestassi","prestasse","prestassimo","prestaste","prestassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi prestato","avessi prestato","avesse prestato","avessimo prestato","aveste prestato","avessero prestato"],"imperfectIndicative":["prestavo","prestavi","prestava","prestavamo","prestavate","prestavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi prestato","avesti prestato","ebbe prestato","avemmo prestato","aveste prestato","ebbero prestato"],"verb":"prestare","imperative":["presta","presti","prestiamo","prestate","prestino"],"presentIndicative":["presto","presti","presta","prestiamo","prestate","prestano"],"presentConditional":["presterei","presteresti","presterebbe","presteremmo","prestereste","presterebbero"],"impersonalForms":["prestare","prestante","prestando","prestato","avere prestato","avendo prestato","avente prestato"],"pastIndicative":["ho prestato","hai prestato","ha prestato","abbiamo prestato","avete prestato","hanno prestato"],"futureIndicative":["prester\\xF2","presterai","prester\\xE0","presteremo","presterete","presteranno"]},{"futurePerfectIndicative":["avr\\xF2 prodotto","avrai prodotto","avr\\xE0 prodotto","avremo prodotto","avrete prodotto","avranno prodotto"],"presentSubjunctive":["produca","produca","produca","produciamo","produciate","producano"],"pastRemoteIndicative":["produssi","producesti","produsse","producemmo","produceste","produssero"],"pluperfectIndicative":["avevo prodotto","avevi prodotto","aveva prodotto","avevamo prodotto","avevate prodotto","avevano prodotto"],"imperfectSubjunctive":["abbia prodotto","abbia prodotto","abbia prodotto","abbiamo prodotto","abbiate prodotto","abbiano prodotto"],"pastConditional":["avrei prodotto","avresti prodotto","avrebbe prodotto","avremmo prodotto","avreste prodotto","avrebbero prodotto"],"pastSubjunctive":["producessi","producessi","producesse","producessimo","produceste","producessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi prodotto","avessi prodotto","avesse prodotto","avessimo prodotto","aveste prodotto","avessero prodotto"],"imperfectIndicative":["producevo","producevi","produceva","producevamo","producevate","producevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi prodotto","avesti prodotto","ebbe prodotto","avemmo prodotto","aveste prodotto","ebbero prodotto"],"verb":"produrre","imperative":["produci","produca","produciamo","producete","producano"],"presentIndicative":["produco","produci","produce","produciamo","producete","producono"],"presentConditional":["produrrei","produrresti","produrrebbe","produrremmo","produrreste","produrrebbero"],"impersonalForms":["produrre","produnente","produnendo","prodotto","avere prodotto","avendo prodotto","avente prodotto"],"pastIndicative":["ho prodotto","hai prodotto","ha prodotto","abbiamo prodotto","avete prodotto","hanno prodotto"],"futureIndicative":["produrr\\xF2","produrrai","produrr\\xE0","produrremo","produrrete","produrranno"]},{"futurePerfectIndicative":["avr\\xF2 provato","avrai provato","avr\\xE0 provato","avremo provato","avrete provato","avranno provato"],"presentSubjunctive":["provi","provi","provi","proviamo","proviate","provino"],"pastRemoteIndicative":["provai","provasti","prov\\xF2","provammo","provaste","provarono"],"pluperfectIndicative":["avevo provato","avevi provato","aveva provato","avevamo provato","avevate provato","avevano provato"],"imperfectSubjunctive":["abbia provato","abbia provato","abbia provato","abbiamo provato","abbiate provato","abbiano provato"],"pastConditional":["avrei provato","avresti provato","avrebbe provato","avremmo provato","avreste provato","avrebbero provato"],"pastSubjunctive":["provassi","provassi","provasse","provassimo","provaste","provassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi provato","avessi provato","avesse provato","avessimo provato","aveste provato","avessero provato"],"imperfectIndicative":["provavo","provavi","provava","provavamo","provavate","provavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi provato","avesti provato","ebbe provato","avemmo provato","aveste provato","ebbero provato"],"verb":"provare","imperative":["prova","provi","proviamo","provate","provino"],"presentIndicative":["provo","provi","prova","proviamo","provate","provano"],"presentConditional":["proverei","proveresti","proverebbe","proveremmo","provereste","proverebbero"],"impersonalForms":["provare","provante","provando","provato","avere provato","avendo provato","avente provato"],"pastIndicative":["ho provato","hai provato","ha provato","abbiamo provato","avete provato","hanno provato"],"futureIndicative":["prover\\xF2","proverai","prover\\xE0","proveremo","proverete","proveranno"]},{"futurePerfectIndicative":["avr\\xF2 pulito","avrai pulito","avr\\xE0 pulito","avremo pulito","avrete pulito","avranno pulito"],"presentSubjunctive":["pulisca","pulisca","pulisca","puliamo","puliate","puliscano"],"pastRemoteIndicative":["pulii","pulisti","pul\\xEC","pulimmo","puliste","pulirono"],"pluperfectIndicative":["avevo pulito","avevi pulito","aveva pulito","avevamo pulito","avevate pulito","avevano pulito"],"imperfectSubjunctive":["abbia pulito","abbia pulito","abbia pulito","abbiamo pulito","abbiate pulito","abbiano pulito"],"pastConditional":["avrei pulito","avresti pulito","avrebbe pulito","avremmo pulito","avreste pulito","avrebbero pulito"],"pastSubjunctive":["pulissi","pulissi","pulisse","pulissimo","puliste","pulissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi pulito","avessi pulito","avesse pulito","avessimo pulito","aveste pulito","avessero pulito"],"imperfectIndicative":["pulivo","pulivi","puliva","pulivamo","pulivate","pulivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi pulito","avesti pulito","ebbe pulito","avemmo pulito","aveste pulito","ebbero pulito"],"verb":"pulire","imperative":["pulisci","pulisca","puliamo","pulite","puliscano"],"presentIndicative":["pulisco","pulisci","pulisce","puliamo","pulite","puliscono"],"presentConditional":["pulirei","puliresti","pulirebbe","puliremmo","pulireste","pulirebbero"],"impersonalForms":["pulire","pulente","pulendo","pulito","avere pulito","avendo pulito","avente pulito"],"pastIndicative":["ho pulito","hai pulito","ha pulito","abbiamo pulito","avete pulito","hanno pulito"],"futureIndicative":["pulir\\xF2","pulirai","pulir\\xE0","puliremo","pulirete","puliranno"]},{"futurePerfectIndicative":["avr\\xF2 ricercato","avrai ricercato","avr\\xE0 ricercato","avremo ricercato","avrete ricercato","avranno ricercato"],"presentSubjunctive":["ricerchi","ricerchi","ricerchi","ricerchiamo","ricerchiate","ricerchino"],"pastRemoteIndicative":["ricercai","ricercasti","ricerc\\xF2","ricercammo","ricercaste","ricercarono"],"pluperfectIndicative":["avevo ricercato","avevi ricercato","aveva ricercato","avevamo ricercato","avevate ricercato","avevano ricercato"],"imperfectSubjunctive":["abbia ricercato","abbia ricercato","abbia ricercato","abbiamo ricercato","abbiate ricercato","abbiano ricercato"],"pastConditional":["avrei ricercato","avresti ricercato","avrebbe ricercato","avremmo ricercato","avreste ricercato","avrebbero ricercato"],"pastSubjunctive":["ricercassi","ricercassi","ricercasse","ricercassimo","ricercaste","ricercassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ricercato","avessi ricercato","avesse ricercato","avessimo ricercato","aveste ricercato","avessero ricercato"],"imperfectIndicative":["ricercavo","ricercavi","ricercava","ricercavamo","ricercavate","ricercavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ricercato","avesti ricercato","ebbe ricercato","avemmo ricercato","aveste ricercato","ebbero ricercato"],"verb":"ricercare","imperative":["ricerca","ricerchi","ricerchiamo","ricercate","ricerchino"],"presentIndicative":["ricerco","ricerchi","ricerca","ricerchiamo","ricercate","ricercano"],"presentConditional":["ricercherei","ricercheresti","ricercherebbe","ricercheremmo","ricerchereste","ricercherebbero"],"impersonalForms":["ricercare","ricercante","ricercando","ricercato","avere ricercato","avendo ricercato","avente ricercato"],"pastIndicative":["ho ricercato","hai ricercato","ha ricercato","abbiamo ricercato","avete ricercato","hanno ricercato"],"futureIndicative":["ricercher\\xF2","ricercherai","ricercher\\xE0","ricercheremo","ricercherete","ricercheranno"]},{"futurePerfectIndicative":["avr\\xF2 ricevuto","avrai ricevuto","avr\\xE0 ricevuto","avremo ricevuto","avrete ricevuto","avranno ricevuto"],"presentSubjunctive":["riceva","riceva","riceva","riceviamo","riceviate","ricevano"],"pastRemoteIndicative":["ricevei; ricevetti","ricevesti","ricev\\xE9; ricevette","ricevemmo","riceveste","riceverono; ricevettero"],"pluperfectIndicative":["avevo ricevuto","avevi ricevuto","aveva ricevuto","avevamo ricevuto","avevate ricevuto","avevano ricevuto"],"imperfectSubjunctive":["abbia ricevuto","abbia ricevuto","abbia ricevuto","abbiamo ricevuto","abbiate ricevuto","abbiano ricevuto"],"pastConditional":["avrei ricevuto","avresti ricevuto","avrebbe ricevuto","avremmo ricevuto","avreste ricevuto","avrebbero ricevuto"],"pastSubjunctive":["ricevessi","ricevessi","ricevesse","ricevessimo","riceveste","ricevessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ricevuto","avessi ricevuto","avesse ricevuto","avessimo ricevuto","aveste ricevuto","avessero ricevuto"],"imperfectIndicative":["ricevevo","ricevevi","riceveva","ricevevamo","ricevevate","ricevevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ricevuto","avesti ricevuto","ebbe ricevuto","avemmo ricevuto","aveste ricevuto","ebbero ricevuto"],"verb":"ricevere","imperative":["ricevi","riceva","riceviamo","ricevete","ricevano"],"presentIndicative":["ricevo","ricevi","riceve","riceviamo","ricevete","ricevono"],"presentConditional":["riceverei","riceveresti","riceverebbe","riceveremmo","ricevereste","riceverebbero"],"impersonalForms":["ricevere","ricevente","ricevendo","ricevuto","avere ricevuto","avendo ricevuto","avente ricevuto"],"pastIndicative":["ho ricevuto","hai ricevuto","ha ricevuto","abbiamo ricevuto","avete ricevuto","hanno ricevuto"],"futureIndicative":["ricever\\xF2","riceverai","ricever\\xE0","riceveremo","riceverete","riceveranno"]},{"futurePerfectIndicative":["avr\\xF2 riconosciuto","avrai riconosciuto","avr\\xE0 riconosciuto","avremo riconosciuto","avrete riconosciuto","avranno riconosciuto"],"presentSubjunctive":["riconosca","riconosca","riconosca","riconosciamo","riconosciate","riconoscano"],"pastRemoteIndicative":["riconobbi","riconoscesti","riconobbe","riconoscemmo","riconosceste","riconobbero"],"pluperfectIndicative":["avevo riconosciuto","avevi riconosciuto","aveva riconosciuto","avevamo riconosciuto","avevate riconosciuto","avevano riconosciuto"],"imperfectSubjunctive":["abbia riconosciuto","abbia riconosciuto","abbia riconosciuto","abbiamo riconosciuto","abbiate riconosciuto","abbiano riconosciuto"],"pastConditional":["avrei riconosciuto","avresti riconosciuto","avrebbe riconosciuto","avremmo riconosciuto","avreste riconosciuto","avrebbero riconosciuto"],"pastSubjunctive":["riconoscessi","riconoscessi","riconoscesse","riconoscessimo","riconosceste","riconoscessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi riconosciuto","avessi riconosciuto","avesse riconosciuto","avessimo riconosciuto","aveste riconosciuto","avessero riconosciuto"],"imperfectIndicative":["riconoscevo","riconoscevi","riconosceva","riconoscevamo","riconoscevate","riconoscevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi riconosciuto","avesti riconosciuto","ebbe riconosciuto","avemmo riconosciuto","aveste riconosciuto","ebbero riconosciuto"],"verb":"riconoscere","imperative":["riconosci","riconosca","riconosciamo","riconoscete","riconoscano"],"presentIndicative":["riconosco","riconosci","riconosce","riconosciamo","riconoscete","riconoscono"],"presentConditional":["riconoscerei","riconosceresti","riconoscerebbe","riconosceremmo","riconoscereste","riconoscerebbero"],"impersonalForms":["riconoscere","riconoscente","riconoscendo","riconosciuto","avere riconosciuto","avendo riconosciuto","avente riconosciuto"],"pastIndicative":["ho riconosciuto","hai riconosciuto","ha riconosciuto","abbiamo riconosciuto","avete riconosciuto","hanno riconosciuto"],"futureIndicative":["riconoscer\\xF2","riconoscerai","riconoscer\\xE0","riconosceremo","riconoscerete","riconosceranno"]},{"futurePerfectIndicative":["avr\\xF2 ricordato","avrai ricordato","avr\\xE0 ricordato","avremo ricordato","avrete ricordato","avranno ricordato"],"presentSubjunctive":["ricordi","ricordi","ricordi","ricordiamo","ricordiate","ricordino"],"pastRemoteIndicative":["ricordai","ricordasti","ricord\\xF2","ricordammo","ricordaste","ricordarono"],"pluperfectIndicative":["avevo ricordato","avevi ricordato","aveva ricordato","avevamo ricordato","avevate ricordato","avevano ricordato"],"imperfectSubjunctive":["abbia ricordato","abbia ricordato","abbia ricordato","abbiamo ricordato","abbiate ricordato","abbiano ricordato"],"pastConditional":["avrei ricordato","avresti ricordato","avrebbe ricordato","avremmo ricordato","avreste ricordato","avrebbero ricordato"],"pastSubjunctive":["ricordassi","ricordassi","ricordasse","ricordassimo","ricordaste","ricordassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ricordato","avessi ricordato","avesse ricordato","avessimo ricordato","aveste ricordato","avessero ricordato"],"imperfectIndicative":["ricordavo","ricordavi","ricordava","ricordavamo","ricordavate","ricordavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ricordato","avesti ricordato","ebbe ricordato","avemmo ricordato","aveste ricordato","ebbero ricordato"],"verb":"ricordare","imperative":["ricorda","ricordi","ricordiamo","ricordate","ricordino"],"presentIndicative":["ricordo","ricordi","ricorda","ricordiamo","ricordate","ricordano"],"presentConditional":["ricorderei","ricorderesti","ricorderebbe","ricorderemmo","ricordereste","ricorderebbero"],"impersonalForms":["ricordare","ricordante","ricordando","ricordato","avere ricordato","avendo ricordato","avente ricordato"],"pastIndicative":["ho ricordato","hai ricordato","ha ricordato","abbiamo ricordato","avete ricordato","hanno ricordato"],"futureIndicative":["ricorder\\xF2","ricorderai","ricorder\\xE0","ricorderemo","ricorderete","ricorderanno"]},{"futurePerfectIndicative":["avr\\xF2 riso","avrai riso","avr\\xE0 riso","avremo riso","avrete riso","avranno riso"],"presentSubjunctive":["rida","rida","rida","ridiamo","ridiate","ridano"],"pastRemoteIndicative":["risi","ridesti","rise","ridemmo","rideste","risero"],"pluperfectIndicative":["avevo riso","avevi riso","aveva riso","avevamo riso","avevate riso","avevano riso"],"imperfectSubjunctive":["abbia riso","abbia riso","abbia riso","abbiamo riso","abbiate riso","abbiano riso"],"pastConditional":["avrei riso","avresti riso","avrebbe riso","avremmo riso","avreste riso","avrebbero riso"],"pastSubjunctive":["ridessi","ridessi","ridesse","ridessimo","rideste","ridessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi riso","avessi riso","avesse riso","avessimo riso","aveste riso","avessero riso"],"imperfectIndicative":["ridevo","ridevi","rideva","ridevamo","ridevate","ridevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi riso","avesti riso","ebbe riso","avemmo riso","aveste riso","ebbero riso"],"verb":"ridere","imperative":["ridi","rida","ridiamo","ridete","ridano"],"presentIndicative":["rido","ridi","ride","ridiamo","ridete","ridono"],"presentConditional":["riderei","rideresti","riderebbe","rideremmo","ridereste","riderebbero"],"impersonalForms":["ridere","ridente","ridendo","riso","avere riso","avendo riso","avente riso"],"pastIndicative":["ho riso","hai riso","ha riso","abbiamo riso","avete riso","hanno riso"],"futureIndicative":["rider\\xF2","riderai","rider\\xE0","rideremo","riderete","rideranno"]},{"futurePerfectIndicative":["avr\\xF2 riempiuto; riempito","avrai riempiuto; riempito","avr\\xE0 riempiuto; riempito","avremo riempiuto; riempito","avrete riempiuto; riempito","avranno riempiuto; riempito"],"presentSubjunctive":["riempia; riempisca","riempia; riempisca","riempia; riempisca","riempiiamo","riempiiate","riempiano; riempiscano"],"pastRemoteIndicative":["riempii","riempisti","riemp\\xEC","riempimmo","riempiste","riempirono"],"pluperfectIndicative":["avevo riempiuto; riempito","avevi riempiuto; riempito","aveva riempiuto; riempito","avevamo riempiuto; riempito","avevate riempiuto; riempito","avevano riempiuto; riempito"],"imperfectSubjunctive":["abbia riempiuto; riempito","abbia riempiuto; riempito","abbia riempiuto; riempito","abbiamo riempiuto; riempito","abbiate riempiuto; riempito","abbiano riempiuto; riempito"],"pastConditional":["avrei riempiuto; riempito","avresti riempiuto; riempito","avrebbe riempiuto; riempito","avremmo riempiuto; riempito","avreste riempiuto; riempito","avrebbero riempiuto; riempito"],"pastSubjunctive":["riempissi","riempissi","riempisse","riempissimo","riempiste","riempissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi riempiuto; riempito","avessi riempiuto; riempito","avesse riempiuto; riempito","avessimo riempiuto; riempito","aveste riempiuto; riempito","avessero riempiuto; riempito"],"imperfectIndicative":["riempivo; riempievo","riempivi; riempievi","riempiva; riempieva","riempivamo; riempievamo","riempivate; riempievate","riempivano; riempievano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi riempiuto; riempito","avesti riempiuto; riempito","ebbe riempiuto; riempito","avemmo riempiuto; riempito","aveste riempiuto; riempito","ebbero riempiuto; riempito"],"verb":"riempire","imperative":["riempi; riempisci","riempia; riempisca","riempiamo","riempiete","riempiano; riempiscano"],"presentIndicative":["riempio; riempisco","riempi; riempisci","riempie; riempisce","riempiamo","riempiete","riempiono; riempiscono"],"presentConditional":["riempirei","riempiresti","riempirebbe","riempiremmo","riempireste","riempirebbero"],"impersonalForms":["riempire; riempiere","riempiente","riempiendo","riempiuto; riempito","avere riempiuto; riempito","avendo riempiuto; riempito","avente riempiuto; riempito"],"pastIndicative":["ho riempiuto; riempito","hai riempiuto; riempito","ha riempiuto; riempito","abbiamo riempiuto; riempito","avete riempiuto; riempito","hanno riempiuto; riempito"],"futureIndicative":["riempir\\xF2","riempirai","riempir\\xE0","riempiremo","riempirete","riempiranno"]},{"futurePerfectIndicative":["sar\\xF2 rimasto; rimaso","sarai rimasto; rimaso","sar\\xE0 rimasto; rimaso","saremo rimasto; rimasi","sarete rimasto; rimasi","saranno rimasto; rimasi"],"presentSubjunctive":["rimanga","rimanga","rimanga","rimaniamo","rimaniate","rimangano"],"pastRemoteIndicative":["rimasi","rimanesti","rimase","rimanemmo","rimaneste","rimasero"],"pluperfectIndicative":["ero rimasto; rimaso","eri rimasto; rimaso","era rimasto; rimaso","eravamo rimasto; rimasi","eravate rimasto; rimasi","erano rimasto; rimasi"],"imperfectSubjunctive":["sia rimasto; rimaso","sia rimasto; rimaso","sia rimasto; rimaso","siamo rimasto; rimasi","siate rimasto; rimasi","siano rimasto; rimasi"],"pastConditional":["sarei rimasto; rimaso","saresti rimasto; rimaso","sarebbe rimasto; rimaso","saremmo rimasto; rimasi","sareste rimasto; rimasi","sarebbero rimasto; rimasi"],"pastSubjunctive":["rimanessi","rimanessi","rimanesse","rimanessimo","rimaneste","rimanessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi rimasto; rimaso","fossi rimasto; rimaso","fosse rimasto; rimaso","fossimo rimasto; rimasi","foste rimasto; rimasi","fossero rimasto; rimasi"],"imperfectIndicative":["rimanevo","rimanevi","rimaneva","rimanevamo","rimanevate","rimanevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui rimasto; rimaso","fosti rimasto; rimaso","fu rimasto; rimaso","fummo rimasto; rimasi","foste rimasto; rimasi","furono rimasto; rimasi"],"verb":"rimanere","imperative":["rimani","rimanga","rimaniamo","rimanete","rimangano"],"presentIndicative":["rimango","rimani","rimane","rimaniamo","rimanete","rimangono"],"presentConditional":["rimarrei","rimarresti","rimarrebbe","rimarremmo","rimarreste","rimarrebbero"],"impersonalForms":["rimanere","rimanente","rimanendo","rimasto; rimaso","essere rimasto; rimaso","essendo rimasto; rimaso","essente rimasto; rimaso"],"pastIndicative":["sono rimasto; rimaso","sei rimasto; rimaso","\\xE8 rimasto; rimaso","siamo rimasto; rimasi","siete rimasto; rimasi","sono rimasto; rimasi"],"futureIndicative":["rimarr\\xF2","rimarrai","rimarr\\xE0","rimarremo","rimarrete","rimarranno"]},{"futurePerfectIndicative":["avr\\xF2 ringraziato","avrai ringraziato","avr\\xE0 ringraziato","avremo ringraziato","avrete ringraziato","avranno ringraziato"],"presentSubjunctive":["ringrazi","ringrazi","ringrazi","ringraziamo","ringraziate","ringrazino"],"pastRemoteIndicative":["ringraziai","ringraziasti","ringrazi\\xF2","ringraziammo","ringraziaste","ringraziarono"],"pluperfectIndicative":["avevo ringraziato","avevi ringraziato","aveva ringraziato","avevamo ringraziato","avevate ringraziato","avevano ringraziato"],"imperfectSubjunctive":["abbia ringraziato","abbia ringraziato","abbia ringraziato","abbiamo ringraziato","abbiate ringraziato","abbiano ringraziato"],"pastConditional":["avrei ringraziato","avresti ringraziato","avrebbe ringraziato","avremmo ringraziato","avreste ringraziato","avrebbero ringraziato"],"pastSubjunctive":["ringraziassi","ringraziassi","ringraziasse","ringraziassimo","ringraziaste","ringraziassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi ringraziato","avessi ringraziato","avesse ringraziato","avessimo ringraziato","aveste ringraziato","avessero ringraziato"],"imperfectIndicative":["ringraziavo","ringraziavi","ringraziava","ringraziavamo","ringraziavate","ringraziavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi ringraziato","avesti ringraziato","ebbe ringraziato","avemmo ringraziato","aveste ringraziato","ebbero ringraziato"],"verb":"ringraziare","imperative":["ringrazia","ringrazi","ringraziamo","ringraziate","ringrazino"],"presentIndicative":["ringrazio","ringrazi","ringrazia","ringraziamo","ringraziate","ringraziano"],"presentConditional":["ringrazierei","ringrazieresti","ringrazierebbe","ringrazieremmo","ringraziereste","ringrazierebbero"],"impersonalForms":["ringraziare","ringraziante","ringraziando","ringraziato","avere ringraziato","avendo ringraziato","avente ringraziato"],"pastIndicative":["ho ringraziato","hai ringraziato","ha ringraziato","abbiamo ringraziato","avete ringraziato","hanno ringraziato"],"futureIndicative":["ringrazier\\xF2","ringrazierai","ringrazier\\xE0","ringrazieremo","ringrazierete","ringrazieranno"]},{"futurePerfectIndicative":["avr\\xF2 riparato","avrai riparato","avr\\xE0 riparato","avremo riparato","avrete riparato","avranno riparato"],"presentSubjunctive":["ripari","ripari","ripari","ripariamo","ripariate","riparino"],"pastRemoteIndicative":["riparai","riparasti","ripar\\xF2","riparammo","riparaste","ripararono"],"pluperfectIndicative":["avevo riparato","avevi riparato","aveva riparato","avevamo riparato","avevate riparato","avevano riparato"],"imperfectSubjunctive":["abbia riparato","abbia riparato","abbia riparato","abbiamo riparato","abbiate riparato","abbiano riparato"],"pastConditional":["avrei riparato","avresti riparato","avrebbe riparato","avremmo riparato","avreste riparato","avrebbero riparato"],"pastSubjunctive":["riparassi","riparassi","riparasse","riparassimo","riparaste","riparassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi riparato","avessi riparato","avesse riparato","avessimo riparato","aveste riparato","avessero riparato"],"imperfectIndicative":["riparavo","riparavi","riparava","riparavamo","riparavate","riparavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi riparato","avesti riparato","ebbe riparato","avemmo riparato","aveste riparato","ebbero riparato"],"verb":"riparare","imperative":["ripara","ripari","ripariamo","riparate","riparino"],"presentIndicative":["riparo","ripari","ripara","ripariamo","riparate","riparano"],"presentConditional":["riparerei","ripareresti","riparerebbe","ripareremmo","riparereste","riparerebbero"],"impersonalForms":["riparare","riparante","riparando","riparato","avere riparato","avendo riparato","avente riparato"],"pastIndicative":["ho riparato","hai riparato","ha riparato","abbiamo riparato","avete riparato","hanno riparato"],"futureIndicative":["riparer\\xF2","riparerai","riparer\\xE0","ripareremo","riparerete","ripareranno"]},{"futurePerfectIndicative":["avr\\xF2 riposato","avrai riposato","avr\\xE0 riposato","avremo riposato","avrete riposato","avranno riposato"],"presentSubjunctive":["riposi","riposi","riposi","riposiamo","riposiate","riposino"],"pastRemoteIndicative":["riposai","riposasti","ripos\\xF2","riposammo","riposaste","riposarono"],"pluperfectIndicative":["avevo riposato","avevi riposato","aveva riposato","avevamo riposato","avevate riposato","avevano riposato"],"imperfectSubjunctive":["abbia riposato","abbia riposato","abbia riposato","abbiamo riposato","abbiate riposato","abbiano riposato"],"pastConditional":["avrei riposato","avresti riposato","avrebbe riposato","avremmo riposato","avreste riposato","avrebbero riposato"],"pastSubjunctive":["riposassi","riposassi","riposasse","riposassimo","riposaste","riposassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi riposato","avessi riposato","avesse riposato","avessimo riposato","aveste riposato","avessero riposato"],"imperfectIndicative":["riposavo","riposavi","riposava","riposavamo","riposavate","riposavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi riposato","avesti riposato","ebbe riposato","avemmo riposato","aveste riposato","ebbero riposato"],"verb":"riposare","imperative":["riposa","riposi","riposiamo","riposate","riposino"],"presentIndicative":["riposo","riposi","riposa","riposiamo","riposate","riposano"],"presentConditional":["riposerei","riposeresti","riposerebbe","riposeremmo","riposereste","riposerebbero"],"impersonalForms":["riposare","riposante","riposando","riposato","avere riposato","avendo riposato","avente riposato"],"pastIndicative":["ho riposato","hai riposato","ha riposato","abbiamo riposato","avete riposato","hanno riposato"],"futureIndicative":["riposer\\xF2","riposerai","riposer\\xE0","riposeremo","riposerete","riposeranno"]},{"futurePerfectIndicative":["avr\\xF2 risposto","avrai risposto","avr\\xE0 risposto","avremo risposto","avrete risposto","avranno risposto"],"presentSubjunctive":["risponda","risponda","risponda","rispondiamo","rispondiate","rispondano"],"pastRemoteIndicative":["risposi","rispondesti","rispose","rispondemmo","rispondeste","risposero"],"pluperfectIndicative":["avevo risposto","avevi risposto","aveva risposto","avevamo risposto","avevate risposto","avevano risposto"],"imperfectSubjunctive":["abbia risposto","abbia risposto","abbia risposto","abbiamo risposto","abbiate risposto","abbiano risposto"],"pastConditional":["avrei risposto","avresti risposto","avrebbe risposto","avremmo risposto","avreste risposto","avrebbero risposto"],"pastSubjunctive":["rispondessi","rispondessi","rispondesse","rispondessimo","rispondeste","rispondessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi risposto","avessi risposto","avesse risposto","avessimo risposto","aveste risposto","avessero risposto"],"imperfectIndicative":["rispondevo","rispondevi","rispondeva","rispondevamo","rispondevate","rispondevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi risposto","avesti risposto","ebbe risposto","avemmo risposto","aveste risposto","ebbero risposto"],"verb":"rispondere","imperative":["rispondi","risponda","rispondiamo","rispondete","rispondano"],"presentIndicative":["rispondo","rispondi","risponde","rispondiamo","rispondete","rispondono"],"presentConditional":["risponderei","risponderesti","risponderebbe","risponderemmo","rispondereste","risponderebbero"],"impersonalForms":["rispondere","rispondente","rispondendo","risposto","avere risposto","avendo risposto","avente risposto"],"pastIndicative":["ho risposto","hai risposto","ha risposto","abbiamo risposto","avete risposto","hanno risposto"],"futureIndicative":["risponder\\xF2","risponderai","risponder\\xE0","risponderemo","risponderete","risponderanno"]},{"futurePerfectIndicative":["sar\\xF2 ritornato","sarai ritornato","sar\\xE0 ritornato","saremo ritornati","sarete ritornati","saranno ritornati"],"presentSubjunctive":["ritorni","ritorni","ritorni","ritorniamo","ritorniate","ritornino"],"pastRemoteIndicative":["ritornai","ritornasti","ritorn\\xF2","ritornammo","ritornaste","ritornarono"],"pluperfectIndicative":["ero ritornato","eri ritornato","era ritornato","eravamo ritornati","eravate ritornati","erano ritornati"],"imperfectSubjunctive":["sia ritornato","sia ritornato","sia ritornato","siamo ritornati","siate ritornati","siano ritornati"],"pastConditional":["sarei ritornato","saresti ritornato","sarebbe ritornato","saremmo ritornati","sareste ritornati","sarebbero ritornati"],"pastSubjunctive":["ritornassi","ritornassi","ritornasse","ritornassimo","ritornaste","ritornassero"],"similarVerbs":"","pluperfectSubjunctive":["fossi ritornato","fossi ritornato","fosse ritornato","fossimo ritornati","foste ritornati","fossero ritornati"],"imperfectIndicative":["ritornavo","ritornavi","ritornava","ritornavamo","ritornavate","ritornavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui ritornato","fosti ritornato","fu ritornato","fummo ritornati","foste ritornati","furono ritornati"],"verb":"ritornare","imperative":["ritorna","ritorni","ritorniamo","ritornate","ritornino"],"presentIndicative":["ritorno","ritorni","ritorna","ritorniamo","ritornate","ritornano"],"presentConditional":["ritornerei","ritorneresti","ritornerebbe","ritorneremmo","ritornereste","ritornerebbero"],"impersonalForms":["ritornare","ritornante","ritornando","ritornato","essere ritornato","essendo ritornato","essente ritornato"],"pastIndicative":["sono ritornato","sei ritornato","\\xE8 ritornato","siamo ritornati","siete ritornati","sono ritornati"],"futureIndicative":["ritorner\\xF2","ritornerai","ritorner\\xE0","ritorneremo","ritornerete","ritorneranno"]},{"futurePerfectIndicative":["avr\\xF2 rotto","avrai rotto","avr\\xE0 rotto","avremo rotto","avrete rotto","avranno rotto"],"presentSubjunctive":["rompa","rompa","rompa","rompiamo","rompiate","rompano"],"pastRemoteIndicative":["ruppi","rompesti","ruppe","rompemmo","rompeste","ruppero"],"pluperfectIndicative":["avevo rotto","avevi rotto","aveva rotto","avevamo rotto","avevate rotto","avevano rotto"],"imperfectSubjunctive":["abbia rotto","abbia rotto","abbia rotto","abbiamo rotto","abbiate rotto","abbiano rotto"],"pastConditional":["avrei rotto","avresti rotto","avrebbe rotto","avremmo rotto","avreste rotto","avrebbero rotto"],"pastSubjunctive":["rompessi","rompessi","rompesse","rompessimo","rompeste","rompessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi rotto","avessi rotto","avesse rotto","avessimo rotto","aveste rotto","avessero rotto"],"imperfectIndicative":["rompevo","rompevi","rompeva","rompevamo","rompevate","rompevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi rotto","avesti rotto","ebbe rotto","avemmo rotto","aveste rotto","ebbero rotto"],"verb":"rompere","imperative":["rompi","rompa","rompiamo","rompete","rompano"],"presentIndicative":["rompo","rompi","rompe","rompiamo","rompete","rompono"],"presentConditional":["romperei","romperesti","romperebbe","romperemmo","rompereste","romperebbero"],"impersonalForms":["rompere","rompente","rompendo","rotto","avere rotto","avendo rotto","avente rotto"],"pastIndicative":["ho rotto","hai rotto","ha rotto","abbiamo rotto","avete rotto","hanno rotto"],"futureIndicative":["romper\\xF2","romperai","romper\\xE0","romperemo","romperete","romperanno"]},{"futurePerfectIndicative":["avr\\xF2 rubato","avrai rubato","avr\\xE0 rubato","avremo rubato","avrete rubato","avranno rubato"],"presentSubjunctive":["rubi","rubi","rubi","rubiamo","rubiate","rubino"],"pastRemoteIndicative":["rubai","rubasti","rub\\xF2","rubammo","rubaste","rubarono"],"pluperfectIndicative":["avevo rubato","avevi rubato","aveva rubato","avevamo rubato","avevate rubato","avevano rubato"],"imperfectSubjunctive":["abbia rubato","abbia rubato","abbia rubato","abbiamo rubato","abbiate rubato","abbiano rubato"],"pastConditional":["avrei rubato","avresti rubato","avrebbe rubato","avremmo rubato","avreste rubato","avrebbero rubato"],"pastSubjunctive":["rubassi","rubassi","rubasse","rubassimo","rubaste","rubassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi rubato","avessi rubato","avesse rubato","avessimo rubato","aveste rubato","avessero rubato"],"imperfectIndicative":["rubavo","rubavi","rubava","rubavamo","rubavate","rubavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi rubato","avesti rubato","ebbe rubato","avemmo rubato","aveste rubato","ebbero rubato"],"verb":"rubare","imperative":["ruba","rubi","rubiamo","rubate","rubino"],"presentIndicative":["rubo","rubi","ruba","rubiamo","rubate","rubano"],"presentConditional":["ruberei","ruberesti","ruberebbe","ruberemmo","rubereste","ruberebbero"],"impersonalForms":["rubare","rubante","rubando","rubato","avere rubato","avendo rubato","avente rubato"],"pastIndicative":["ho rubato","hai rubato","ha rubato","abbiamo rubato","avete rubato","hanno rubato"],"futureIndicative":["ruber\\xF2","ruberai","ruber\\xE0","ruberemo","ruberete","ruberanno"]},{"futurePerfectIndicative":["avr\\xF2 saltato; sar\\xF2 saltato","avrai saltato; sarai saltato","avr\\xE0 saltato; sar\\xE0 saltato","avremo saltato; saremo saltati","avrete saltato; sarete saltati","avranno saltato; saranno saltati"],"presentSubjunctive":["salti","salti","salti","saltiamo","saltiate","saltino"],"pastRemoteIndicative":["saltai","saltasti","salt\\xF2","saltammo","saltaste","saltarono"],"pluperfectIndicative":["avevo saltato; ero saltato","avevi saltato; eri saltato","aveva saltato; era saltato","avevamo saltato; eravamo saltati","avevate saltato; eravate saltati","avevano saltato; erano saltati"],"imperfectSubjunctive":["abbia saltato; sia saltato","abbia saltato; sia saltato","abbia saltato; sia saltato","abbiamo saltato; siamo saltati","abbiate saltato; siate saltati","abbiano saltato; siano saltati"],"pastConditional":["avrei saltato; sarei saltato","avresti saltato; saresti saltato","avrebbe saltato; sarebbe saltato","avremmo saltato; saremmo saltati","avreste saltato; sareste saltati","avrebbero saltato; sarebbero saltati"],"pastSubjunctive":["saltassi","saltassi","saltasse","saltassimo","saltaste","saltassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi saltato; fossi saltato","avessi saltato; fossi saltato","avesse saltato; fosse saltato","avessimo saltato; fossimo saltati","aveste saltato; foste saltati","avessero saltato; fossero saltati"],"imperfectIndicative":["saltavo","saltavi","saltava","saltavamo","saltavate","saltavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi saltato; fui saltato","avesti saltato; fosti saltato","ebbe saltato; fu saltato","avemmo saltato; fummo saltati","aveste saltato; foste saltati","ebbero saltato; furono saltati"],"verb":"saltare","imperative":["salta","salti","saltiamo","saltate","saltino"],"presentIndicative":["salto","salti","salta","saltiamo","saltate","saltano"],"presentConditional":["salterei","salteresti","salterebbe","salteremmo","saltereste","salterebbero"],"impersonalForms":["saltare","saltante","saltando","saltato","avere saltato; essere saltato","avendo saltato; essendo saltato","avente saltato; essente saltato"],"pastIndicative":["ho saltato; sono saltato","hai saltato; sei saltato","ha saltato; \\xE8 saltato","abbiamo saltato; siamo saltati","avete saltato; siete saltati","hanno saltato; sono saltati"],"futureIndicative":["salter\\xF2","salterai","salter\\xE0","salteremo","salterete","salteranno"]},{"futurePerfectIndicative":["avr\\xF2 salvato","avrai salvato","avr\\xE0 salvato","avremo salvato","avrete salvato","avranno salvato"],"presentSubjunctive":["salvi","salvi","salvi","salviamo","salviate","salvino"],"pastRemoteIndicative":["salvai","salvasti","salv\\xF2","salvammo","salvaste","salvarono"],"pluperfectIndicative":["avevo salvato","avevi salvato","aveva salvato","avevamo salvato","avevate salvato","avevano salvato"],"imperfectSubjunctive":["abbia salvato","abbia salvato","abbia salvato","abbiamo salvato","abbiate salvato","abbiano salvato"],"pastConditional":["avrei salvato","avresti salvato","avrebbe salvato","avremmo salvato","avreste salvato","avrebbero salvato"],"pastSubjunctive":["salvassi","salvassi","salvasse","salvassimo","salvaste","salvassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi salvato","avessi salvato","avesse salvato","avessimo salvato","aveste salvato","avessero salvato"],"imperfectIndicative":["salvavo","salvavi","salvava","salvavamo","salvavate","salvavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi salvato","avesti salvato","ebbe salvato","avemmo salvato","aveste salvato","ebbero salvato"],"verb":"salvare","imperative":["salva","salvi","salviamo","salvate","salvino"],"presentIndicative":["salvo","salvi","salva","salviamo","salvate","salvano"],"presentConditional":["salverei","salveresti","salverebbe","salveremmo","salvereste","salverebbero"],"impersonalForms":["salvare","salvante","salvando","salvato","avere salvato","avendo salvato","avente salvato"],"pastIndicative":["ho salvato","hai salvato","ha salvato","abbiamo salvato","avete salvato","hanno salvato"],"futureIndicative":["salver\\xF2","salverai","salver\\xE0","salveremo","salverete","salveranno"]},{"futurePerfectIndicative":["avr\\xF2 saputo","avrai saputo","avr\\xE0 saputo","avremo saputo","avrete saputo","avranno saputo"],"presentSubjunctive":["sappia","sappia","sappia","sappiamo","sappiate","sappiano"],"pastRemoteIndicative":["seppi","sapesti","seppe","sapemmo","sapeste","seppero"],"pluperfectIndicative":["avevo saputo","avevi saputo","aveva saputo","avevamo saputo","avevate saputo","avevano saputo"],"imperfectSubjunctive":["abbia saputo","abbia saputo","abbia saputo","abbiamo saputo","abbiate saputo","abbiano saputo"],"pastConditional":["avrei saputo","avresti saputo","avrebbe saputo","avremmo saputo","avreste saputo","avrebbero saputo"],"pastSubjunctive":["sapessi","sapessi","sapesse","sapessimo","sapeste","sapessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi saputo","avessi saputo","avesse saputo","avessimo saputo","aveste saputo","avessero saputo"],"imperfectIndicative":["sapevo","sapevi","sapeva","sapevamo","sapevate","sapevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi saputo","avesti saputo","ebbe saputo","avemmo saputo","aveste saputo","ebbero saputo"],"verb":"sapere","imperative":["sappi","sappia","sappiamo","sapete","sappiano"],"presentIndicative":["so","sai","sa","sappiamo","sapete","sanno"],"presentConditional":["saprei","sapresti","saprebbe","sapremmo","sapreste","saprebbero"],"impersonalForms":["sapere","sapiente","sapendo","saputo","avere saputo","avendo saputo","avente saputo"],"pastIndicative":["ho saputo","hai saputo","ha saputo","abbiamo saputo","avete saputo","hanno saputo"],"futureIndicative":["sapr\\xF2","saprai","sapr\\xE0","sapremo","saprete","sapranno"]},{"futurePerfectIndicative":["avr\\xF2 scelto","avrai scelto","avr\\xE0 scelto","avremo scelto","avrete scelto","avranno scelto"],"presentSubjunctive":["scelga","scelga","scelga","scegliamo","scegliate","scelgano"],"pastRemoteIndicative":["scelsi","scegliesti","scelse","scegliemmo","sceglieste","scelsero"],"pluperfectIndicative":["avevo scelto","avevi scelto","aveva scelto","avevamo scelto","avevate scelto","avevano scelto"],"imperfectSubjunctive":["abbia scelto","abbia scelto","abbia scelto","abbiamo scelto","abbiate scelto","abbiano scelto"],"pastConditional":["avrei scelto","avresti scelto","avrebbe scelto","avremmo scelto","avreste scelto","avrebbero scelto"],"pastSubjunctive":["scegliessi","scegliessi","scegliesse","scegliessimo","sceglieste","scegliessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi scelto","avessi scelto","avesse scelto","avessimo scelto","aveste scelto","avessero scelto"],"imperfectIndicative":["sceglievo","sceglievi","sceglieva","sceglievamo","sceglievate","sceglievano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi scelto","avesti scelto","ebbe scelto","avemmo scelto","aveste scelto","ebbero scelto"],"verb":"scegliere","imperative":["scegli","scelga","scegliamo","scegliete","scelgano"],"presentIndicative":["scelgo","scegli","sceglie","scegliamo","scegliete","scelgono"],"presentConditional":["sceglierei; scerrei","sceglieresti; scerresti","sceglierebbe; scerrebbe","sceglieremmo; scerremmo","scegliereste; scerreste","sceglierebbero; scerrebbero"],"impersonalForms":["scegliere","scegliente","scegliendo","scelto","avere scelto","avendo scelto","avente scelto"],"pastIndicative":["ho scelto","hai scelto","ha scelto","abbiamo scelto","avete scelto","hanno scelto"],"futureIndicative":["sceglier\\xF2; scerr\\xF2","sceglierai; scerrai","sceglier\\xE0; scerr\\xE0","sceglieremo; scerremo","sceglierete; scerrete","sceglieranno; scerranno"]},{"futurePerfectIndicative":["avr\\xF2 scritto","avrai scritto","avr\\xE0 scritto","avremo scritto","avrete scritto","avranno scritto"],"presentSubjunctive":["scriva","scriva","scriva","scriviamo","scriviate","scrivano"],"pastRemoteIndicative":["scrissi","scrivesti","scrisse","scrivemmo","scriveste","scrissero"],"pluperfectIndicative":["avevo scritto","avevi scritto","aveva scritto","avevamo scritto","avevate scritto","avevano scritto"],"imperfectSubjunctive":["abbia scritto","abbia scritto","abbia scritto","abbiamo scritto","abbiate scritto","abbiano scritto"],"pastConditional":["avrei scritto","avresti scritto","avrebbe scritto","avremmo scritto","avreste scritto","avrebbero scritto"],"pastSubjunctive":["scrivessi","scrivessi","scrivesse","scrivessimo","scriveste","scrivessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi scritto","avessi scritto","avesse scritto","avessimo scritto","aveste scritto","avessero scritto"],"imperfectIndicative":["scrivevo","scrivevi","scriveva","scrivevamo","scrivevate","scrivevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi scritto","avesti scritto","ebbe scritto","avemmo scritto","aveste scritto","ebbero scritto"],"verb":"scrivere","imperative":["scrivi","scriva","scriviamo","scrivete","scrivano"],"presentIndicative":["scrivo","scrivi","scrive","scriviamo","scrivete","scrivono"],"presentConditional":["scriverei","scriveresti","scriverebbe","scriveremmo","scrivereste","scriverebbero"],"impersonalForms":["scrivere","scrivente","scrivendo","scritto","avere scritto","avendo scritto","avente scritto"],"pastIndicative":["ho scritto","hai scritto","ha scritto","abbiamo scritto","avete scritto","hanno scritto"],"futureIndicative":["scriver\\xF2","scriverai","scriver\\xE0","scriveremo","scriverete","scriveranno"]},{"futurePerfectIndicative":["avr\\xF2 scusato","avrai scusato","avr\\xE0 scusato","avremo scusato","avrete scusato","avranno scusato"],"presentSubjunctive":["scusi","scusi","scusi","scusiamo","scusiate","scusino"],"pastRemoteIndicative":["scusai","scusasti","scus\\xF2","scusammo","scusaste","scusarono"],"pluperfectIndicative":["avevo scusato","avevi scusato","aveva scusato","avevamo scusato","avevate scusato","avevano scusato"],"imperfectSubjunctive":["abbia scusato","abbia scusato","abbia scusato","abbiamo scusato","abbiate scusato","abbiano scusato"],"pastConditional":["avrei scusato","avresti scusato","avrebbe scusato","avremmo scusato","avreste scusato","avrebbero scusato"],"pastSubjunctive":["scusassi","scusassi","scusasse","scusassimo","scusaste","scusassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi scusato","avessi scusato","avesse scusato","avessimo scusato","aveste scusato","avessero scusato"],"imperfectIndicative":["scusavo","scusavi","scusava","scusavamo","scusavate","scusavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi scusato","avesti scusato","ebbe scusato","avemmo scusato","aveste scusato","ebbero scusato"],"verb":"scusare","imperative":["scusa","scusi","scusiamo","scusate","scusino"],"presentIndicative":["scuso","scusi","scusa","scusiamo","scusate","scusano"],"presentConditional":["scuserei","scuseresti","scuserebbe","scuseremmo","scusereste","scuserebbero"],"impersonalForms":["scusare","scusante","scusando","scusato","avere scusato","avendo scusato","avente scusato"],"pastIndicative":["ho scusato","hai scusato","ha scusato","abbiamo scusato","avete scusato","hanno scusato"],"futureIndicative":["scuser\\xF2","scuserai","scuser\\xE0","scuseremo","scuserete","scuseranno"]},{"futurePerfectIndicative":["avr\\xF2 seduto; sar\\xF2 seduto","avrai seduto; sarai seduto","avr\\xE0 seduto; sar\\xE0 seduto","avremo seduto; saremo seduti","avrete seduto; sarete seduti","avranno seduto; saranno seduti"],"presentSubjunctive":["sieda; segga","sieda; segga","sieda; segga","sediamo","sediate","siedano; seggano"],"pastRemoteIndicative":["sedei; sedetti","sedesti","sed\\xE9; sedette","sedemmo","sedeste","sederono; sedettero"],"pluperfectIndicative":["avevo seduto; ero seduto","avevi seduto; eri seduto","aveva seduto; era seduto","avevamo seduto; eravamo seduti","avevate seduto; eravate seduti","avevano seduto; erano seduti"],"imperfectSubjunctive":["abbia seduto; sia seduto","abbia seduto; sia seduto","abbia seduto; sia seduto","abbiamo seduto; siamo seduti","abbiate seduto; siate seduti","abbiano seduto; siano seduti"],"pastConditional":["avrei seduto; sarei seduto","avresti seduto; saresti seduto","avrebbe seduto; sarebbe seduto","avremmo seduto; saremmo seduti","avreste seduto; sareste seduti","avrebbero seduto; sarebbero seduti"],"pastSubjunctive":["sedessi","sedessi","sedesse","sedessimo","sedeste","sedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi seduto; fossi seduto","avessi seduto; fossi seduto","avesse seduto; fosse seduto","avessimo seduto; fossimo seduti","aveste seduto; foste seduti","avessero seduto; fossero seduti"],"imperfectIndicative":["sedevo","sedevi","sedeva","sedevamo","sedevate","sedevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi seduto; fui seduto","avesti seduto; fosti seduto","ebbe seduto; fu seduto","avemmo seduto; fummo seduti","aveste seduto; foste seduti","ebbero seduto; furono seduti"],"verb":"sedere","imperative":["siedi","sieda; segga","sediamo","sedete","siedano; seggano"],"presentIndicative":["siedo; seggo","siedi","siede","sediamo","sedete","siedono; seggono"],"presentConditional":["sederei; siederei","sederesti; siederesti","sederebbe; siederebbe","sederemmo; siederemmo","sedereste; siedereste","sederebbero; siederebbero"],"impersonalForms":["sedere","sedente","sedendo; seggendo","seduto","avere seduto; essere seduto","avendo seduto; essendo seduto","avente seduto; essente seduto"],"pastIndicative":["ho seduto; sono seduto","hai seduto; sei seduto","ha seduto; \\xE8 seduto","abbiamo seduto; siamo seduti","avete seduto; siete seduti","hanno seduto; sono seduti"],"futureIndicative":["seder\\xF2; sieder\\xF2","sederai; siederai","seder\\xE0; sieder\\xE0","sederemo; siederemo","sederete; siederete","sederanno; siederanno"]},{"futurePerfectIndicative":["avr\\xF2 seguito; sar\\xF2 seguito","avrai seguito; sarai seguito","avr\\xE0 seguito; sar\\xE0 seguito","avremo seguito; saremo seguiti","avrete seguito; sarete seguiti","avranno seguito; saranno seguiti"],"presentSubjunctive":["segua","segua","segua","seguiamo","seguiate","seguano"],"pastRemoteIndicative":["seguii","seguisti","segu\\xEC","seguimmo","seguiste","seguirono"],"pluperfectIndicative":["avevo seguito; ero seguito","avevi seguito; eri seguito","aveva seguito; era seguito","avevamo seguito; eravamo seguiti","avevate seguito; eravate seguiti","avevano seguito; erano seguiti"],"imperfectSubjunctive":["abbia seguito; sia seguito","abbia seguito; sia seguito","abbia seguito; sia seguito","abbiamo seguito; siamo seguiti","abbiate seguito; siate seguiti","abbiano seguito; siano seguiti"],"pastConditional":["avrei seguito; sarei seguito","avresti seguito; saresti seguito","avrebbe seguito; sarebbe seguito","avremmo seguito; saremmo seguiti","avreste seguito; sareste seguiti","avrebbero seguito; sarebbero seguiti"],"pastSubjunctive":["seguissi","seguissi","seguisse","seguissimo","seguiste","seguissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi seguito; fossi seguito","avessi seguito; fossi seguito","avesse seguito; fosse seguito","avessimo seguito; fossimo seguiti","aveste seguito; foste seguiti","avessero seguito; fossero seguiti"],"imperfectIndicative":["seguivo","seguivi","seguiva","seguivamo","seguivate","seguivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi seguito; fui seguito","avesti seguito; fosti seguito","ebbe seguito; fu seguito","avemmo seguito; fummo seguiti","aveste seguito; foste seguiti","ebbero seguito; furono seguiti"],"verb":"seguire","imperative":["segui","segua","seguiamo","seguite","seguano"],"presentIndicative":["seguo","segui","segue","seguiamo","seguite","seguono"],"presentConditional":["seguirei","seguiresti","seguirebbe","seguiremmo","seguireste","seguirebbero"],"impersonalForms":["seguire","seguente","seguendo","seguito","avere seguito; essere seguito","avendo seguito; essendo seguito","avente seguito; essente seguito"],"pastIndicative":["ho seguito; sono seguito","hai seguito; sei seguito","ha seguito; \\xE8 seguito","abbiamo seguito; siamo seguiti","avete seguito; siete seguiti","hanno seguito; sono seguiti"],"futureIndicative":["seguir\\xF2","seguirai","seguir\\xE0","seguiremo","seguirete","seguiranno"]},{"futurePerfectIndicative":["avr\\xF2 sentito; sar\\xF2 sentito","avrai sentito; sarai sentito","avr\\xE0 sentito; sar\\xE0 sentito","avremo sentito; saremo sentiti","avrete sentito; sarete sentiti","avranno sentito; saranno sentiti"],"presentSubjunctive":["senta","senta","senta","sentiamo","sentiate","sentano"],"pastRemoteIndicative":["sentii","sentisti","sent\\xEC","sentimmo","sentiste","sentirono"],"pluperfectIndicative":["avevo sentito; ero sentito","avevi sentito; eri sentito","aveva sentito; era sentito","avevamo sentito; eravamo sentiti","avevate sentito; eravate sentiti","avevano sentito; erano sentiti"],"imperfectSubjunctive":["abbia sentito; sia sentito","abbia sentito; sia sentito","abbia sentito; sia sentito","abbiamo sentito; siamo sentiti","abbiate sentito; siate sentiti","abbiano sentito; siano sentiti"],"pastConditional":["avrei sentito; sarei sentito","avresti sentito; saresti sentito","avrebbe sentito; sarebbe sentito","avremmo sentito; saremmo sentiti","avreste sentito; sareste sentiti","avrebbero sentito; sarebbero sentiti"],"pastSubjunctive":["sentissi","sentissi","sentisse","sentissimo","sentiste","sentissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi sentito; fossi sentito","avessi sentito; fossi sentito","avesse sentito; fosse sentito","avessimo sentito; fossimo sentiti","aveste sentito; foste sentiti","avessero sentito; fossero sentiti"],"imperfectIndicative":["sentivo","sentivi","sentiva","sentivamo","sentivate","sentivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi sentito; fui sentito","avesti sentito; fosti sentito","ebbe sentito; fu sentito","avemmo sentito; fummo sentiti","aveste sentito; foste sentiti","ebbero sentito; furono sentiti"],"verb":"sentire","imperative":["senti","senta","sentiamo","sentite","sentano"],"presentIndicative":["sento","senti","sente","sentiamo","sentite","sentono"],"presentConditional":["sentirei","sentiresti","sentirebbe","sentiremmo","sentireste","sentirebbero"],"impersonalForms":["sentire","sentente","sentendo","sentito","avere sentito; essere sentito","avendo sentito; essendo sentito","avente sentito; essente sentito"],"pastIndicative":["ho sentito; sono sentito","hai sentito; sei sentito","ha sentito; \\xE8 sentito","abbiamo sentito; siamo sentiti","avete sentito; siete sentiti","hanno sentito; sono sentiti"],"futureIndicative":["sentir\\xF2","sentirai","sentir\\xE0","sentiremo","sentirete","sentiranno"]},{"futurePerfectIndicative":["avr\\xF2 significato","avrai significato","avr\\xE0 significato","avremo significato","avrete significato","avranno significato"],"presentSubjunctive":["significhi","significhi","significhi","significhiamo","significhiate","significhino"],"pastRemoteIndicative":["significai","significasti","signific\\xF2","significammo","significaste","significarono"],"pluperfectIndicative":["avevo significato","avevi significato","aveva significato","avevamo significato","avevate significato","avevano significato"],"imperfectSubjunctive":["abbia significato","abbia significato","abbia significato","abbiamo significato","abbiate significato","abbiano significato"],"pastConditional":["avrei significato","avresti significato","avrebbe significato","avremmo significato","avreste significato","avrebbero significato"],"pastSubjunctive":["significassi","significassi","significasse","significassimo","significaste","significassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi significato","avessi significato","avesse significato","avessimo significato","aveste significato","avessero significato"],"imperfectIndicative":["significavo","significavi","significava","significavamo","significavate","significavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi significato","avesti significato","ebbe significato","avemmo significato","aveste significato","ebbero significato"],"verb":"significare","imperative":["significa","significhi","significhiamo","significate","significhino"],"presentIndicative":["significo","significhi","significa","significhiamo","significate","significano"],"presentConditional":["significherei","significheresti","significherebbe","significheremmo","significhereste","significherebbero"],"impersonalForms":["significare","significante","significando","significato","avere significato","avendo significato","avente significato"],"pastIndicative":["ho significato","hai significato","ha significato","abbiamo significato","avete significato","hanno significato"],"futureIndicative":["significher\\xF2","significherai","significher\\xE0","significheremo","significherete","significheranno"]},{"futurePerfectIndicative":["avr\\xF2 sognato","avrai sognato","avr\\xE0 sognato","avremo sognato","avrete sognato","avranno sognato"],"presentSubjunctive":["sogni","sogni","sogni","sogniamo","sogniate","sognino"],"pastRemoteIndicative":["sognai","sognasti","sogn\\xF2","sognammo","sognaste","sognarono"],"pluperfectIndicative":["avevo sognato","avevi sognato","aveva sognato","avevamo sognato","avevate sognato","avevano sognato"],"imperfectSubjunctive":["abbia sognato","abbia sognato","abbia sognato","abbiamo sognato","abbiate sognato","abbiano sognato"],"pastConditional":["avrei sognato","avresti sognato","avrebbe sognato","avremmo sognato","avreste sognato","avrebbero sognato"],"pastSubjunctive":["sognassi","sognassi","sognasse","sognassimo","sognaste","sognassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi sognato","avessi sognato","avesse sognato","avessimo sognato","aveste sognato","avessero sognato"],"imperfectIndicative":["sognavo","sognavi","sognava","sognavamo","sognavate","sognavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi sognato","avesti sognato","ebbe sognato","avemmo sognato","aveste sognato","ebbero sognato"],"verb":"sognare","imperative":["sogna","sogni","sogniamo","sognate","sognino"],"presentIndicative":["sogno","sogni","sogna","sogniamo","sognate","sognano"],"presentConditional":["sognerei","sogneresti","sognerebbe","sogneremmo","sognereste","sognerebbero"],"impersonalForms":["sognare","sognante","sognando","sognato","avere sognato","avendo sognato","avente sognato"],"pastIndicative":["ho sognato","hai sognato","ha sognato","abbiamo sognato","avete sognato","hanno sognato"],"futureIndicative":["sogner\\xF2","sognerai","sogner\\xE0","sogneremo","sognerete","sogneranno"]},{"futurePerfectIndicative":["avr\\xF2 sorriso","avrai sorriso","avr\\xE0 sorriso","avremo sorriso","avrete sorriso","avranno sorriso"],"presentSubjunctive":["sorrida","sorrida","sorrida","sorridiamo","sorridiate","sorridano"],"pastRemoteIndicative":["sorrisi","sorridesti","sorrise","sorridemmo","sorrideste","sorrisero"],"pluperfectIndicative":["avevo sorriso","avevi sorriso","aveva sorriso","avevamo sorriso","avevate sorriso","avevano sorriso"],"imperfectSubjunctive":["abbia sorriso","abbia sorriso","abbia sorriso","abbiamo sorriso","abbiate sorriso","abbiano sorriso"],"pastConditional":["avrei sorriso","avresti sorriso","avrebbe sorriso","avremmo sorriso","avreste sorriso","avrebbero sorriso"],"pastSubjunctive":["sorridessi","sorridessi","sorridesse","sorridessimo","sorrideste","sorridessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi sorriso","avessi sorriso","avesse sorriso","avessimo sorriso","aveste sorriso","avessero sorriso"],"imperfectIndicative":["sorridevo","sorridevi","sorrideva","sorridevamo","sorridevate","sorridevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi sorriso","avesti sorriso","ebbe sorriso","avemmo sorriso","aveste sorriso","ebbero sorriso"],"verb":"sorridere","imperative":["sorridi","sorrida","sorridiamo","sorridete","sorridano"],"presentIndicative":["sorrido","sorridi","sorride","sorridiamo","sorridete","sorridono"],"presentConditional":["sorriderei","sorrideresti","sorriderebbe","sorrideremmo","sorridereste","sorriderebbero"],"impersonalForms":["sorridere","sorridente","sorridendo","sorriso","avere sorriso","avendo sorriso","avente sorriso"],"pastIndicative":["ho sorriso","hai sorriso","ha sorriso","abbiamo sorriso","avete sorriso","hanno sorriso"],"futureIndicative":["sorrider\\xF2","sorriderai","sorrider\\xE0","sorrideremo","sorriderete","sorrideranno"]},{"futurePerfectIndicative":["avr\\xF2 spaventato","avrai spaventato","avr\\xE0 spaventato","avremo spaventato","avrete spaventato","avranno spaventato"],"presentSubjunctive":["spaventi","spaventi","spaventi","spaventiamo","spaventiate","spaventino"],"pastRemoteIndicative":["spaventai","spaventasti","spavent\\xF2","spaventammo","spaventaste","spaventarono"],"pluperfectIndicative":["avevo spaventato","avevi spaventato","aveva spaventato","avevamo spaventato","avevate spaventato","avevano spaventato"],"imperfectSubjunctive":["abbia spaventato","abbia spaventato","abbia spaventato","abbiamo spaventato","abbiate spaventato","abbiano spaventato"],"pastConditional":["avrei spaventato","avresti spaventato","avrebbe spaventato","avremmo spaventato","avreste spaventato","avrebbero spaventato"],"pastSubjunctive":["spaventassi","spaventassi","spaventasse","spaventassimo","spaventaste","spaventassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi spaventato","avessi spaventato","avesse spaventato","avessimo spaventato","aveste spaventato","avessero spaventato"],"imperfectIndicative":["spaventavo","spaventavi","spaventava","spaventavamo","spaventavate","spaventavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi spaventato","avesti spaventato","ebbe spaventato","avemmo spaventato","aveste spaventato","ebbero spaventato"],"verb":"spaventare","imperative":["spaventa","spaventi","spaventiamo","spaventate","spaventino"],"presentIndicative":["spavento","spaventi","spaventa","spaventiamo","spaventate","spaventano"],"presentConditional":["spaventerei","spaventeresti","spaventerebbe","spaventeremmo","spaventereste","spaventerebbero"],"impersonalForms":["spaventare","spaventante","spaventando","spaventato","avere spaventato","avendo spaventato","avente spaventato"],"pastIndicative":["ho spaventato","hai spaventato","ha spaventato","abbiamo spaventato","avete spaventato","hanno spaventato"],"futureIndicative":["spaventer\\xF2","spaventerai","spaventer\\xE0","spaventeremo","spaventerete","spaventeranno"]},{"futurePerfectIndicative":["avr\\xF2 spiegato","avrai spiegato","avr\\xE0 spiegato","avremo spiegato","avrete spiegato","avranno spiegato"],"presentSubjunctive":["spieghi","spieghi","spieghi","spieghiamo","spieghiate","spieghino"],"pastRemoteIndicative":["spiegai","spiegasti","spieg\\xF2","spiegammo","spiegaste","spiegarono"],"pluperfectIndicative":["avevo spiegato","avevi spiegato","aveva spiegato","avevamo spiegato","avevate spiegato","avevano spiegato"],"imperfectSubjunctive":["abbia spiegato","abbia spiegato","abbia spiegato","abbiamo spiegato","abbiate spiegato","abbiano spiegato"],"pastConditional":["avrei spiegato","avresti spiegato","avrebbe spiegato","avremmo spiegato","avreste spiegato","avrebbero spiegato"],"pastSubjunctive":["spiegassi","spiegassi","spiegasse","spiegassimo","spiegaste","spiegassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi spiegato","avessi spiegato","avesse spiegato","avessimo spiegato","aveste spiegato","avessero spiegato"],"imperfectIndicative":["spiegavo","spiegavi","spiegava","spiegavamo","spiegavate","spiegavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi spiegato","avesti spiegato","ebbe spiegato","avemmo spiegato","aveste spiegato","ebbero spiegato"],"verb":"spiegare","imperative":["spiega","spieghi","spieghiamo","spiegate","spieghino"],"presentIndicative":["spiego","spieghi","spiega","spieghiamo","spiegate","spiegano"],"presentConditional":["spiegherei","spiegheresti","spiegherebbe","spiegheremmo","spieghereste","spiegherebbero"],"impersonalForms":["spiegare","spiegante","spiegando","spiegato","avere spiegato","avendo spiegato","avente spiegato"],"pastIndicative":["ho spiegato","hai spiegato","ha spiegato","abbiamo spiegato","avete spiegato","hanno spiegato"],"futureIndicative":["spiegher\\xF2","spiegherai","spiegher\\xE0","spiegheremo","spiegherete","spiegheranno"]},{"futurePerfectIndicative":["avr\\xF2 spinto","avrai spinto","avr\\xE0 spinto","avremo spinto","avrete spinto","avranno spinto"],"presentSubjunctive":["spinga","spinga","spinga","spingiamo","spingiate","spingano"],"pastRemoteIndicative":["spinsi","spingesti","spinse","spingemmo","spingeste","spinsero"],"pluperfectIndicative":["avevo spinto","avevi spinto","aveva spinto","avevamo spinto","avevate spinto","avevano spinto"],"imperfectSubjunctive":["abbia spinto","abbia spinto","abbia spinto","abbiamo spinto","abbiate spinto","abbiano spinto"],"pastConditional":["avrei spinto","avresti spinto","avrebbe spinto","avremmo spinto","avreste spinto","avrebbero spinto"],"pastSubjunctive":["spingessi","spingessi","spingesse","spingessimo","spingeste","spingessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi spinto","avessi spinto","avesse spinto","avessimo spinto","aveste spinto","avessero spinto"],"imperfectIndicative":["spingevo","spingevi","spingeva","spingevamo","spingevate","spingevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi spinto","avesti spinto","ebbe spinto","avemmo spinto","aveste spinto","ebbero spinto"],"verb":"spingere","imperative":["spingi","spinga","spingiamo","spingete","spingano"],"presentIndicative":["spingo","spingi","spinge","spingiamo","spingete","spingono"],"presentConditional":["spingerei","spingeresti","spingerebbe","spingeremmo","spingereste","spingerebbero"],"impersonalForms":["spingere; spignere","spingente","spingendo","spinto","avere spinto","avendo spinto","avente spinto"],"pastIndicative":["ho spinto","hai spinto","ha spinto","abbiamo spinto","avete spinto","hanno spinto"],"futureIndicative":["spinger\\xF2","spingerai","spinger\\xE0","spingeremo","spingerete","spingeranno"]},{"futurePerfectIndicative":["avr\\xF2 spostato","avrai spostato","avr\\xE0 spostato","avremo spostato","avrete spostato","avranno spostato"],"presentSubjunctive":["sposti","sposti","sposti","spostiamo","spostiate","spostino"],"pastRemoteIndicative":["spostai","spostasti","spost\\xF2","spostammo","spostaste","spostarono"],"pluperfectIndicative":["avevo spostato","avevi spostato","aveva spostato","avevamo spostato","avevate spostato","avevano spostato"],"imperfectSubjunctive":["abbia spostato","abbia spostato","abbia spostato","abbiamo spostato","abbiate spostato","abbiano spostato"],"pastConditional":["avrei spostato","avresti spostato","avrebbe spostato","avremmo spostato","avreste spostato","avrebbero spostato"],"pastSubjunctive":["spostassi","spostassi","spostasse","spostassimo","spostaste","spostassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi spostato","avessi spostato","avesse spostato","avessimo spostato","aveste spostato","avessero spostato"],"imperfectIndicative":["spostavo","spostavi","spostava","spostavamo","spostavate","spostavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi spostato","avesti spostato","ebbe spostato","avemmo spostato","aveste spostato","ebbero spostato"],"verb":"spostare","imperative":["sposta","sposti","spostiamo","spostate","spostino"],"presentIndicative":["sposto","sposti","sposta","spostiamo","spostate","spostano"],"presentConditional":["sposterei","sposteresti","sposterebbe","sposteremmo","spostereste","sposterebbero"],"impersonalForms":["spostare","spostante","spostando","spostato","avere spostato","avendo spostato","avente spostato"],"pastIndicative":["ho spostato","hai spostato","ha spostato","abbiamo spostato","avete spostato","hanno spostato"],"futureIndicative":["sposter\\xF2","sposterai","sposter\\xE0","sposteremo","sposterete","sposteranno"]},{"futurePerfectIndicative":["avr\\xF2 stampato","avrai stampato","avr\\xE0 stampato","avremo stampato","avrete stampato","avranno stampato"],"presentSubjunctive":["stampi","stampi","stampi","stampiamo","stampiate","stampino"],"pastRemoteIndicative":["stampai","stampasti","stamp\\xF2","stampammo","stampaste","stamparono"],"pluperfectIndicative":["avevo stampato","avevi stampato","aveva stampato","avevamo stampato","avevate stampato","avevano stampato"],"imperfectSubjunctive":["abbia stampato","abbia stampato","abbia stampato","abbiamo stampato","abbiate stampato","abbiano stampato"],"pastConditional":["avrei stampato","avresti stampato","avrebbe stampato","avremmo stampato","avreste stampato","avrebbero stampato"],"pastSubjunctive":["stampassi","stampassi","stampasse","stampassimo","stampaste","stampassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi stampato","avessi stampato","avesse stampato","avessimo stampato","aveste stampato","avessero stampato"],"imperfectIndicative":["stampavo","stampavi","stampava","stampavamo","stampavate","stampavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi stampato","avesti stampato","ebbe stampato","avemmo stampato","aveste stampato","ebbero stampato"],"verb":"stampare","imperative":["stampa","stampi","stampiamo","stampate","stampino"],"presentIndicative":["stampo","stampi","stampa","stampiamo","stampate","stampano"],"presentConditional":["stamperei","stamperesti","stamperebbe","stamperemmo","stampereste","stamperebbero"],"impersonalForms":["stampare","stampante","stampando","stampato","avere stampato","avendo stampato","avente stampato"],"pastIndicative":["ho stampato","hai stampato","ha stampato","abbiamo stampato","avete stampato","hanno stampato"],"futureIndicative":["stamper\\xF2","stamperai","stamper\\xE0","stamperemo","stamperete","stamperanno"]},{"futurePerfectIndicative":["sar\\xF2 stato","sarai stato","sar\\xE0 stato","saremo stati","sarete stati","saranno stati"],"presentSubjunctive":["stia","stia","stia","stiamo","stiate","stiano"],"pastRemoteIndicative":["stetti","stesti","stette","stemmo","steste","stettero"],"pluperfectIndicative":["ero stato","eri stato","era stato","eravamo stati","eravate stati","erano stati"],"imperfectSubjunctive":["sia stato","sia stato","sia stato","siamo stati","siate stati","siano stati"],"pastConditional":["sarei stato","saresti stato","sarebbe stato","saremmo stati","sareste stati","sarebbero stati"],"pastSubjunctive":["stessi","stessi","stesse","stessimo","steste","stessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi stato","fossi stato","fosse stato","fossimo stati","foste stati","fossero stati"],"imperfectIndicative":["stavo","stavi","stava","stavamo","stavate","stavano"],"is_swadesh":true,"pluperfectRemoteIndicative":["fui stato","fosti stato","fu stato","fummo stati","foste stati","furono stati"],"verb":"stare","imperative":["sta\'; stai","stia","stiamo","state","stiano"],"presentIndicative":["sto","stai","sta","stiamo","state","stanno"],"presentConditional":["starei","staresti","starebbe","staremmo","stareste","starebbero"],"impersonalForms":["stare","stante","stando","stato","essere stato","essendo stato","essente stato"],"pastIndicative":["sono stato","sei stato","\\xE8 stato","siamo stati","siete stati","sono stati"],"futureIndicative":["star\\xF2","starai","star\\xE0","staremo","starete","staranno"]},{"futurePerfectIndicative":["avr\\xF2 studiato","avrai studiato","avr\\xE0 studiato","avremo studiato","avrete studiato","avranno studiato"],"presentSubjunctive":["studii","studii","studii","studiamo","studiate","studiino"],"pastRemoteIndicative":["studiai","studiasti","studi\\xF2","studiammo","studiaste","studiarono"],"pluperfectIndicative":["avevo studiato","avevi studiato","aveva studiato","avevamo studiato","avevate studiato","avevano studiato"],"imperfectSubjunctive":["abbia studiato","abbia studiato","abbia studiato","abbiamo studiato","abbiate studiato","abbiano studiato"],"pastConditional":["avrei studiato","avresti studiato","avrebbe studiato","avremmo studiato","avreste studiato","avrebbero studiato"],"pastSubjunctive":["studiassi","studiassi","studiasse","studiassimo","studiaste","studiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi studiato","avessi studiato","avesse studiato","avessimo studiato","aveste studiato","avessero studiato"],"imperfectIndicative":["studiavo","studiavi","studiava","studiavamo","studiavate","studiavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi studiato","avesti studiato","ebbe studiato","avemmo studiato","aveste studiato","ebbero studiato"],"verb":"studiare","imperative":["studia","studii","studiamo","studiate","studiino"],"presentIndicative":["studio","studii","studia","studiamo","studiate","studiano"],"presentConditional":["studierei","studieresti","studierebbe","studieremmo","studiereste","studierebbero"],"impersonalForms":["studiare","studiante","studiando","studiato","avere studiato","avendo studiato","avente studiato"],"pastIndicative":["ho studiato","hai studiato","ha studiato","abbiamo studiato","avete studiato","hanno studiato"],"futureIndicative":["studier\\xF2","studierai","studier\\xE0","studieremo","studierete","studieranno"]},{"futurePerfectIndicative":["sar\\xF2 succeduto; successo","sarai succeduto; successo","sar\\xE0 succeduto; successo","saremo succeduto; successi","sarete succeduto; successi","saranno succeduto; successi"],"presentSubjunctive":["succeda","succeda","succeda","succediamo","succediate","succedano"],"pastRemoteIndicative":["successi; succedei; succedetti","succedesti","successe; succed\\xE9; succedette","succedemmo","succedeste","successero; succederono; succedettero"],"pluperfectIndicative":["ero succeduto; successo","eri succeduto; successo","era succeduto; successo","eravamo succeduto; successi","eravate succeduto; successi","erano succeduto; successi"],"imperfectSubjunctive":["sia succeduto; successo","sia succeduto; successo","sia succeduto; successo","siamo succeduto; successi","siate succeduto; successi","siano succeduto; successi"],"pastConditional":["sarei succeduto; successo","saresti succeduto; successo","sarebbe succeduto; successo","saremmo succeduto; successi","sareste succeduto; successi","sarebbero succeduto; successi"],"pastSubjunctive":["succedessi","succedessi","succedesse","succedessimo","succedeste","succedessero"],"similarVerbs":"","pluperfectSubjunctive":["fossi succeduto; successo","fossi succeduto; successo","fosse succeduto; successo","fossimo succeduto; successi","foste succeduto; successi","fossero succeduto; successi"],"imperfectIndicative":["succedevo","succedevi","succedeva","succedevamo","succedevate","succedevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui succeduto; successo","fosti succeduto; successo","fu succeduto; successo","fummo succeduto; successi","foste succeduto; successi","furono succeduto; successi"],"verb":"succedere","imperative":["succedi","succeda","succediamo","succedete","succedano"],"presentIndicative":["succedo","succedi","succede","succediamo","succedete","succedono"],"presentConditional":["succederei","succederesti","succederebbe","succederemmo","succedereste","succederebbero"],"impersonalForms":["succedere","succedente","succedendo","succeduto; successo","essere succeduto; successo","essendo succeduto; successo","essente succeduto; successo"],"pastIndicative":["sono succeduto; successo","sei succeduto; successo","\\xE8 succeduto; successo","siamo succeduto; successi","siete succeduto; successi","sono succeduto; successi"],"futureIndicative":["succeder\\xF2","succederai","succeder\\xE0","succederemo","succederete","succederanno"]},{"futurePerfectIndicative":["avr\\xF2 suonato; sar\\xF2 suonato","avrai suonato; sarai suonato","avr\\xE0 suonato; sar\\xE0 suonato","avremo suonato; saremo suonati","avrete suonato; sarete suonati","avranno suonato; saranno suonati"],"presentSubjunctive":["suoni","suoni","suoni","suoniamo","suoniate","suonino"],"pastRemoteIndicative":["suonai","suonasti","suon\\xF2","suonammo","suonaste","suonarono"],"pluperfectIndicative":["avevo suonato; ero suonato","avevi suonato; eri suonato","aveva suonato; era suonato","avevamo suonato; eravamo suonati","avevate suonato; eravate suonati","avevano suonato; erano suonati"],"imperfectSubjunctive":["abbia suonato; sia suonato","abbia suonato; sia suonato","abbia suonato; sia suonato","abbiamo suonato; siamo suonati","abbiate suonato; siate suonati","abbiano suonato; siano suonati"],"pastConditional":["avrei suonato; sarei suonato","avresti suonato; saresti suonato","avrebbe suonato; sarebbe suonato","avremmo suonato; saremmo suonati","avreste suonato; sareste suonati","avrebbero suonato; sarebbero suonati"],"pastSubjunctive":["suonassi","suonassi","suonasse","suonassimo","suonaste","suonassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi suonato; fossi suonato","avessi suonato; fossi suonato","avesse suonato; fosse suonato","avessimo suonato; fossimo suonati","aveste suonato; foste suonati","avessero suonato; fossero suonati"],"imperfectIndicative":["suonavo","suonavi","suonava","suonavamo","suonavate","suonavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi suonato; fui suonato","avesti suonato; fosti suonato","ebbe suonato; fu suonato","avemmo suonato; fummo suonati","aveste suonato; foste suonati","ebbero suonato; furono suonati"],"verb":"suonare","imperative":["suona","suoni","suoniamo","suonate","suonino"],"presentIndicative":["suono","suoni","suona","suoniamo","suonate","suonano"],"presentConditional":["suonerei","suoneresti","suonerebbe","suoneremmo","suonereste","suonerebbero"],"impersonalForms":["suonare; sonare","suonante","suonando","suonato","avere suonato; essere suonato","avendo suonato; essendo suonato","avente suonato; essente suonato"],"pastIndicative":["ho suonato; sono suonato","hai suonato; sei suonato","ha suonato; \\xE8 suonato","abbiamo suonato; siamo suonati","avete suonato; siete suonati","hanno suonato; sono suonati"],"futureIndicative":["suoner\\xF2","suonerai","suoner\\xE0","suoneremo","suonerete","suoneranno"]},{"futurePerfectIndicative":["avr\\xF2 supposto","avrai supposto","avr\\xE0 supposto","avremo supposto","avrete supposto","avranno supposto"],"presentSubjunctive":["supponga","supponga","supponga","supponiamo","supponiate","suppongano"],"pastRemoteIndicative":["supposi","supponesti","suppose","supponemmo","supponeste","supposero"],"pluperfectIndicative":["avevo supposto","avevi supposto","aveva supposto","avevamo supposto","avevate supposto","avevano supposto"],"imperfectSubjunctive":["abbia supposto","abbia supposto","abbia supposto","abbiamo supposto","abbiate supposto","abbiano supposto"],"pastConditional":["avrei supposto","avresti supposto","avrebbe supposto","avremmo supposto","avreste supposto","avrebbero supposto"],"pastSubjunctive":["supponessi","supponessi","supponesse","supponessimo","supponeste","supponessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi supposto","avessi supposto","avesse supposto","avessimo supposto","aveste supposto","avessero supposto"],"imperfectIndicative":["supponevo","supponevi","supponeva","supponevamo","supponevate","supponevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi supposto","avesti supposto","ebbe supposto","avemmo supposto","aveste supposto","ebbero supposto"],"verb":"supporre","imperative":["supponi","supponga","supponiamo","supponete","suppongano"],"presentIndicative":["suppongo","supponi","suppone","supponiamo","supponete","suppongono"],"presentConditional":["supporrei","supporresti","supporrebbe","supporremmo","supporreste","supporrebbero"],"impersonalForms":["supporre","supponente","supponendo","supposto","avere supposto","avendo supposto","avente supposto"],"pastIndicative":["ho supposto","hai supposto","ha supposto","abbiamo supposto","avete supposto","hanno supposto"],"futureIndicative":["supporr\\xF2","supporrai","supporr\\xE0","supporremo","supporrete","supporranno"]},{"futurePerfectIndicative":["avr\\xF2 svuotato","avrai svuotato","avr\\xE0 svuotato","avremo svuotato","avrete svuotato","avranno svuotato"],"presentSubjunctive":["svuoti","svuoti","svuoti","svuotiamo","svuotiate","svuotino"],"pastRemoteIndicative":["svuotai","svuotasti","svuot\\xF2","svuotammo","svuotaste","svuotarono"],"pluperfectIndicative":["avevo svuotato","avevi svuotato","aveva svuotato","avevamo svuotato","avevate svuotato","avevano svuotato"],"imperfectSubjunctive":["abbia svuotato","abbia svuotato","abbia svuotato","abbiamo svuotato","abbiate svuotato","abbiano svuotato"],"pastConditional":["avrei svuotato","avresti svuotato","avrebbe svuotato","avremmo svuotato","avreste svuotato","avrebbero svuotato"],"pastSubjunctive":["svuotassi","svuotassi","svuotasse","svuotassimo","svuotaste","svuotassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi svuotato","avessi svuotato","avesse svuotato","avessimo svuotato","aveste svuotato","avessero svuotato"],"imperfectIndicative":["svuotavo","svuotavi","svuotava","svuotavamo","svuotavate","svuotavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi svuotato","avesti svuotato","ebbe svuotato","avemmo svuotato","aveste svuotato","ebbero svuotato"],"verb":"svuotare","imperative":["svuota","svuoti","svuotiamo","svuotate","svuotino"],"presentIndicative":["svuoto","svuoti","svuota","svuotiamo","svuotate","svuotano"],"presentConditional":["svuoterei","svuoteresti","svuoterebbe","svuoteremmo","svuotereste","svuoterebbero"],"impersonalForms":["svuotare; svotare","svuotante","svuotando","svuotato","avere svuotato","avendo svuotato","avente svuotato"],"pastIndicative":["ho svuotato","hai svuotato","ha svuotato","abbiamo svuotato","avete svuotato","hanno svuotato"],"futureIndicative":["svuoter\\xF2","svuoterai","svuoter\\xE0","svuoteremo","svuoterete","svuoteranno"]},{"futurePerfectIndicative":["avr\\xF2 tagliato","avrai tagliato","avr\\xE0 tagliato","avremo tagliato","avrete tagliato","avranno tagliato"],"presentSubjunctive":["tagli","tagli","tagli","tagliamo","tagliate","taglino"],"pastRemoteIndicative":["tagliai","tagliasti","tagli\\xF2","tagliammo","tagliaste","tagliarono"],"pluperfectIndicative":["avevo tagliato","avevi tagliato","aveva tagliato","avevamo tagliato","avevate tagliato","avevano tagliato"],"imperfectSubjunctive":["abbia tagliato","abbia tagliato","abbia tagliato","abbiamo tagliato","abbiate tagliato","abbiano tagliato"],"pastConditional":["avrei tagliato","avresti tagliato","avrebbe tagliato","avremmo tagliato","avreste tagliato","avrebbero tagliato"],"pastSubjunctive":["tagliassi","tagliassi","tagliasse","tagliassimo","tagliaste","tagliassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi tagliato","avessi tagliato","avesse tagliato","avessimo tagliato","aveste tagliato","avessero tagliato"],"imperfectIndicative":["tagliavo","tagliavi","tagliava","tagliavamo","tagliavate","tagliavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi tagliato","avesti tagliato","ebbe tagliato","avemmo tagliato","aveste tagliato","ebbero tagliato"],"verb":"tagliare","imperative":["taglia","tagli","tagliamo","tagliate","taglino"],"presentIndicative":["taglio","tagli","taglia","tagliamo","tagliate","tagliano"],"presentConditional":["taglierei","taglieresti","taglierebbe","taglieremmo","tagliereste","taglierebbero"],"impersonalForms":["tagliare","tagliante","tagliando","tagliato","avere tagliato","avendo tagliato","avente tagliato"],"pastIndicative":["ho tagliato","hai tagliato","ha tagliato","abbiamo tagliato","avete tagliato","hanno tagliato"],"futureIndicative":["taglier\\xF2","taglierai","taglier\\xE0","taglieremo","taglierete","taglieranno"]},{"futurePerfectIndicative":["avr\\xF2 telefonato","avrai telefonato","avr\\xE0 telefonato","avremo telefonato","avrete telefonato","avranno telefonato"],"presentSubjunctive":["telefoni","telefoni","telefoni","telefoniamo","telefoniate","telefonino"],"pastRemoteIndicative":["telefonai","telefonasti","telefon\\xF2","telefonammo","telefonaste","telefonarono"],"pluperfectIndicative":["avevo telefonato","avevi telefonato","aveva telefonato","avevamo telefonato","avevate telefonato","avevano telefonato"],"imperfectSubjunctive":["abbia telefonato","abbia telefonato","abbia telefonato","abbiamo telefonato","abbiate telefonato","abbiano telefonato"],"pastConditional":["avrei telefonato","avresti telefonato","avrebbe telefonato","avremmo telefonato","avreste telefonato","avrebbero telefonato"],"pastSubjunctive":["telefonassi","telefonassi","telefonasse","telefonassimo","telefonaste","telefonassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi telefonato","avessi telefonato","avesse telefonato","avessimo telefonato","aveste telefonato","avessero telefonato"],"imperfectIndicative":["telefonavo","telefonavi","telefonava","telefonavamo","telefonavate","telefonavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi telefonato","avesti telefonato","ebbe telefonato","avemmo telefonato","aveste telefonato","ebbero telefonato"],"verb":"telefonare","imperative":["telefona","telefoni","telefoniamo","telefonate","telefonino"],"presentIndicative":["telefono","telefoni","telefona","telefoniamo","telefonate","telefonano"],"presentConditional":["telefonerei","telefoneresti","telefonerebbe","telefoneremmo","telefonereste","telefonerebbero"],"impersonalForms":["telefonare","telefonante","telefonando","telefonato","avere telefonato","avendo telefonato","avente telefonato"],"pastIndicative":["ho telefonato","hai telefonato","ha telefonato","abbiamo telefonato","avete telefonato","hanno telefonato"],"futureIndicative":["telefoner\\xF2","telefonerai","telefoner\\xE0","telefoneremo","telefonerete","telefoneranno"]},{"futurePerfectIndicative":["avr\\xF2 tenuto","avrai tenuto","avr\\xE0 tenuto","avremo tenuto","avrete tenuto","avranno tenuto"],"presentSubjunctive":["tenga","tenga","tenga","teniamo","teniate","tengano"],"pastRemoteIndicative":["tenni","tenesti","tenne","tenemmo","teneste","tennero"],"pluperfectIndicative":["avevo tenuto","avevi tenuto","aveva tenuto","avevamo tenuto","avevate tenuto","avevano tenuto"],"imperfectSubjunctive":["abbia tenuto","abbia tenuto","abbia tenuto","abbiamo tenuto","abbiate tenuto","abbiano tenuto"],"pastConditional":["avrei tenuto","avresti tenuto","avrebbe tenuto","avremmo tenuto","avreste tenuto","avrebbero tenuto"],"pastSubjunctive":["tenessi","tenessi","tenesse","tenessimo","teneste","tenessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi tenuto","avessi tenuto","avesse tenuto","avessimo tenuto","aveste tenuto","avessero tenuto"],"imperfectIndicative":["tenevo","tenevi","teneva","tenevamo","tenevate","tenevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi tenuto","avesti tenuto","ebbe tenuto","avemmo tenuto","aveste tenuto","ebbero tenuto"],"verb":"tenere","imperative":["tieni","tenga","teniamo","tenete","tengano"],"presentIndicative":["tengo","tieni","tiene","teniamo","tenete","tengono"],"presentConditional":["terrei","terresti","terrebbe","terremmo","terreste","terrebbero"],"impersonalForms":["tenere","tenente","tenendo","tenuto","avere tenuto","avendo tenuto","avente tenuto"],"pastIndicative":["ho tenuto","hai tenuto","ha tenuto","abbiamo tenuto","avete tenuto","hanno tenuto"],"futureIndicative":["terr\\xF2","terrai","terr\\xE0","terremo","terrete","terranno"]},{"futurePerfectIndicative":["avr\\xF2 tentato","avrai tentato","avr\\xE0 tentato","avremo tentato","avrete tentato","avranno tentato"],"presentSubjunctive":["tenti","tenti","tenti","tentiamo","tentiate","tentino"],"pastRemoteIndicative":["tentai","tentasti","tent\\xF2","tentammo","tentaste","tentarono"],"pluperfectIndicative":["avevo tentato","avevi tentato","aveva tentato","avevamo tentato","avevate tentato","avevano tentato"],"imperfectSubjunctive":["abbia tentato","abbia tentato","abbia tentato","abbiamo tentato","abbiate tentato","abbiano tentato"],"pastConditional":["avrei tentato","avresti tentato","avrebbe tentato","avremmo tentato","avreste tentato","avrebbero tentato"],"pastSubjunctive":["tentassi","tentassi","tentasse","tentassimo","tentaste","tentassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi tentato","avessi tentato","avesse tentato","avessimo tentato","aveste tentato","avessero tentato"],"imperfectIndicative":["tentavo","tentavi","tentava","tentavamo","tentavate","tentavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi tentato","avesti tentato","ebbe tentato","avemmo tentato","aveste tentato","ebbero tentato"],"verb":"tentare","imperative":["tenta","tenti","tentiamo","tentate","tentino"],"presentIndicative":["tento","tenti","tenta","tentiamo","tentate","tentano"],"presentConditional":["tenterei","tenteresti","tenterebbe","tenteremmo","tentereste","tenterebbero"],"impersonalForms":["tentare","tentante","tentando","tentato","avere tentato","avendo tentato","avente tentato"],"pastIndicative":["ho tentato","hai tentato","ha tentato","abbiamo tentato","avete tentato","hanno tentato"],"futureIndicative":["tenter\\xF2","tenterai","tenter\\xE0","tenteremo","tenterete","tenteranno"]},{"futurePerfectIndicative":["avr\\xF2 tirato","avrai tirato","avr\\xE0 tirato","avremo tirato","avrete tirato","avranno tirato"],"presentSubjunctive":["tiri","tiri","tiri","tiriamo","tiriate","tirino"],"pastRemoteIndicative":["tirai","tirasti","tir\\xF2","tirammo","tiraste","tirarono"],"pluperfectIndicative":["avevo tirato","avevi tirato","aveva tirato","avevamo tirato","avevate tirato","avevano tirato"],"imperfectSubjunctive":["abbia tirato","abbia tirato","abbia tirato","abbiamo tirato","abbiate tirato","abbiano tirato"],"pastConditional":["avrei tirato","avresti tirato","avrebbe tirato","avremmo tirato","avreste tirato","avrebbero tirato"],"pastSubjunctive":["tirassi","tirassi","tirasse","tirassimo","tiraste","tirassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi tirato","avessi tirato","avesse tirato","avessimo tirato","aveste tirato","avessero tirato"],"imperfectIndicative":["tiravo","tiravi","tirava","tiravamo","tiravate","tiravano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi tirato","avesti tirato","ebbe tirato","avemmo tirato","aveste tirato","ebbero tirato"],"verb":"tirare","imperative":["tira","tiri","tiriamo","tirate","tirino"],"presentIndicative":["tiro","tiri","tira","tiriamo","tirate","tirano"],"presentConditional":["tirerei","tireresti","tirerebbe","tireremmo","tirereste","tirerebbero"],"impersonalForms":["tirare","tirante","tirando","tirato","avere tirato","avendo tirato","avente tirato"],"pastIndicative":["ho tirato","hai tirato","ha tirato","abbiamo tirato","avete tirato","hanno tirato"],"futureIndicative":["tirer\\xF2","tirerai","tirer\\xE0","tireremo","tirerete","tireranno"]},{"futurePerfectIndicative":["avr\\xF2 toccato; sar\\xF2 toccato","avrai toccato; sarai toccato","avr\\xE0 toccato; sar\\xE0 toccato","avremo toccato; saremo toccati","avrete toccato; sarete toccati","avranno toccato; saranno toccati"],"presentSubjunctive":["tocchi","tocchi","tocchi","tocchiamo","tocchiate","tocchino"],"pastRemoteIndicative":["toccai","toccasti","tocc\\xF2","toccammo","toccaste","toccarono"],"pluperfectIndicative":["avevo toccato; ero toccato","avevi toccato; eri toccato","aveva toccato; era toccato","avevamo toccato; eravamo toccati","avevate toccato; eravate toccati","avevano toccato; erano toccati"],"imperfectSubjunctive":["abbia toccato; sia toccato","abbia toccato; sia toccato","abbia toccato; sia toccato","abbiamo toccato; siamo toccati","abbiate toccato; siate toccati","abbiano toccato; siano toccati"],"pastConditional":["avrei toccato; sarei toccato","avresti toccato; saresti toccato","avrebbe toccato; sarebbe toccato","avremmo toccato; saremmo toccati","avreste toccato; sareste toccati","avrebbero toccato; sarebbero toccati"],"pastSubjunctive":["toccassi","toccassi","toccasse","toccassimo","toccaste","toccassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi toccato; fossi toccato","avessi toccato; fossi toccato","avesse toccato; fosse toccato","avessimo toccato; fossimo toccati","aveste toccato; foste toccati","avessero toccato; fossero toccati"],"imperfectIndicative":["toccavo","toccavi","toccava","toccavamo","toccavate","toccavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi toccato; fui toccato","avesti toccato; fosti toccato","ebbe toccato; fu toccato","avemmo toccato; fummo toccati","aveste toccato; foste toccati","ebbero toccato; furono toccati"],"verb":"toccare","imperative":["tocca","tocchi","tocchiamo","toccate","tocchino"],"presentIndicative":["tocco","tocchi","tocca","tocchiamo","toccate","toccano"],"presentConditional":["toccherei","toccheresti","toccherebbe","toccheremmo","tocchereste","toccherebbero"],"impersonalForms":["toccare","toccante","toccando","toccato","avere toccato; essere toccato","avendo toccato; essendo toccato","avente toccato; essente toccato"],"pastIndicative":["ho toccato; sono toccato","hai toccato; sei toccato","ha toccato; \\xE8 toccato","abbiamo toccato; siamo toccati","avete toccato; siete toccati","hanno toccato; sono toccati"],"futureIndicative":["toccher\\xF2","toccherai","toccher\\xE0","toccheremo","toccherete","toccheranno"]},{"futurePerfectIndicative":["avr\\xF2 trovato","avrai trovato","avr\\xE0 trovato","avremo trovato","avrete trovato","avranno trovato"],"presentSubjunctive":["trovi","trovi","trovi","troviamo","troviate","trovino"],"pastRemoteIndicative":["trovai","trovasti","trov\\xF2","trovammo","trovaste","trovarono"],"pluperfectIndicative":["avevo trovato","avevi trovato","aveva trovato","avevamo trovato","avevate trovato","avevano trovato"],"imperfectSubjunctive":["abbia trovato","abbia trovato","abbia trovato","abbiamo trovato","abbiate trovato","abbiano trovato"],"pastConditional":["avrei trovato","avresti trovato","avrebbe trovato","avremmo trovato","avreste trovato","avrebbero trovato"],"pastSubjunctive":["trovassi","trovassi","trovasse","trovassimo","trovaste","trovassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi trovato","avessi trovato","avesse trovato","avessimo trovato","aveste trovato","avessero trovato"],"imperfectIndicative":["trovavo","trovavi","trovava","trovavamo","trovavate","trovavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi trovato","avesti trovato","ebbe trovato","avemmo trovato","aveste trovato","ebbero trovato"],"verb":"trovare","imperative":["trova","trovi","troviamo","trovate","trovino"],"presentIndicative":["trovo","trovi","trova","troviamo","trovate","trovano"],"presentConditional":["troverei","troveresti","troverebbe","troveremmo","trovereste","troverebbero"],"impersonalForms":["trovare","trovante","trovando","trovato","avere trovato","avendo trovato","avente trovato"],"pastIndicative":["ho trovato","hai trovato","ha trovato","abbiamo trovato","avete trovato","hanno trovato"],"futureIndicative":["trover\\xF2","troverai","trover\\xE0","troveremo","troverete","troveranno"]},{"futurePerfectIndicative":["avr\\xF2 unito","avrai unito","avr\\xE0 unito","avremo unito","avrete unito","avranno unito"],"presentSubjunctive":["unisca","unisca","unisca","uniamo","uniate","uniscano"],"pastRemoteIndicative":["unii","unisti","un\\xEC","unimmo","uniste","unirono"],"pluperfectIndicative":["avevo unito","avevi unito","aveva unito","avevamo unito","avevate unito","avevano unito"],"imperfectSubjunctive":["abbia unito","abbia unito","abbia unito","abbiamo unito","abbiate unito","abbiano unito"],"pastConditional":["avrei unito","avresti unito","avrebbe unito","avremmo unito","avreste unito","avrebbero unito"],"pastSubjunctive":["unissi","unissi","unisse","unissimo","uniste","unissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi unito","avessi unito","avesse unito","avessimo unito","aveste unito","avessero unito"],"imperfectIndicative":["univo","univi","univa","univamo","univate","univano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi unito","avesti unito","ebbe unito","avemmo unito","aveste unito","ebbero unito"],"verb":"unire","imperative":["unisci","unisca","uniamo","unite","uniscano"],"presentIndicative":["unisco","unisci","unisce","uniamo","unite","uniscono"],"presentConditional":["unirei","uniresti","unirebbe","uniremmo","unireste","unirebbero"],"impersonalForms":["unire","unente","unendo","unito","avere unito","avendo unito","avente unito"],"pastIndicative":["ho unito","hai unito","ha unito","abbiamo unito","avete unito","hanno unito"],"futureIndicative":["unir\\xF2","unirai","unir\\xE0","uniremo","unirete","uniranno"]},{"futurePerfectIndicative":["avr\\xF2 usato","avrai usato","avr\\xE0 usato","avremo usato","avrete usato","avranno usato"],"presentSubjunctive":["usi","usi","usi","usiamo","usiate","usino"],"pastRemoteIndicative":["usai","usasti","us\\xF2","usammo","usaste","usarono"],"pluperfectIndicative":["avevo usato","avevi usato","aveva usato","avevamo usato","avevate usato","avevano usato"],"imperfectSubjunctive":["abbia usato","abbia usato","abbia usato","abbiamo usato","abbiate usato","abbiano usato"],"pastConditional":["avrei usato","avresti usato","avrebbe usato","avremmo usato","avreste usato","avrebbero usato"],"pastSubjunctive":["usassi","usassi","usasse","usassimo","usaste","usassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi usato","avessi usato","avesse usato","avessimo usato","aveste usato","avessero usato"],"imperfectIndicative":["usavo","usavi","usava","usavamo","usavate","usavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi usato","avesti usato","ebbe usato","avemmo usato","aveste usato","ebbero usato"],"verb":"usare","imperative":["usa","usi","usiamo","usate","usino"],"presentIndicative":["uso","usi","usa","usiamo","usate","usano"],"presentConditional":["userei","useresti","userebbe","useremmo","usereste","userebbero"],"impersonalForms":["usare","usante","usando","usato","avere usato","avendo usato","avente usato"],"pastIndicative":["ho usato","hai usato","ha usato","abbiamo usato","avete usato","hanno usato"],"futureIndicative":["user\\xF2","userai","user\\xE0","useremo","userete","useranno"]},{"futurePerfectIndicative":["avr\\xF2 veduto; visto","avrai veduto; visto","avr\\xE0 veduto; visto","avremo veduto; visto","avrete veduto; visto","avranno veduto; visto"],"presentSubjunctive":["veda; vegga","veda; vegga","veda; vegga","vediamo","vediate","vedano; veggano"],"pastRemoteIndicative":["vidi","vedesti","vide","vedemmo","vedeste","videro"],"pluperfectIndicative":["avevo veduto; visto","avevi veduto; visto","aveva veduto; visto","avevamo veduto; visto","avevate veduto; visto","avevano veduto; visto"],"imperfectSubjunctive":["abbia veduto; visto","abbia veduto; visto","abbia veduto; visto","abbiamo veduto; visto","abbiate veduto; visto","abbiano veduto; visto"],"pastConditional":["avrei veduto; visto","avresti veduto; visto","avrebbe veduto; visto","avremmo veduto; visto","avreste veduto; visto","avrebbero veduto; visto"],"pastSubjunctive":["vedessi","vedessi","vedesse","vedessimo","vedeste","vedessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi veduto; visto","avessi veduto; visto","avesse veduto; visto","avessimo veduto; visto","aveste veduto; visto","avessero veduto; visto"],"imperfectIndicative":["vedevo","vedevi","vedeva","vedevamo","vedevate","vedevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi veduto; visto","avesti veduto; visto","ebbe veduto; visto","avemmo veduto; visto","aveste veduto; visto","ebbero veduto; visto"],"verb":"vedere","imperative":["vedi","veda; vegga","vediamo","vedete","vedano; veggano"],"presentIndicative":["vedo; veggo","vedi","vede","vediamo","vedete","vedono; veggono"],"presentConditional":["vedrei","vedresti","vedrebbe","vedremmo","vedreste","vedrebbero"],"impersonalForms":["vedere","vedente","vedendo","veduto; visto","avere veduto; visto","avendo veduto; visto","avente veduto; visto"],"pastIndicative":["ho veduto; visto","hai veduto; visto","ha veduto; visto","abbiamo veduto; visto","avete veduto; visto","hanno veduto; visto"],"futureIndicative":["vedr\\xF2","vedrai","vedr\\xE0","vedremo","vedrete","vedranno"]},{"futurePerfectIndicative":["avr\\xF2 venduto","avrai venduto","avr\\xE0 venduto","avremo venduto","avrete venduto","avranno venduto"],"presentSubjunctive":["venda","venda","venda","vendiamo","vendiate","vendano"],"pastRemoteIndicative":["vendei; vendetti","vendesti","vend\\xE9; vendette","vendemmo","vendeste","venderono; vendettero"],"pluperfectIndicative":["avevo venduto","avevi venduto","aveva venduto","avevamo venduto","avevate venduto","avevano venduto"],"imperfectSubjunctive":["abbia venduto","abbia venduto","abbia venduto","abbiamo venduto","abbiate venduto","abbiano venduto"],"pastConditional":["avrei venduto","avresti venduto","avrebbe venduto","avremmo venduto","avreste venduto","avrebbero venduto"],"pastSubjunctive":["vendessi","vendessi","vendesse","vendessimo","vendeste","vendessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi venduto","avessi venduto","avesse venduto","avessimo venduto","aveste venduto","avessero venduto"],"imperfectIndicative":["vendevo","vendevi","vendeva","vendevamo","vendevate","vendevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi venduto","avesti venduto","ebbe venduto","avemmo venduto","aveste venduto","ebbero venduto"],"verb":"vendere","imperative":["vendi","venda","vendiamo","vendete","vendano"],"presentIndicative":["vendo","vendi","vende","vendiamo","vendete","vendono"],"presentConditional":["venderei","venderesti","venderebbe","venderemmo","vendereste","venderebbero"],"impersonalForms":["vendere","vendente","vendendo","venduto","avere venduto","avendo venduto","avente venduto"],"pastIndicative":["ho venduto","hai venduto","ha venduto","abbiamo venduto","avete venduto","hanno venduto"],"futureIndicative":["vender\\xF2","venderai","vender\\xE0","venderemo","venderete","venderanno"]},{"futurePerfectIndicative":["sar\\xF2 venuto","sarai venuto","sar\\xE0 venuto","saremo venuti","sarete venuti","saranno venuti"],"presentSubjunctive":["venga","venga","venga","veniamo","veniate","vengano"],"pastRemoteIndicative":["venni","venisti","venne","venimmo","veniste","vennero"],"pluperfectIndicative":["ero venuto","eri venuto","era venuto","eravamo venuti","eravate venuti","erano venuti"],"imperfectSubjunctive":["sia venuto","sia venuto","sia venuto","siamo venuti","siate venuti","siano venuti"],"pastConditional":["sarei venuto","saresti venuto","sarebbe venuto","saremmo venuti","sareste venuti","sarebbero venuti"],"pastSubjunctive":["venissi","venissi","venisse","venissimo","veniste","venissero"],"similarVerbs":"","pluperfectSubjunctive":["fossi venuto","fossi venuto","fosse venuto","fossimo venuti","foste venuti","fossero venuti"],"imperfectIndicative":["venivo","venivi","veniva","venivamo","venivate","venivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["fui venuto","fosti venuto","fu venuto","fummo venuti","foste venuti","furono venuti"],"verb":"venire","imperative":["vieni","venga","veniamo","venite","vengano"],"presentIndicative":["vengo","vieni","viene","veniamo","venite","vengono"],"presentConditional":["verrei","verresti","verrebbe","verremmo","verreste","verrebbero"],"impersonalForms":["venire","venente","venendo","venuto","essere venuto","essendo venuto","essente venuto"],"pastIndicative":["sono venuto","sei venuto","\\xE8 venuto","siamo venuti","siete venuti","sono venuti"],"futureIndicative":["verr\\xF2","verrai","verr\\xE0","verremo","verrete","verranno"]},{"futurePerfectIndicative":["avr\\xF2 vestito","avrai vestito","avr\\xE0 vestito","avremo vestito","avrete vestito","avranno vestito"],"presentSubjunctive":["vesta","vesta","vesta","vestiamo","vestiate","vestano"],"pastRemoteIndicative":["vestii","vestisti","vest\\xEC","vestimmo","vestiste","vestirono"],"pluperfectIndicative":["avevo vestito","avevi vestito","aveva vestito","avevamo vestito","avevate vestito","avevano vestito"],"imperfectSubjunctive":["abbia vestito","abbia vestito","abbia vestito","abbiamo vestito","abbiate vestito","abbiano vestito"],"pastConditional":["avrei vestito","avresti vestito","avrebbe vestito","avremmo vestito","avreste vestito","avrebbero vestito"],"pastSubjunctive":["vestissi","vestissi","vestisse","vestissimo","vestiste","vestissero"],"similarVerbs":"","pluperfectSubjunctive":["avessi vestito","avessi vestito","avesse vestito","avessimo vestito","aveste vestito","avessero vestito"],"imperfectIndicative":["vestivo","vestivi","vestiva","vestivamo","vestivate","vestivano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi vestito","avesti vestito","ebbe vestito","avemmo vestito","aveste vestito","ebbero vestito"],"verb":"vestire","imperative":["vesti","vesta","vestiamo","vestite","vestano"],"presentIndicative":["vesto","vesti","veste","vestiamo","vestite","vestono"],"presentConditional":["vestirei","vestiresti","vestirebbe","vestiremmo","vestireste","vestirebbero"],"impersonalForms":["vestire","vestente","vestendo","vestito","avere vestito","avendo vestito","avente vestito"],"pastIndicative":["ho vestito","hai vestito","ha vestito","abbiamo vestito","avete vestito","hanno vestito"],"futureIndicative":["vestir\\xF2","vestirai","vestir\\xE0","vestiremo","vestirete","vestiranno"]},{"futurePerfectIndicative":["avr\\xF2 viaggiato","avrai viaggiato","avr\\xE0 viaggiato","avremo viaggiato","avrete viaggiato","avranno viaggiato"],"presentSubjunctive":["viaggi","viaggi","viaggi","viaggiamo","viaggiate","viaggino"],"pastRemoteIndicative":["viaggiai","viaggiasti","viaggi\\xF2","viaggiammo","viaggiaste","viaggiarono"],"pluperfectIndicative":["avevo viaggiato","avevi viaggiato","aveva viaggiato","avevamo viaggiato","avevate viaggiato","avevano viaggiato"],"imperfectSubjunctive":["abbia viaggiato","abbia viaggiato","abbia viaggiato","abbiamo viaggiato","abbiate viaggiato","abbiano viaggiato"],"pastConditional":["avrei viaggiato","avresti viaggiato","avrebbe viaggiato","avremmo viaggiato","avreste viaggiato","avrebbero viaggiato"],"pastSubjunctive":["viaggiassi","viaggiassi","viaggiasse","viaggiassimo","viaggiaste","viaggiassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi viaggiato","avessi viaggiato","avesse viaggiato","avessimo viaggiato","aveste viaggiato","avessero viaggiato"],"imperfectIndicative":["viaggiavo","viaggiavi","viaggiava","viaggiavamo","viaggiavate","viaggiavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi viaggiato","avesti viaggiato","ebbe viaggiato","avemmo viaggiato","aveste viaggiato","ebbero viaggiato"],"verb":"viaggiare","imperative":["viaggia","viaggi","viaggiamo","viaggiate","viaggino"],"presentIndicative":["viaggio","viaggi","viaggia","viaggiamo","viaggiate","viaggiano"],"presentConditional":["viaggerei","viaggeresti","viaggerebbe","viaggeremmo","viaggereste","viaggerebbero"],"impersonalForms":["viaggiare","viaggiante","viaggiando","viaggiato","avere viaggiato","avendo viaggiato","avente viaggiato"],"pastIndicative":["ho viaggiato","hai viaggiato","ha viaggiato","abbiamo viaggiato","avete viaggiato","hanno viaggiato"],"futureIndicative":["viagger\\xF2","viaggerai","viagger\\xE0","viaggeremo","viaggerete","viaggeranno"]},{"futurePerfectIndicative":["avr\\xF2 vinto","avrai vinto","avr\\xE0 vinto","avremo vinto","avrete vinto","avranno vinto"],"presentSubjunctive":["vinca","vinca","vinca","vinciamo","vinciate","vincano"],"pastRemoteIndicative":["vinsi","vincesti","vinse","vincemmo","vinceste","vinsero"],"pluperfectIndicative":["avevo vinto","avevi vinto","aveva vinto","avevamo vinto","avevate vinto","avevano vinto"],"imperfectSubjunctive":["abbia vinto","abbia vinto","abbia vinto","abbiamo vinto","abbiate vinto","abbiano vinto"],"pastConditional":["avrei vinto","avresti vinto","avrebbe vinto","avremmo vinto","avreste vinto","avrebbero vinto"],"pastSubjunctive":["vincessi","vincessi","vincesse","vincessimo","vinceste","vincessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi vinto","avessi vinto","avesse vinto","avessimo vinto","aveste vinto","avessero vinto"],"imperfectIndicative":["vincevo","vincevi","vinceva","vincevamo","vincevate","vincevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi vinto","avesti vinto","ebbe vinto","avemmo vinto","aveste vinto","ebbero vinto"],"verb":"vincere","imperative":["vinci","vinca","vinciamo","vincete","vincano"],"presentIndicative":["vinco","vinci","vince","vinciamo","vincete","vincono"],"presentConditional":["vincerei","vinceresti","vincerebbe","vinceremmo","vincereste","vincerebbero"],"impersonalForms":["vincere","vincente","vincendo","vinto","avere vinto","avendo vinto","avente vinto"],"pastIndicative":["ho vinto","hai vinto","ha vinto","abbiamo vinto","avete vinto","hanno vinto"],"futureIndicative":["vincer\\xF2","vincerai","vincer\\xE0","vinceremo","vincerete","vinceranno"]},{"futurePerfectIndicative":["avr\\xF2 visitato","avrai visitato","avr\\xE0 visitato","avremo visitato","avrete visitato","avranno visitato"],"presentSubjunctive":["visiti","visiti","visiti","visitiamo","visitiate","visitino"],"pastRemoteIndicative":["visitai","visitasti","visit\\xF2","visitammo","visitaste","visitarono"],"pluperfectIndicative":["avevo visitato","avevi visitato","aveva visitato","avevamo visitato","avevate visitato","avevano visitato"],"imperfectSubjunctive":["abbia visitato","abbia visitato","abbia visitato","abbiamo visitato","abbiate visitato","abbiano visitato"],"pastConditional":["avrei visitato","avresti visitato","avrebbe visitato","avremmo visitato","avreste visitato","avrebbero visitato"],"pastSubjunctive":["visitassi","visitassi","visitasse","visitassimo","visitaste","visitassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi visitato","avessi visitato","avesse visitato","avessimo visitato","aveste visitato","avessero visitato"],"imperfectIndicative":["visitavo","visitavi","visitava","visitavamo","visitavate","visitavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi visitato","avesti visitato","ebbe visitato","avemmo visitato","aveste visitato","ebbero visitato"],"verb":"visitare","imperative":["visita","visiti","visitiamo","visitate","visitino"],"presentIndicative":["visito","visiti","visita","visitiamo","visitate","visitano"],"presentConditional":["visiterei","visiteresti","visiterebbe","visiteremmo","visitereste","visiterebbero"],"impersonalForms":["visitare","visitante","visitando","visitato","avere visitato","avendo visitato","avente visitato"],"pastIndicative":["ho visitato","hai visitato","ha visitato","abbiamo visitato","avete visitato","hanno visitato"],"futureIndicative":["visiter\\xF2","visiterai","visiter\\xE0","visiteremo","visiterete","visiteranno"]},{"futurePerfectIndicative":["avr\\xF2 vivuto; vissuto; sar\\xF2 vivuto; vissuto","avrai vivuto; vissuto; sarai vivuto; vissuto","avr\\xE0 vivuto; vissuto; sar\\xE0 vivuto; vissuto","avremo vivuto; vissuto; saremo vivuto; vissuti","avrete vivuto; vissuto; sarete vivuto; vissuti","avranno vivuto; vissuto; saranno vivuto; vissuti"],"presentSubjunctive":["viva","viva","viva","viviamo","viviate","vivano"],"pastRemoteIndicative":["vissi","vivesti","visse","vivemmo","viveste","vissero"],"pluperfectIndicative":["avevo vivuto; vissuto; ero vivuto; vissuto","avevi vivuto; vissuto; eri vivuto; vissuto","aveva vivuto; vissuto; era vivuto; vissuto","avevamo vivuto; vissuto; eravamo vivuto; vissuti","avevate vivuto; vissuto; eravate vivuto; vissuti","avevano vivuto; vissuto; erano vivuto; vissuti"],"imperfectSubjunctive":["abbia vivuto; vissuto; sia vivuto; vissuto","abbia vivuto; vissuto; sia vivuto; vissuto","abbia vivuto; vissuto; sia vivuto; vissuto","abbiamo vivuto; vissuto; siamo vivuto; vissuti","abbiate vivuto; vissuto; siate vivuto; vissuti","abbiano vivuto; vissuto; siano vivuto; vissuti"],"pastConditional":["avrei vivuto; vissuto; sarei vivuto; vissuto","avresti vivuto; vissuto; saresti vivuto; vissuto","avrebbe vivuto; vissuto; sarebbe vivuto; vissuto","avremmo vivuto; vissuto; saremmo vivuto; vissuti","avreste vivuto; vissuto; sareste vivuto; vissuti","avrebbero vivuto; vissuto; sarebbero vivuto; vissuti"],"pastSubjunctive":["vivessi","vivessi","vivesse","vivessimo","viveste","vivessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi vivuto; vissuto; fossi vivuto; vissuto","avessi vivuto; vissuto; fossi vivuto; vissuto","avesse vivuto; vissuto; fosse vivuto; vissuto","avessimo vivuto; vissuto; fossimo vivuto; vissuti","aveste vivuto; vissuto; foste vivuto; vissuti","avessero vivuto; vissuto; fossero vivuto; vissuti"],"imperfectIndicative":["vivevo","vivevi","viveva","vivevamo","vivevate","vivevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi vivuto; vissuto; fui vivuto; vissuto","avesti vivuto; vissuto; fosti vivuto; vissuto","ebbe vivuto; vissuto; fu vivuto; vissuto","avemmo vivuto; vissuto; fummo vivuto; vissuti","aveste vivuto; vissuto; foste vivuto; vissuti","ebbero vivuto; vissuto; furono vivuto; vissuti"],"verb":"vivere","imperative":["vivi","viva","viviamo","vivete","vivano"],"presentIndicative":["vivo","vivi","vive","viviamo","vivete","vivono"],"presentConditional":["vivrei","vivresti","vivrebbe","vivremmo","vivreste","vivrebbero"],"impersonalForms":["vivere","vivente","vivendo","vivuto; vissuto","avere vivuto; vissuto; essere vivuto; vissuto","avendo vivuto; vissuto; essendo vivuto; vissuto","avente vivuto; vissuto; essente vivuto; vissuto"],"pastIndicative":["ho vivuto; vissuto; sono vivuto; vissuto","hai vivuto; vissuto; sei vivuto; vissuto","ha vivuto; vissuto; \\xE8 vivuto; vissuto","abbiamo vivuto; vissuto; siamo vivuto; vissuti","avete vivuto; vissuto; siete vivuto; vissuti","hanno vivuto; vissuto; sono vivuto; vissuti"],"futureIndicative":["vivr\\xF2","vivrai","vivr\\xE0","vivremo","vivrete","vivranno"]},{"futurePerfectIndicative":["avr\\xF2 volato; sar\\xF2 volato","avrai volato; sarai volato","avr\\xE0 volato; sar\\xE0 volato","avremo volato; saremo volati","avrete volato; sarete volati","avranno volato; saranno volati"],"presentSubjunctive":["voli","voli","voli","voliamo","voliate","volino"],"pastRemoteIndicative":["volai","volasti","vol\\xF2","volammo","volaste","volarono"],"pluperfectIndicative":["avevo volato; ero volato","avevi volato; eri volato","aveva volato; era volato","avevamo volato; eravamo volati","avevate volato; eravate volati","avevano volato; erano volati"],"imperfectSubjunctive":["abbia volato; sia volato","abbia volato; sia volato","abbia volato; sia volato","abbiamo volato; siamo volati","abbiate volato; siate volati","abbiano volato; siano volati"],"pastConditional":["avrei volato; sarei volato","avresti volato; saresti volato","avrebbe volato; sarebbe volato","avremmo volato; saremmo volati","avreste volato; sareste volati","avrebbero volato; sarebbero volati"],"pastSubjunctive":["volassi","volassi","volasse","volassimo","volaste","volassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi volato; fossi volato","avessi volato; fossi volato","avesse volato; fosse volato","avessimo volato; fossimo volati","aveste volato; foste volati","avessero volato; fossero volati"],"imperfectIndicative":["volavo","volavi","volava","volavamo","volavate","volavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi volato; fui volato","avesti volato; fosti volato","ebbe volato; fu volato","avemmo volato; fummo volati","aveste volato; foste volati","ebbero volato; furono volati"],"verb":"volare","imperative":["vola","voli","voliamo","volate","volino"],"presentIndicative":["volo","voli","vola","voliamo","volate","volano"],"presentConditional":["volerei","voleresti","volerebbe","voleremmo","volereste","volerebbero"],"impersonalForms":["volare","volante","volando","volato","avere volato; essere volato","avendo volato; essendo volato","avente volato; essente volato"],"pastIndicative":["ho volato; sono volato","hai volato; sei volato","ha volato; \\xE8 volato","abbiamo volato; siamo volati","avete volato; siete volati","hanno volato; sono volati"],"futureIndicative":["voler\\xF2","volerai","voler\\xE0","voleremo","volerete","voleranno"]},{"futurePerfectIndicative":["avr\\xF2 voluto","avrai voluto","avr\\xE0 voluto","avremo voluto","avrete voluto","avranno voluto"],"presentSubjunctive":["voglia","voglia","voglia","vogliamo","vogliate","vogliano"],"pastRemoteIndicative":["volli; volsi","volesti","volle; volse","volemmo","voleste","vollero; volsero"],"pluperfectIndicative":["avevo voluto","avevi voluto","aveva voluto","avevamo voluto","avevate voluto","avevano voluto"],"imperfectSubjunctive":["abbia voluto","abbia voluto","abbia voluto","abbiamo voluto","abbiate voluto","abbiano voluto"],"pastConditional":["avrei voluto","avresti voluto","avrebbe voluto","avremmo voluto","avreste voluto","avrebbero voluto"],"pastSubjunctive":["volessi","volessi","volesse","volessimo","voleste","volessero"],"similarVerbs":"","pluperfectSubjunctive":["avessi voluto","avessi voluto","avesse voluto","avessimo voluto","aveste voluto","avessero voluto"],"imperfectIndicative":["volevo","volevi","voleva","volevamo","volevate","volevano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi voluto","avesti voluto","ebbe voluto","avemmo voluto","aveste voluto","ebbero voluto"],"verb":"volere","imperative":["vogli","voglia","vogliamo","vogliate","vogliano"],"presentIndicative":["voglio; v\\xF2; vu\\xF2","vuoi","vuole","vogliamo","volete","vogliono"],"presentConditional":["vorrei","vorresti","vorrebbe","vorremmo","vorreste","vorrebbero"],"impersonalForms":["volere","volente","volendo","voluto","avere voluto","avendo voluto","avente voluto"],"pastIndicative":["ho voluto","hai voluto","ha voluto","abbiamo voluto","avete voluto","hanno voluto"],"futureIndicative":["vorr\\xF2","vorrai","vorr\\xE0","vorremo","vorrete","vorranno"]},{"futurePerfectIndicative":["avr\\xF2 votato","avrai votato","avr\\xE0 votato","avremo votato","avrete votato","avranno votato"],"presentSubjunctive":["voti","voti","voti","votiamo","votiate","votino"],"pastRemoteIndicative":["votai","votasti","vot\\xF2","votammo","votaste","votarono"],"pluperfectIndicative":["avevo votato","avevi votato","aveva votato","avevamo votato","avevate votato","avevano votato"],"imperfectSubjunctive":["abbia votato","abbia votato","abbia votato","abbiamo votato","abbiate votato","abbiano votato"],"pastConditional":["avrei votato","avresti votato","avrebbe votato","avremmo votato","avreste votato","avrebbero votato"],"pastSubjunctive":["votassi","votassi","votasse","votassimo","votaste","votassero"],"similarVerbs":"","pluperfectSubjunctive":["avessi votato","avessi votato","avesse votato","avessimo votato","aveste votato","avessero votato"],"imperfectIndicative":["votavo","votavi","votava","votavamo","votavate","votavano"],"is_swadesh":false,"pluperfectRemoteIndicative":["ebbi votato","avesti votato","ebbe votato","avemmo votato","aveste votato","ebbero votato"],"verb":"votare","imperative":["vota","voti","votiamo","votate","votino"],"presentIndicative":["voto","voti","vota","votiamo","votate","votano"],"presentConditional":["voterei","voteresti","voterebbe","voteremmo","votereste","voterebbero"],"impersonalForms":["votare","votante","votando","votato","avere votato","avendo votato","avente votato"],"pastIndicative":["ho votato","hai votato","ha votato","abbiamo votato","avete votato","hanno votato"],"futureIndicative":["voter\\xF2","voterai","voter\\xE0","voteremo","voterete","voteranno"]}];var translations=[{"lang":"en","data":{"toccare":"to touch","portare":"to bring","giocare":"to play (a game)","conoscere":"to know (be familiar with)","rispondere":"to answer","bollire":"to boil","ricevere":"to receive","visitare":"to visit","piovere":"to rain","perdere":"to lose","saltare":"to jump","colpire":"to hit","controllare":"to control","supporre":"to suppose","esercitare":"to exercise","aprire":"to open","unire":"to unite","dimenticare":"to forget","guadagnare":"to earn","dimostrare":"to demonstrate","indossare":"to wear","venire":"to come","dovere":"to have to, must, ought, should, owe","crescere":"to grow","accendere":"to turn on (a switch)","amare":"to love","nevicare":"to snow","preoccupare":"to worry","esplorare":"to explore","capire":"to understand","potere":"to be able to","decidere":"to decide","scrivere":"to write","costare":"to cost","vivere":"to live (not abitare)","suonare":"to play (instrument)","girare":"to turn","correre":"to run","trovare":"to find","mandare":"to send (not inviare)","pescare":"to fish","produrre":"to produce","dormire":"to sleep","iniziare":"to begin (not cominciare)","significare":"to mean","scusare":"to excuse","arrostire":"to roast","volere":"to want","concordare":"to agree","gridare":"to shout","arrivare":"to arrive","riempire":"to fill","fermare":"to stop","aggiungere":"to add","pensare":"to think","cantare":"to sing","volare":"to fly","spostare":"to move (object, person, arm)","leggere":"to read","chiedere":"to ask","indicare":"to indicate","sapere":"to know (a fact)","prendere":"to take","includere":"to include","rimanere":"to remain","ascoltare":"to listen to","chiudere":"to close","spaventare":"to scare","chiamare":"to call","entrare":"to enter","rompere":"to break","avere":"to have","migliorare":"to improve","dire":"to say","fumare":"to smoke","premere":"to press","lavare":"to wash","credere":"to believe","ferire":"to wound","tirare":"to pull","permettere":"to allow","attraversare":"to cross","inviare":"to send (not mandare)","mangiare":"to eat","guidare":"to drive","abbassare":"to lower","salvare":"to save (rescue)","vincere":"to win","finire":"to finish","ricordare":"to remember","vedere":"to see","pulire":"to clean","sentire":"to feel","invitare":"to invite","descrivere":"to describe","pregare":"to beg","filmare":"to film","cadere":"to fall","esprimere":"to express","preferire":"to prefer","offrire":"to offer","spingere":"to push","parcheggiare":"to park","imparare":"to learn","viaggiare":"to travel","stare":"to stay","tenere":"to hold","disegnare":"to design","ridere":"to laugh","passare":"to pass","bere":"to drink","insistere":"to insist","sorridere":"to smile","comprare":"to buy","vendere":"to sell","diventare":"to become","mancare":"to miss","spiegare":"to explain","riconoscere":"to recognise","seguire":"to follow","studiare":"to study","cambiare":"to change","morire":"to die","ballare":"to dance","affittare":"to rent","fotografare":"to photograph","lavorare":"to work","stampare":"to print","svuotare":"to empty","cercare":"to look for","insegnare":"to teach","aiutare":"to help","telefonare":"to telephone","dare":"to give","sognare":"to dream","friggere":"to fry","cucinare":"to cook (to prepare food)","confondere":"to confuse","odiare":"to hate","bruciare":"to burn","ritornare":"to return (to go back)","lasciare":"to leave (an object)","riposare":"to rest","andare":"to go","scegliere":"to choose","parlare":"to talk","tentare":"to attempt","riparare":"to repair","allenare":"to train","costruire":"to build","mettere":"to put (not porre)","baciare":"to kiss","usare":"to use","pianificare":"to plan","piangere":"to cry","dipingere":"to paint","tagliare":"to cut","fare":"to make","camminare":"to walk","sedere":"to sit","asciugare":"to dry","guardare":"to look at","appartenere":"to belong","votare":"to vote","prestare":"to lend","aspettare":"to wait (for)","coltivare":"to cultivate","provare":"to try","incontrare":"to meet","fallire":"to fail","essere":"to be","vestire":"to dress","pagare":"to pay","piacere":"to please","mentire":"to lie (to tell an untruth)","prenotare":"to reserve","ringraziare":"to thank","rubare":"to steal","giudicare":"to judge","nuotare":"to swim","succedere":"to happen","porre":"to put (not mettere)","cominciare":"to begin (not iniziare)","ricercare":"to research"}},{"lang":"ru","data":{"partire":"\\u0443\\u0435\\u0437\\u0436\\u0430\\u0442\\u044C","parere":"\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\\u0441\\u044F","giocare":"\\u0438\\u0433\\u0440\\u0430\\u0442\\u044C","tacere":"\\u043C\\u043E\\u043B\\u0447\\u0430\\u0442\\u044C","perdere":"\\u0442\\u0435\\u0440\\u044F\\u0442\\u044C","godere":"\\u043D\\u0430\\u0441\\u043B\\u0430\\u0436\\u0434\\u0430\\u0442\\u044C\\u0441\\u044F","rispondere":"\\u043E\\u0442\\u0432\\u0435\\u0447\\u0430\\u0442\\u044C","bollire":"\\u043A\\u0438\\u043F\\u0435\\u0442\\u044C","scrivere":"\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C","bere":"\\u043F\\u0438\\u0442\\u044C","vedere":"\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C","vivere":"\\u0436\\u0438\\u0442\\u044C","aprire":"\\u043E\\u0442\\u043A\\u0440\\u044B\\u0432\\u0430\\u0442\\u044C","sentire":"\\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C","volere":"\\u0445\\u043E\\u0442\\u0435\\u0442\\u044C","vestire":"\\u043E\\u0434\\u0435\\u0432\\u0430\\u0442\\u044C","scegliere":"\\u0432\\u044B\\u0431\\u0438\\u0440\\u0430\\u0442\\u044C","stare":"\\u0431\\u044B\\u0442\\u044C/\\u0441\\u0442\\u0430\\u0442\\u044C","riuscire":"\\u0443\\u0434\\u0430\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F","correre":"\\u0431\\u0435\\u0436\\u0430\\u0442\\u044C","pensare":"\\u0434\\u0443\\u043C\\u0430\\u0442\\u044C","rimanere":"\\u043E\\u0441\\u0442\\u0430\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F","cucire":"\\u0448\\u0438\\u0442\\u044C","seguire":"\\u0441\\u043B\\u0435\\u0434\\u043E\\u0432\\u0430\\u0442\\u044C","offrire":"\\u043F\\u0440\\u0435\\u0434\\u043B\\u0430\\u0433\\u0430\\u0442\\u044C","conoscere":"\\u0431\\u044B\\u0442\\u044C-\\u0437\\u043D\\u0430\\u043A\\u043E\\u043C\\u044B\\u043C","cadere":"\\u0443\\u043F\\u0430\\u0441\\u0442\\u044C/\\u043F\\u0430\\u0434\\u0430\\u0442\\u044C","cedere":"\\u0443\\u0441\\u0442\\u0443\\u043F\\u0430\\u0442\\u044C","nascere":"\\u0440\\u043E\\u0434\\u0438\\u0442\\u044C\\u0441\\u044F","imparare":"\\u043D\\u0430\\u0443\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F","leggere":"\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C","chiedere":"\\u0441\\u043F\\u0440\\u0430\\u0448\\u0438\\u0432\\u0430\\u0442\\u044C","potere":"\\u043C\\u043E\\u0447\\u044C","sapere":"\\u0437\\u043D\\u0430\\u0442\\u044C/\\u0443\\u043C\\u0435\\u0442\\u044C","prendere":"\\u0431\\u0440\\u0430\\u0442\\u044C","cercare":"\\u0438\\u0441\\u043A\\u0430\\u0442\\u044C","salutare":"\\u043F\\u0440\\u0438\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C","fare":"\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C","parlare":"\\u0433\\u043E\\u0432\\u043E\\u0440\\u0438\\u0442\\u044C","sedere":"\\u0441\\u0438\\u0434\\u0435\\u0442\\u044C","esigere":"\\u0442\\u0440\\u0435\\u0431\\u043E\\u0432\\u0430\\u0442\\u044C","costruire":"\\u0441\\u0442\\u0440\\u043E\\u0438\\u0442\\u044C","chiudere":"\\u0437\\u0430\\u043A\\u0440\\u044B\\u0432\\u0430\\u0442\\u044C","ridere":"\\u0441\\u043C\\u0435\\u044F\\u0442\\u044C\\u0441\\u044F","consumare":"\\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u043B\\u044F\\u0442\\u044C","venire":"\\u043F\\u0440\\u0438\\u0445\\u043E\\u0434\\u0438\\u0442\\u044C","mangiare":"\\u0435\\u0441\\u0442\\u044C","dovere":"\\u0434\\u043E\\u043B\\u0436\\u043D\\u043E","crescere":"\\u0440\\u0430\\u0441\\u0442\\u0438","uscire":"\\u0432\\u044B\\u0445\\u043E\\u0434\\u0438\\u0442\\u044C","rompere":"\\u043B\\u043E\\u043C\\u0430\\u0442\\u044C","avere":"\\u0438\\u043C\\u0435\\u0442\\u044C","servire":"\\u0441\\u043B\\u0443\\u0436\\u0438\\u0442\\u044C","dire":"\\u0441\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C","discutere":"\\u043E\\u0431\\u0441\\u0443\\u0436\\u0434\\u0430\\u0442\\u044C","amare":"\\u043B\\u044E\\u0431\\u0438\\u0442\\u044C","credere":"\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C","dare":"\\u0434\\u0430\\u0432\\u0430\\u0442\\u044C","capire":"\\u043F\\u043E\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C","dirigere":"\\u0440\\u0443\\u043A\\u043E\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C","apparire":"\\u043F\\u043E\\u044F\\u0432\\u043B\\u044F\\u0442\\u044C\\u0441\\u044F","piangere":"\\u043F\\u043B\\u0430\\u043A\\u0430\\u0442\\u044C","spiegare":"\\u043E\\u0431\\u044A\\u044F\\u0441\\u043D\\u044F\\u0442\\u044C","essere":"\\u0431\\u044B\\u0442\\u044C","morire":"\\u0443\\u043C\\u0438\\u0440\\u0430\\u0442\\u044C","valere":"\\u0441\\u0442\\u043E\\u0438\\u0442\\u044C","dolere":"\\u0431\\u043E\\u043B\\u0435\\u0442\\u044C","finire":"\\u043A\\u043E\\u043D\\u0447\\u0430\\u0442\\u044C","dormire":"\\u0441\\u043F\\u0430\\u0442\\u044C","piacere":"\\u043D\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\\u0441\\u044F","porre":"\\u043A\\u043B\\u0430\\u0441\\u0442\\u044C","avvertire":"\\u043F\\u0440\\u0435\\u0434\\u0443\\u043F\\u0440\\u0435\\u0436\\u0434\\u0430\\u0442\\u044C","salire":"\\u043F\\u043E\\u0434\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C\\u0441\\u044F","fuggire":"\\u0443\\u0431\\u0435\\u0433\\u0430\\u0442\\u044C","guardare":"\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C","entrare":"\\u0432\\u0445\\u043E\\u0434\\u0438\\u0442\\u044C","andare":"\\u0438\\u0434\\u0442\\u0438","cominciare":"\\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0442\\u044C","mettere":"\\u043A\\u043B\\u0430\\u0441\\u0442\\u044C/\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C"}}];exports.default={verbs:verbs,verbs_short:verbs_short,translations:translations};\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/verbs.jsx\n// module id = 84\n// module chunks = 0\n//# sourceURL=webpack:///./src/js/verbs.jsx?');
},function(module,exports){eval("/**\n * ascii-folder.js\n * https://github.com/mplatt/fold-to-ascii-js\n *\n * This is a JavaScript port of the Apache Lucene ASCII Folding Filter.\n *\n * The Apache Lucene ASCII Folding Filter is licensed to the Apache Software\n * Foundation (ASF) under one or more contributor license agreements. See the\n * NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to You under the Apache\n * License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\nclass ASCIIFolder {\n    /**\n     * Sanitize strings by converting alphabetic, numeric, and symbolic Unicode characters which are not contained in\n     * the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into a ASCII equivalents.\n     *\n     * @param str The string to be sanitized\n     * @param replacement The character an unmapped character should be replaced with or null should the original\n     * character be retained\n     * @returns {string} The sanitized string\n     */\n    static fold(str = '', replacement = '') {\n        let foldedStr = '';\n\n        if (str === null)\n            return '';\n        if (typeof str === 'number')\n            return '' + str;\n        if (typeof str !== 'string')\n            throw new Error('Invalid input data type');\n        for (let character of str) {\n            if (character.charCodeAt(0) < 128) {\n                foldedStr = foldedStr.concat(character);\n            }\n            else {\n                foldedStr = foldedStr.concat(ASCIIFolder.replaceChar(character, replacement));\n            }\n        }\n        return foldedStr;\n    }\n    /**\n     * Replaces a single character\n     *\n     * @param char The character to replace\n     * @param replacement What string unmapped characters should be replaced with\n     * @returns {string} A string representing the replacement of the character\n     */\n    static replaceChar(char, replacement) {\n        let ascii = ASCIIFolder.mapping.get(char.charCodeAt(0));\n        return ascii ? ascii : replacement;\n    }\n}\n\nASCIIFolder.mapping = new Map([\n    [0xC0, 'A'],\n    [0xC1, 'A'],\n    [0xC2, 'A'],\n    [0xC3, 'A'],\n    [0xC4, 'A'],\n    [0xC5, 'A'],\n    [0x100, 'A'],\n    [0x102, 'A'],\n    [0x104, 'A'],\n    [0x18F, 'A'],\n    [0x1CD, 'A'],\n    [0x1DE, 'A'],\n    [0x1E0, 'A'],\n    [0x1FA, 'A'],\n    [0x200, 'A'],\n    [0x202, 'A'],\n    [0x226, 'A'],\n    [0x23A, 'A'],\n    [0x1D00, 'A'],\n    [0x1E00, 'A'],\n    [0x1EA0, 'A'],\n    [0x1EA2, 'A'],\n    [0x1EA4, 'A'],\n    [0x1EA6, 'A'],\n    [0x1EA8, 'A'],\n    [0x1EAA, 'A'],\n    [0x1EAC, 'A'],\n    [0x1EAE, 'A'],\n    [0x1EB0, 'A'],\n    [0x1EB2, 'A'],\n    [0x1EB4, 'A'],\n    [0x1EB6, 'A'],\n    [0x24B6, 'A'],\n    [0xFF21, 'A'],\n    [0xE0, 'a'],\n    [0xE1, 'a'],\n    [0xE2, 'a'],\n    [0xE3, 'a'],\n    [0xE4, 'a'],\n    [0xE5, 'a'],\n    [0x101, 'a'],\n    [0x103, 'a'],\n    [0x105, 'a'],\n    [0x1CE, 'a'],\n    [0x1DF, 'a'],\n    [0x1E1, 'a'],\n    [0x1FB, 'a'],\n    [0x201, 'a'],\n    [0x203, 'a'],\n    [0x227, 'a'],\n    [0x250, 'a'],\n    [0x259, 'a'],\n    [0x25A, 'a'],\n    [0x1D8F, 'a'],\n    [0x1D95, 'a'],\n    [0x1E01, 'a'],\n    [0x1E9A, 'a'],\n    [0x1EA1, 'a'],\n    [0x1EA3, 'a'],\n    [0x1EA5, 'a'],\n    [0x1EA7, 'a'],\n    [0x1EA9, 'a'],\n    [0x1EAB, 'a'],\n    [0x1EAD, 'a'],\n    [0x1EAF, 'a'],\n    [0x1EB1, 'a'],\n    [0x1EB3, 'a'],\n    [0x1EB5, 'a'],\n    [0x1EB7, 'a'],\n    [0x2090, 'a'],\n    [0x2094, 'a'],\n    [0x24D0, 'a'],\n    [0x2C65, 'a'],\n    [0x2C6F, 'a'],\n    [0xFF41, 'a'],\n    [0xA732, 'AA'],\n    [0xC6, 'AE'],\n    [0x1E2, 'AE'],\n    [0x1FC, 'AE'],\n    [0x1D01, 'AE'],\n    [0xA734, 'AO'],\n    [0xA736, 'AU'],\n    [0xA738, 'AV'],\n    [0xA73A, 'AV'],\n    [0xA73C, 'AY'],\n    [0x249C, '(a)'],\n    [0xA733, 'aa'],\n    [0xE6, 'ae'],\n    [0x1E3, 'ae'],\n    [0x1FD, 'ae'],\n    [0x1D02, 'ae'],\n    [0xA735, 'ao'],\n    [0xA737, 'au'],\n    [0xA739, 'av'],\n    [0xA73B, 'av'],\n    [0xA73D, 'ay'],\n    [0x181, 'B'],\n    [0x182, 'B'],\n    [0x243, 'B'],\n    [0x299, 'B'],\n    [0x1D03, 'B'],\n    [0x1E02, 'B'],\n    [0x1E04, 'B'],\n    [0x1E06, 'B'],\n    [0x24B7, 'B'],\n    [0xFF22, 'B'],\n    [0x180, 'b'],\n    [0x183, 'b'],\n    [0x253, 'b'],\n    [0x1D6C, 'b'],\n    [0x1D80, 'b'],\n    [0x1E03, 'b'],\n    [0x1E05, 'b'],\n    [0x1E07, 'b'],\n    [0x24D1, 'b'],\n    [0xFF42, 'b'],\n    [0x249D, '(b)'],\n    [0xC7, 'C'],\n    [0x106, 'C'],\n    [0x108, 'C'],\n    [0x10A, 'C'],\n    [0x10C, 'C'],\n    [0x187, 'C'],\n    [0x23B, 'C'],\n    [0x297, 'C'],\n    [0x1D04, 'C'],\n    [0x1E08, 'C'],\n    [0x24B8, 'C'],\n    [0xFF23, 'C'],\n    [0xE7, 'c'],\n    [0x107, 'c'],\n    [0x109, 'c'],\n    [0x10B, 'c'],\n    [0x10D, 'c'],\n    [0x188, 'c'],\n    [0x23C, 'c'],\n    [0x255, 'c'],\n    [0x1E09, 'c'],\n    [0x2184, 'c'],\n    [0x24D2, 'c'],\n    [0xA73E, 'c'],\n    [0xA73F, 'c'],\n    [0xFF43, 'c'],\n    [0x249E, '(c)'],\n    [0xD0, 'D'],\n    [0x10E, 'D'],\n    [0x110, 'D'],\n    [0x189, 'D'],\n    [0x18A, 'D'],\n    [0x18B, 'D'],\n    [0x1D05, 'D'],\n    [0x1D06, 'D'],\n    [0x1E0A, 'D'],\n    [0x1E0C, 'D'],\n    [0x1E0E, 'D'],\n    [0x1E10, 'D'],\n    [0x1E12, 'D'],\n    [0x24B9, 'D'],\n    [0xA779, 'D'],\n    [0xFF24, 'D'],\n    [0xF0, 'd'],\n    [0x10F, 'd'],\n    [0x111, 'd'],\n    [0x18C, 'd'],\n    [0x221, 'd'],\n    [0x256, 'd'],\n    [0x257, 'd'],\n    [0x1D6D, 'd'],\n    [0x1D81, 'd'],\n    [0x1D91, 'd'],\n    [0x1E0B, 'd'],\n    [0x1E0D, 'd'],\n    [0x1E0F, 'd'],\n    [0x1E11, 'd'],\n    [0x1E13, 'd'],\n    [0x24D3, 'd'],\n    [0xA77A, 'd'],\n    [0xFF44, 'd'],\n    [0x1C4, 'DZ'],\n    [0x1F1, 'DZ'],\n    [0x1C5, 'Dz'],\n    [0x1F2, 'Dz'],\n    [0x249F, '(d)'],\n    [0x238, 'db'],\n    [0x1C6, 'dz'],\n    [0x1F3, 'dz'],\n    [0x2A3, 'dz'],\n    [0x2A5, 'dz'],\n    [0xC8, 'E'],\n    [0xC9, 'E'],\n    [0xCA, 'E'],\n    [0xCB, 'E'],\n    [0x112, 'E'],\n    [0x114, 'E'],\n    [0x116, 'E'],\n    [0x118, 'E'],\n    [0x11A, 'E'],\n    [0x18E, 'E'],\n    [0x190, 'E'],\n    [0x204, 'E'],\n    [0x206, 'E'],\n    [0x228, 'E'],\n    [0x246, 'E'],\n    [0x1D07, 'E'],\n    [0x1E14, 'E'],\n    [0x1E16, 'E'],\n    [0x1E18, 'E'],\n    [0x1E1A, 'E'],\n    [0x1E1C, 'E'],\n    [0x1EB8, 'E'],\n    [0x1EBA, 'E'],\n    [0x1EBC, 'E'],\n    [0x1EBE, 'E'],\n    [0x1EC0, 'E'],\n    [0x1EC2, 'E'],\n    [0x1EC4, 'E'],\n    [0x1EC6, 'E'],\n    [0x24BA, 'E'],\n    [0x2C7B, 'E'],\n    [0xFF25, 'E'],\n    [0xE8, 'e'],\n    [0xE9, 'e'],\n    [0xEA, 'e'],\n    [0xEB, 'e'],\n    [0x113, 'e'],\n    [0x115, 'e'],\n    [0x117, 'e'],\n    [0x119, 'e'],\n    [0x11B, 'e'],\n    [0x1DD, 'e'],\n    [0x205, 'e'],\n    [0x207, 'e'],\n    [0x229, 'e'],\n    [0x247, 'e'],\n    [0x258, 'e'],\n    [0x25B, 'e'],\n    [0x25C, 'e'],\n    [0x25D, 'e'],\n    [0x25E, 'e'],\n    [0x29A, 'e'],\n    [0x1D08, 'e'],\n    [0x1D92, 'e'],\n    [0x1D93, 'e'],\n    [0x1D94, 'e'],\n    [0x1E15, 'e'],\n    [0x1E17, 'e'],\n    [0x1E19, 'e'],\n    [0x1E1B, 'e'],\n    [0x1E1D, 'e'],\n    [0x1EB9, 'e'],\n    [0x1EBB, 'e'],\n    [0x1EBD, 'e'],\n    [0x1EBF, 'e'],\n    [0x1EC1, 'e'],\n    [0x1EC3, 'e'],\n    [0x1EC5, 'e'],\n    [0x1EC7, 'e'],\n    [0x2091, 'e'],\n    [0x24D4, 'e'],\n    [0x2C78, 'e'],\n    [0xFF45, 'e'],\n    [0x24A0, '(e)'],\n    [0x191, 'F'],\n    [0x1E1E, 'F'],\n    [0x24BB, 'F'],\n    [0xA730, 'F'],\n    [0xA77B, 'F'],\n    [0xA7FB, 'F'],\n    [0xFF26, 'F'],\n    [0x192, 'f'],\n    [0x1D6E, 'f'],\n    [0x1D82, 'f'],\n    [0x1E1F, 'f'],\n    [0x1E9B, 'f'],\n    [0x24D5, 'f'],\n    [0xA77C, 'f'],\n    [0xFF46, 'f'],\n    [0x24A1, '(f)'],\n    [0xFB00, 'ff'],\n    [0xFB03, 'ffi'],\n    [0xFB04, 'ffl'],\n    [0xFB01, 'fi'],\n    [0xFB02, 'fl'],\n    [0x11C, 'G'],\n    [0x11E, 'G'],\n    [0x120, 'G'],\n    [0x122, 'G'],\n    [0x193, 'G'],\n    [0x1E4, 'G'],\n    [0x1E5, 'G'],\n    [0x1E6, 'G'],\n    [0x1E7, 'G'],\n    [0x1F4, 'G'],\n    [0x262, 'G'],\n    [0x29B, 'G'],\n    [0x1E20, 'G'],\n    [0x24BC, 'G'],\n    [0xA77D, 'G'],\n    [0xA77E, 'G'],\n    [0xFF27, 'G'],\n    [0x11D, 'g'],\n    [0x11F, 'g'],\n    [0x121, 'g'],\n    [0x123, 'g'],\n    [0x1F5, 'g'],\n    [0x260, 'g'],\n    [0x261, 'g'],\n    [0x1D77, 'g'],\n    [0x1D79, 'g'],\n    [0x1D83, 'g'],\n    [0x1E21, 'g'],\n    [0x24D6, 'g'],\n    [0xA77F, 'g'],\n    [0xFF47, 'g'],\n    [0x24A2, '(g)'],\n    [0x124, 'H'],\n    [0x126, 'H'],\n    [0x21E, 'H'],\n    [0x29C, 'H'],\n    [0x1E22, 'H'],\n    [0x1E24, 'H'],\n    [0x1E26, 'H'],\n    [0x1E28, 'H'],\n    [0x1E2A, 'H'],\n    [0x24BD, 'H'],\n    [0x2C67, 'H'],\n    [0x2C75, 'H'],\n    [0xFF28, 'H'],\n    [0x125, 'h'],\n    [0x127, 'h'],\n    [0x21F, 'h'],\n    [0x265, 'h'],\n    [0x266, 'h'],\n    [0x2AE, 'h'],\n    [0x2AF, 'h'],\n    [0x1E23, 'h'],\n    [0x1E25, 'h'],\n    [0x1E27, 'h'],\n    [0x1E29, 'h'],\n    [0x1E2B, 'h'],\n    [0x1E96, 'h'],\n    [0x24D7, 'h'],\n    [0x2C68, 'h'],\n    [0x2C76, 'h'],\n    [0xFF48, 'h'],\n    [0x1F6, 'HV'],\n    [0x24A3, '(h)'],\n    [0x195, 'hv'],\n    [0xCC, 'I'],\n    [0xCD, 'I'],\n    [0xCE, 'I'],\n    [0xCF, 'I'],\n    [0x128, 'I'],\n    [0x12A, 'I'],\n    [0x12C, 'I'],\n    [0x12E, 'I'],\n    [0x130, 'I'],\n    [0x196, 'I'],\n    [0x197, 'I'],\n    [0x1CF, 'I'],\n    [0x208, 'I'],\n    [0x20A, 'I'],\n    [0x26A, 'I'],\n    [0x1D7B, 'I'],\n    [0x1E2C, 'I'],\n    [0x1E2E, 'I'],\n    [0x1EC8, 'I'],\n    [0x1ECA, 'I'],\n    [0x24BE, 'I'],\n    [0xA7FE, 'I'],\n    [0xFF29, 'I'],\n    [0xEC, 'i'],\n    [0xED, 'i'],\n    [0xEE, 'i'],\n    [0xEF, 'i'],\n    [0x129, 'i'],\n    [0x12B, 'i'],\n    [0x12D, 'i'],\n    [0x12F, 'i'],\n    [0x131, 'i'],\n    [0x1D0, 'i'],\n    [0x209, 'i'],\n    [0x20B, 'i'],\n    [0x268, 'i'],\n    [0x1D09, 'i'],\n    [0x1D62, 'i'],\n    [0x1D7C, 'i'],\n    [0x1D96, 'i'],\n    [0x1E2D, 'i'],\n    [0x1E2F, 'i'],\n    [0x1EC9, 'i'],\n    [0x1ECB, 'i'],\n    [0x2071, 'i'],\n    [0x24D8, 'i'],\n    [0xFF49, 'i'],\n    [0x132, 'IJ'],\n    [0x24A4, '(i)'],\n    [0x133, 'ij'],\n    [0x134, 'J'],\n    [0x248, 'J'],\n    [0x1D0A, 'J'],\n    [0x24BF, 'J'],\n    [0xFF2A, 'J'],\n    [0x135, 'j'],\n    [0x1F0, 'j'],\n    [0x237, 'j'],\n    [0x249, 'j'],\n    [0x25F, 'j'],\n    [0x284, 'j'],\n    [0x29D, 'j'],\n    [0x24D9, 'j'],\n    [0x2C7C, 'j'],\n    [0xFF4A, 'j'],\n    [0x24A5, '(j)'],\n    [0x136, 'K'],\n    [0x198, 'K'],\n    [0x1E8, 'K'],\n    [0x1D0B, 'K'],\n    [0x1E30, 'K'],\n    [0x1E32, 'K'],\n    [0x1E34, 'K'],\n    [0x24C0, 'K'],\n    [0x2C69, 'K'],\n    [0xA740, 'K'],\n    [0xA742, 'K'],\n    [0xA744, 'K'],\n    [0xFF2B, 'K'],\n    [0x137, 'k'],\n    [0x199, 'k'],\n    [0x1E9, 'k'],\n    [0x29E, 'k'],\n    [0x1D84, 'k'],\n    [0x1E31, 'k'],\n    [0x1E33, 'k'],\n    [0x1E35, 'k'],\n    [0x24DA, 'k'],\n    [0x2C6A, 'k'],\n    [0xA741, 'k'],\n    [0xA743, 'k'],\n    [0xA745, 'k'],\n    [0xFF4B, 'k'],\n    [0x24A6, '(k)'],\n    [0x139, 'L'],\n    [0x13B, 'L'],\n    [0x13D, 'L'],\n    [0x13F, 'L'],\n    [0x141, 'L'],\n    [0x23D, 'L'],\n    [0x29F, 'L'],\n    [0x1D0C, 'L'],\n    [0x1E36, 'L'],\n    [0x1E38, 'L'],\n    [0x1E3A, 'L'],\n    [0x1E3C, 'L'],\n    [0x24C1, 'L'],\n    [0x2C60, 'L'],\n    [0x2C62, 'L'],\n    [0xA746, 'L'],\n    [0xA748, 'L'],\n    [0xA780, 'L'],\n    [0xFF2C, 'L'],\n    [0x13A, 'l'],\n    [0x13C, 'l'],\n    [0x13E, 'l'],\n    [0x140, 'l'],\n    [0x142, 'l'],\n    [0x19A, 'l'],\n    [0x234, 'l'],\n    [0x26B, 'l'],\n    [0x26C, 'l'],\n    [0x26D, 'l'],\n    [0x1D85, 'l'],\n    [0x1E37, 'l'],\n    [0x1E39, 'l'],\n    [0x1E3B, 'l'],\n    [0x1E3D, 'l'],\n    [0x24DB, 'l'],\n    [0x2C61, 'l'],\n    [0xA747, 'l'],\n    [0xA749, 'l'],\n    [0xA781, 'l'],\n    [0xFF4C, 'l'],\n    [0x1C7, 'LJ'],\n    [0x1EFA, 'LL'],\n    [0x1C8, 'Lj'],\n    [0x24A7, '(l)'],\n    [0x1C9, 'lj'],\n    [0x1EFB, 'll'],\n    [0x2AA, 'ls'],\n    [0x2AB, 'lz'],\n    [0x19C, 'M'],\n    [0x1D0D, 'M'],\n    [0x1E3E, 'M'],\n    [0x1E40, 'M'],\n    [0x1E42, 'M'],\n    [0x24C2, 'M'],\n    [0x2C6E, 'M'],\n    [0xA7FD, 'M'],\n    [0xA7FF, 'M'],\n    [0xFF2D, 'M'],\n    [0x26F, 'm'],\n    [0x270, 'm'],\n    [0x271, 'm'],\n    [0x1D6F, 'm'],\n    [0x1D86, 'm'],\n    [0x1E3F, 'm'],\n    [0x1E41, 'm'],\n    [0x1E43, 'm'],\n    [0x24DC, 'm'],\n    [0xFF4D, 'm'],\n    [0x24A8, '(m)'],\n    [0xD1, 'N'],\n    [0x143, 'N'],\n    [0x145, 'N'],\n    [0x147, 'N'],\n    [0x14A, 'N'],\n    [0x19D, 'N'],\n    [0x1F8, 'N'],\n    [0x220, 'N'],\n    [0x274, 'N'],\n    [0x1D0E, 'N'],\n    [0x1E44, 'N'],\n    [0x1E46, 'N'],\n    [0x1E48, 'N'],\n    [0x1E4A, 'N'],\n    [0x24C3, 'N'],\n    [0xFF2E, 'N'],\n    [0xF1, 'n'],\n    [0x144, 'n'],\n    [0x146, 'n'],\n    [0x148, 'n'],\n    [0x149, 'n'],\n    [0x14B, 'n'],\n    [0x19E, 'n'],\n    [0x1F9, 'n'],\n    [0x235, 'n'],\n    [0x272, 'n'],\n    [0x273, 'n'],\n    [0x1D70, 'n'],\n    [0x1D87, 'n'],\n    [0x1E45, 'n'],\n    [0x1E47, 'n'],\n    [0x1E49, 'n'],\n    [0x1E4B, 'n'],\n    [0x207F, 'n'],\n    [0x24DD, 'n'],\n    [0xFF4E, 'n'],\n    [0x1CA, 'NJ'],\n    [0x1CB, 'Nj'],\n    [0x24A9, '(n)'],\n    [0x1CC, 'nj'],\n    [0xD2, 'O'],\n    [0xD3, 'O'],\n    [0xD4, 'O'],\n    [0xD5, 'O'],\n    [0xD6, 'O'],\n    [0xD8, 'O'],\n    [0x14C, 'O'],\n    [0x14E, 'O'],\n    [0x150, 'O'],\n    [0x186, 'O'],\n    [0x19F, 'O'],\n    [0x1A0, 'O'],\n    [0x1D1, 'O'],\n    [0x1EA, 'O'],\n    [0x1EC, 'O'],\n    [0x1FE, 'O'],\n    [0x20C, 'O'],\n    [0x20E, 'O'],\n    [0x22A, 'O'],\n    [0x22C, 'O'],\n    [0x22E, 'O'],\n    [0x230, 'O'],\n    [0x1D0F, 'O'],\n    [0x1D10, 'O'],\n    [0x1E4C, 'O'],\n    [0x1E4E, 'O'],\n    [0x1E50, 'O'],\n    [0x1E52, 'O'],\n    [0x1ECC, 'O'],\n    [0x1ECE, 'O'],\n    [0x1ED0, 'O'],\n    [0x1ED2, 'O'],\n    [0x1ED4, 'O'],\n    [0x1ED6, 'O'],\n    [0x1ED8, 'O'],\n    [0x1EDA, 'O'],\n    [0x1EDC, 'O'],\n    [0x1EDE, 'O'],\n    [0x1EE0, 'O'],\n    [0x1EE2, 'O'],\n    [0x24C4, 'O'],\n    [0xA74A, 'O'],\n    [0xA74C, 'O'],\n    [0xFF2F, 'O'],\n    [0xF2, 'o'],\n    [0xF3, 'o'],\n    [0xF4, 'o'],\n    [0xF5, 'o'],\n    [0xF6, 'o'],\n    [0xF8, 'o'],\n    [0x14D, 'o'],\n    [0x14F, 'o'],\n    [0x151, 'o'],\n    [0x1A1, 'o'],\n    [0x1D2, 'o'],\n    [0x1EB, 'o'],\n    [0x1ED, 'o'],\n    [0x1FF, 'o'],\n    [0x20D, 'o'],\n    [0x20F, 'o'],\n    [0x22B, 'o'],\n    [0x22D, 'o'],\n    [0x22F, 'o'],\n    [0x231, 'o'],\n    [0x254, 'o'],\n    [0x275, 'o'],\n    [0x1D16, 'o'],\n    [0x1D17, 'o'],\n    [0x1D97, 'o'],\n    [0x1E4D, 'o'],\n    [0x1E4F, 'o'],\n    [0x1E51, 'o'],\n    [0x1E53, 'o'],\n    [0x1ECD, 'o'],\n    [0x1ECF, 'o'],\n    [0x1ED1, 'o'],\n    [0x1ED3, 'o'],\n    [0x1ED5, 'o'],\n    [0x1ED7, 'o'],\n    [0x1ED9, 'o'],\n    [0x1EDB, 'o'],\n    [0x1EDD, 'o'],\n    [0x1EDF, 'o'],\n    [0x1EE1, 'o'],\n    [0x1EE3, 'o'],\n    [0x2092, 'o'],\n    [0x24DE, 'o'],\n    [0x2C7A, 'o'],\n    [0xA74B, 'o'],\n    [0xA74D, 'o'],\n    [0xFF4F, 'o'],\n    [0x152, 'OE'],\n    [0x276, 'OE'],\n    [0xA74E, 'OO'],\n    [0x222, 'OU'],\n    [0x1D15, 'OU'],\n    [0x24AA, '(o)'],\n    [0x153, 'oe'],\n    [0x1D14, 'oe'],\n    [0xA74F, 'oo'],\n    [0x223, 'ou'],\n    [0x1A4, 'P'],\n    [0x1D18, 'P'],\n    [0x1E54, 'P'],\n    [0x1E56, 'P'],\n    [0x24C5, 'P'],\n    [0x2C63, 'P'],\n    [0xA750, 'P'],\n    [0xA752, 'P'],\n    [0xA754, 'P'],\n    [0xFF30, 'P'],\n    [0x1A5, 'p'],\n    [0x1D71, 'p'],\n    [0x1D7D, 'p'],\n    [0x1D88, 'p'],\n    [0x1E55, 'p'],\n    [0x1E57, 'p'],\n    [0x24DF, 'p'],\n    [0xA751, 'p'],\n    [0xA753, 'p'],\n    [0xA755, 'p'],\n    [0xA7FC, 'p'],\n    [0xFF50, 'p'],\n    [0x24AB, '(p)'],\n    [0x24A, 'Q'],\n    [0x24C6, 'Q'],\n    [0xA756, 'Q'],\n    [0xA758, 'Q'],\n    [0xFF31, 'Q'],\n    [0x138, 'q'],\n    [0x24B, 'q'],\n    [0x2A0, 'q'],\n    [0x24E0, 'q'],\n    [0xA757, 'q'],\n    [0xA759, 'q'],\n    [0xFF51, 'q'],\n    [0x24AC, '(q)'],\n    [0x239, 'qp'],\n    [0x154, 'R'],\n    [0x156, 'R'],\n    [0x158, 'R'],\n    [0x210, 'R'],\n    [0x212, 'R'],\n    [0x24C, 'R'],\n    [0x280, 'R'],\n    [0x281, 'R'],\n    [0x1D19, 'R'],\n    [0x1D1A, 'R'],\n    [0x1E58, 'R'],\n    [0x1E5A, 'R'],\n    [0x1E5C, 'R'],\n    [0x1E5E, 'R'],\n    [0x24C7, 'R'],\n    [0x2C64, 'R'],\n    [0xA75A, 'R'],\n    [0xA782, 'R'],\n    [0xFF32, 'R'],\n    [0x155, 'r'],\n    [0x157, 'r'],\n    [0x159, 'r'],\n    [0x211, 'r'],\n    [0x213, 'r'],\n    [0x24D, 'r'],\n    [0x27C, 'r'],\n    [0x27D, 'r'],\n    [0x27E, 'r'],\n    [0x27F, 'r'],\n    [0x1D63, 'r'],\n    [0x1D72, 'r'],\n    [0x1D73, 'r'],\n    [0x1D89, 'r'],\n    [0x1E59, 'r'],\n    [0x1E5B, 'r'],\n    [0x1E5D, 'r'],\n    [0x1E5F, 'r'],\n    [0x24E1, 'r'],\n    [0xA75B, 'r'],\n    [0xA783, 'r'],\n    [0xFF52, 'r'],\n    [0x24AD, '(r)'],\n    [0x15A, 'S'],\n    [0x15C, 'S'],\n    [0x15E, 'S'],\n    [0x160, 'S'],\n    [0x218, 'S'],\n    [0x1E60, 'S'],\n    [0x1E62, 'S'],\n    [0x1E64, 'S'],\n    [0x1E66, 'S'],\n    [0x1E68, 'S'],\n    [0x24C8, 'S'],\n    [0xA731, 'S'],\n    [0xA785, 'S'],\n    [0xFF33, 'S'],\n    [0x15B, 's'],\n    [0x15D, 's'],\n    [0x15F, 's'],\n    [0x161, 's'],\n    [0x17F, 's'],\n    [0x219, 's'],\n    [0x23F, 's'],\n    [0x282, 's'],\n    [0x1D74, 's'],\n    [0x1D8A, 's'],\n    [0x1E61, 's'],\n    [0x1E63, 's'],\n    [0x1E65, 's'],\n    [0x1E67, 's'],\n    [0x1E69, 's'],\n    [0x1E9C, 's'],\n    [0x1E9D, 's'],\n    [0x24E2, 's'],\n    [0xA784, 's'],\n    [0xFF53, 's'],\n    [0x1E9E, 'SS'],\n    [0x24AE, '(s)'],\n    [0xDF, 'ss'],\n    [0xFB06, 'st'],\n    [0x162, 'T'],\n    [0x164, 'T'],\n    [0x166, 'T'],\n    [0x1AC, 'T'],\n    [0x1AE, 'T'],\n    [0x21A, 'T'],\n    [0x23E, 'T'],\n    [0x1D1B, 'T'],\n    [0x1E6A, 'T'],\n    [0x1E6C, 'T'],\n    [0x1E6E, 'T'],\n    [0x1E70, 'T'],\n    [0x24C9, 'T'],\n    [0xA786, 'T'],\n    [0xFF34, 'T'],\n    [0x163, 't'],\n    [0x165, 't'],\n    [0x167, 't'],\n    [0x1AB, 't'],\n    [0x1AD, 't'],\n    [0x21B, 't'],\n    [0x236, 't'],\n    [0x287, 't'],\n    [0x288, 't'],\n    [0x1D75, 't'],\n    [0x1E6B, 't'],\n    [0x1E6D, 't'],\n    [0x1E6F, 't'],\n    [0x1E71, 't'],\n    [0x1E97, 't'],\n    [0x24E3, 't'],\n    [0x2C66, 't'],\n    [0xFF54, 't'],\n    [0xDE, 'TH'],\n    [0xA766, 'TH'],\n    [0xA728, 'TZ'],\n    [0x24AF, '(t)'],\n    [0x2A8, 'tc'],\n    [0xFE, 'th'],\n    [0x1D7A, 'th'],\n    [0xA767, 'th'],\n    [0x2A6, 'ts'],\n    [0xA729, 'tz'],\n    [0xD9, 'U'],\n    [0xDA, 'U'],\n    [0xDB, 'U'],\n    [0xDC, 'U'],\n    [0x168, 'U'],\n    [0x16A, 'U'],\n    [0x16C, 'U'],\n    [0x16E, 'U'],\n    [0x170, 'U'],\n    [0x172, 'U'],\n    [0x1AF, 'U'],\n    [0x1D3, 'U'],\n    [0x1D5, 'U'],\n    [0x1D7, 'U'],\n    [0x1D9, 'U'],\n    [0x1DB, 'U'],\n    [0x214, 'U'],\n    [0x216, 'U'],\n    [0x244, 'U'],\n    [0x1D1C, 'U'],\n    [0x1D7E, 'U'],\n    [0x1E72, 'U'],\n    [0x1E74, 'U'],\n    [0x1E76, 'U'],\n    [0x1E78, 'U'],\n    [0x1E7A, 'U'],\n    [0x1EE4, 'U'],\n    [0x1EE6, 'U'],\n    [0x1EE8, 'U'],\n    [0x1EEA, 'U'],\n    [0x1EEC, 'U'],\n    [0x1EEE, 'U'],\n    [0x1EF0, 'U'],\n    [0x24CA, 'U'],\n    [0xFF35, 'U'],\n    [0xF9, 'u'],\n    [0xFA, 'u'],\n    [0xFB, 'u'],\n    [0xFC, 'u'],\n    [0x169, 'u'],\n    [0x16B, 'u'],\n    [0x16D, 'u'],\n    [0x16F, 'u'],\n    [0x171, 'u'],\n    [0x173, 'u'],\n    [0x1B0, 'u'],\n    [0x1D4, 'u'],\n    [0x1D6, 'u'],\n    [0x1D8, 'u'],\n    [0x1DA, 'u'],\n    [0x1DC, 'u'],\n    [0x215, 'u'],\n    [0x217, 'u'],\n    [0x289, 'u'],\n    [0x1D64, 'u'],\n    [0x1D99, 'u'],\n    [0x1E73, 'u'],\n    [0x1E75, 'u'],\n    [0x1E77, 'u'],\n    [0x1E79, 'u'],\n    [0x1E7B, 'u'],\n    [0x1EE5, 'u'],\n    [0x1EE7, 'u'],\n    [0x1EE9, 'u'],\n    [0x1EEB, 'u'],\n    [0x1EED, 'u'],\n    [0x1EEF, 'u'],\n    [0x1EF1, 'u'],\n    [0x24E4, 'u'],\n    [0xFF55, 'u'],\n    [0x24B0, '(u)'],\n    [0x1D6B, 'ue'],\n    [0x1B2, 'V'],\n    [0x245, 'V'],\n    [0x1D20, 'V'],\n    [0x1E7C, 'V'],\n    [0x1E7E, 'V'],\n    [0x1EFC, 'V'],\n    [0x24CB, 'V'],\n    [0xA75E, 'V'],\n    [0xA768, 'V'],\n    [0xFF36, 'V'],\n    [0x28B, 'v'],\n    [0x28C, 'v'],\n    [0x1D65, 'v'],\n    [0x1D8C, 'v'],\n    [0x1E7D, 'v'],\n    [0x1E7F, 'v'],\n    [0x24E5, 'v'],\n    [0x2C71, 'v'],\n    [0x2C74, 'v'],\n    [0xA75F, 'v'],\n    [0xFF56, 'v'],\n    [0xA760, 'VY'],\n    [0x24B1, '(v)'],\n    [0xA761, 'vy'],\n    [0x174, 'W'],\n    [0x1F7, 'W'],\n    [0x1D21, 'W'],\n    [0x1E80, 'W'],\n    [0x1E82, 'W'],\n    [0x1E84, 'W'],\n    [0x1E86, 'W'],\n    [0x1E88, 'W'],\n    [0x24CC, 'W'],\n    [0x2C72, 'W'],\n    [0xFF37, 'W'],\n    [0x175, 'w'],\n    [0x1BF, 'w'],\n    [0x28D, 'w'],\n    [0x1E81, 'w'],\n    [0x1E83, 'w'],\n    [0x1E85, 'w'],\n    [0x1E87, 'w'],\n    [0x1E89, 'w'],\n    [0x1E98, 'w'],\n    [0x24E6, 'w'],\n    [0x2C73, 'w'],\n    [0xFF57, 'w'],\n    [0x24B2, '(w)'],\n    [0x1E8A, 'X'],\n    [0x1E8C, 'X'],\n    [0x24CD, 'X'],\n    [0xFF38, 'X'],\n    [0x1D8D, 'x'],\n    [0x1E8B, 'x'],\n    [0x1E8D, 'x'],\n    [0x2093, 'x'],\n    [0x24E7, 'x'],\n    [0xFF58, 'x'],\n    [0x24B3, '(x)'],\n    [0xDD, 'Y'],\n    [0x176, 'Y'],\n    [0x178, 'Y'],\n    [0x1B3, 'Y'],\n    [0x232, 'Y'],\n    [0x24E, 'Y'],\n    [0x28F, 'Y'],\n    [0x1E8E, 'Y'],\n    [0x1EF2, 'Y'],\n    [0x1EF4, 'Y'],\n    [0x1EF6, 'Y'],\n    [0x1EF8, 'Y'],\n    [0x1EFE, 'Y'],\n    [0x24CE, 'Y'],\n    [0xFF39, 'Y'],\n    [0xFD, 'y'],\n    [0xFF, 'y'],\n    [0x177, 'y'],\n    [0x1B4, 'y'],\n    [0x233, 'y'],\n    [0x24F, 'y'],\n    [0x28E, 'y'],\n    [0x1E8F, 'y'],\n    [0x1E99, 'y'],\n    [0x1EF3, 'y'],\n    [0x1EF5, 'y'],\n    [0x1EF7, 'y'],\n    [0x1EF9, 'y'],\n    [0x1EFF, 'y'],\n    [0x24E8, 'y'],\n    [0xFF59, 'y'],\n    [0x24B4, '(y)'],\n    [0x179, 'Z'],\n    [0x17B, 'Z'],\n    [0x17D, 'Z'],\n    [0x1B5, 'Z'],\n    [0x21C, 'Z'],\n    [0x224, 'Z'],\n    [0x1D22, 'Z'],\n    [0x1E90, 'Z'],\n    [0x1E92, 'Z'],\n    [0x1E94, 'Z'],\n    [0x24CF, 'Z'],\n    [0x2C6B, 'Z'],\n    [0xA762, 'Z'],\n    [0xFF3A, 'Z'],\n    [0x17A, 'z'],\n    [0x17C, 'z'],\n    [0x17E, 'z'],\n    [0x1B6, 'z'],\n    [0x21D, 'z'],\n    [0x225, 'z'],\n    [0x240, 'z'],\n    [0x290, 'z'],\n    [0x291, 'z'],\n    [0x1D76, 'z'],\n    [0x1D8E, 'z'],\n    [0x1E91, 'z'],\n    [0x1E93, 'z'],\n    [0x1E95, 'z'],\n    [0x24E9, 'z'],\n    [0x2C6C, 'z'],\n    [0xA763, 'z'],\n    [0xFF5A, 'z'],\n    [0x24B5, '(z)'],\n    [0x2070, '0'],\n    [0x2080, '0'],\n    [0x24EA, '0'],\n    [0x24FF, '0'],\n    [0xFF10, '0'],\n    [0xB9, '1'],\n    [0x2081, '1'],\n    [0x2460, '1'],\n    [0x24F5, '1'],\n    [0x2776, '1'],\n    [0x2780, '1'],\n    [0x278A, '1'],\n    [0xFF11, '1'],\n    [0x2488, '1.'],\n    [0x2474, '(1)'],\n    [0xB2, '2'],\n    [0x2082, '2'],\n    [0x2461, '2'],\n    [0x24F6, '2'],\n    [0x2777, '2'],\n    [0x2781, '2'],\n    [0x278B, '2'],\n    [0xFF12, '2'],\n    [0x2489, '2.'],\n    [0x2475, '(2)'],\n    [0xB3, '3'],\n    [0x2083, '3'],\n    [0x2462, '3'],\n    [0x24F7, '3'],\n    [0x2778, '3'],\n    [0x2782, '3'],\n    [0x278C, '3'],\n    [0xFF13, '3'],\n    [0x248A, '3.'],\n    [0x2476, '(3)'],\n    [0x2074, '4'],\n    [0x2084, '4'],\n    [0x2463, '4'],\n    [0x24F8, '4'],\n    [0x2779, '4'],\n    [0x2783, '4'],\n    [0x278D, '4'],\n    [0xFF14, '4'],\n    [0x248B, '4.'],\n    [0x2477, '(4)'],\n    [0x2075, '5'],\n    [0x2085, '5'],\n    [0x2464, '5'],\n    [0x24F9, '5'],\n    [0x277A, '5'],\n    [0x2784, '5'],\n    [0x278E, '5'],\n    [0xFF15, '5'],\n    [0x248C, '5.'],\n    [0x2478, '(5)'],\n    [0x2076, '6'],\n    [0x2086, '6'],\n    [0x2465, '6'],\n    [0x24FA, '6'],\n    [0x277B, '6'],\n    [0x2785, '6'],\n    [0x278F, '6'],\n    [0xFF16, '6'],\n    [0x248D, '6.'],\n    [0x2479, '(6)'],\n    [0x2077, '7'],\n    [0x2087, '7'],\n    [0x2466, '7'],\n    [0x24FB, '7'],\n    [0x277C, '7'],\n    [0x2786, '7'],\n    [0x2790, '7'],\n    [0xFF17, '7'],\n    [0x248E, '7.'],\n    [0x247A, '(7)'],\n    [0x2078, '8'],\n    [0x2088, '8'],\n    [0x2467, '8'],\n    [0x24FC, '8'],\n    [0x277D, '8'],\n    [0x2787, '8'],\n    [0x2791, '8'],\n    [0xFF18, '8'],\n    [0x248F, '8.'],\n    [0x247B, '(8)'],\n    [0x2079, '9'],\n    [0x2089, '9'],\n    [0x2468, '9'],\n    [0x24FD, '9'],\n    [0x277E, '9'],\n    [0x2788, '9'],\n    [0x2792, '9'],\n    [0xFF19, '9'],\n    [0x2490, '9.'],\n    [0x247C, '(9)'],\n    [0x2469, '10'],\n    [0x24FE, '10'],\n    [0x277F, '10'],\n    [0x2789, '10'],\n    [0x2793, '10'],\n    [0x2491, '10.'],\n    [0x247D, '(10)'],\n    [0x246A, '11'],\n    [0x24EB, '11'],\n    [0x2492, '11.'],\n    [0x247E, '(11)'],\n    [0x246B, '12'],\n    [0x24EC, '12'],\n    [0x2493, '12.'],\n    [0x247F, '(12)'],\n    [0x246C, '13'],\n    [0x24ED, '13'],\n    [0x2494, '13.'],\n    [0x2480, '(13)'],\n    [0x246D, '14'],\n    [0x24EE, '14'],\n    [0x2495, '14.'],\n    [0x2481, '(14)'],\n    [0x246E, '15'],\n    [0x24EF, '15'],\n    [0x2496, '15.'],\n    [0x2482, '(15)'],\n    [0x246F, '16'],\n    [0x24F0, '16'],\n    [0x2497, '16.'],\n    [0x2483, '(16)'],\n    [0x2470, '17'],\n    [0x24F1, '17'],\n    [0x2498, '17.'],\n    [0x2484, '(17)'],\n    [0x2471, '18'],\n    [0x24F2, '18'],\n    [0x2499, '18.'],\n    [0x2485, '(18)'],\n    [0x2472, '19'],\n    [0x24F3, '19'],\n    [0x249A, '19.'],\n    [0x2486, '(19)'],\n    [0x2473, '20'],\n    [0x24F4, '20'],\n    [0x249B, '20.'],\n    [0x2487, '(20)'],\n    [0xAB, '\"'],\n    [0xBB, '\"'],\n    [0x201C, '\"'],\n    [0x201D, '\"'],\n    [0x201E, '\"'],\n    [0x2033, '\"'],\n    [0x2036, '\"'],\n    [0x275D, '\"'],\n    [0x275E, '\"'],\n    [0x276E, '\"'],\n    [0x276F, '\"'],\n    [0xFF02, '\"'],\n    [0x2018, '\\''],\n    [0x2019, '\\''],\n    [0x201A, '\\''],\n    [0x201B, '\\''],\n    [0x2032, '\\''],\n    [0x2035, '\\''],\n    [0x2039, '\\''],\n    [0x203A, '\\''],\n    [0x275B, '\\''],\n    [0x275C, '\\''],\n    [0xFF07, '\\''],\n    [0x2010, '-'],\n    [0x2011, '-'],\n    [0x2012, '-'],\n    [0x2013, '-'],\n    [0x2014, '-'],\n    [0x207B, '-'],\n    [0x208B, '-'],\n    [0xFF0D, '-'],\n    [0x2045, '['],\n    [0x2772, '['],\n    [0xFF3B, '['],\n    [0x2046, ']'],\n    [0x2773, ']'],\n    [0xFF3D, ']'],\n    [0x207D, '('],\n    [0x208D, '('],\n    [0x2768, '('],\n    [0x276A, '('],\n    [0xFF08, '('],\n    [0x2E28, '(('],\n    [0x207E, ')'],\n    [0x208E, ')'],\n    [0x2769, ')'],\n    [0x276B, ')'],\n    [0xFF09, ')'],\n    [0x2E29, '))'],\n    [0x276C, '<'],\n    [0x2770, '<'],\n    [0xFF1C, '<'],\n    [0x276D, '>'],\n    [0x2771, '>'],\n    [0xFF1E, '>'],\n    [0x2774, '{'],\n    [0xFF5B, '{'],\n    [0x2775, '}'],\n    [0xFF5D, '}'],\n    [0x207A, '+'],\n    [0x208A, '+'],\n    [0xFF0B, '+'],\n    [0x207C, '='],\n    [0x208C, '='],\n    [0xFF1D, '='],\n    [0xFF01, '!'],\n    [0x203C, '!!'],\n    [0x2049, '!?'],\n    [0xFF03, '#'],\n    [0xFF04, '$'],\n    [0x2052, '%'],\n    [0xFF05, '%'],\n    [0xFF06, '&'],\n    [0x204E, '*'],\n    [0xFF0A, '*'],\n    [0xFF0C, ','],\n    [0xFF0E, '.'],\n    [0x2044, '/'],\n    [0xFF0F, '/'],\n    [0xFF1A, ':'],\n    [0x204F, ';'],\n    [0xFF1B, ';'],\n    [0xFF1F, '?'],\n    [0x2047, '??'],\n    [0x2048, '?!'],\n    [0xFF20, '@'],\n    [0xFF3C, '\\\\'],\n    [0x2038, '^'],\n    [0xFF3E, '^'],\n    [0xFF3F, '_'],\n    [0x2053, '~'],\n    [0xFF5E, '~']\n]);\n\nmodule.exports = ASCIIFolder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fold-to-ascii/lib/ascii-folder.js\n// module id = 85\n// module chunks = 0\n//# sourceURL=webpack:///./~/fold-to-ascii/lib/ascii-folder.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = __webpack_require__(100);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 86\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/index.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = {\n  Properties: {\n    // Global States and Properties\n    'aria-current': 0, // state\n    'aria-details': 0,\n    'aria-disabled': 0, // state\n    'aria-hidden': 0, // state\n    'aria-invalid': 0, // state\n    'aria-keyshortcuts': 0,\n    'aria-label': 0,\n    'aria-roledescription': 0,\n    // Widget Attributes\n    'aria-autocomplete': 0,\n    'aria-checked': 0,\n    'aria-expanded': 0,\n    'aria-haspopup': 0,\n    'aria-level': 0,\n    'aria-modal': 0,\n    'aria-multiline': 0,\n    'aria-multiselectable': 0,\n    'aria-orientation': 0,\n    'aria-placeholder': 0,\n    'aria-pressed': 0,\n    'aria-readonly': 0,\n    'aria-required': 0,\n    'aria-selected': 0,\n    'aria-sort': 0,\n    'aria-valuemax': 0,\n    'aria-valuemin': 0,\n    'aria-valuenow': 0,\n    'aria-valuetext': 0,\n    // Live Region Attributes\n    'aria-atomic': 0,\n    'aria-busy': 0,\n    'aria-live': 0,\n    'aria-relevant': 0,\n    // Drag-and-Drop Attributes\n    'aria-dropeffect': 0,\n    'aria-grabbed': 0,\n    // Relationship Attributes\n    'aria-activedescendant': 0,\n    'aria-colcount': 0,\n    'aria-colindex': 0,\n    'aria-colspan': 0,\n    'aria-controls': 0,\n    'aria-describedby': 0,\n    'aria-errormessage': 0,\n    'aria-flowto': 0,\n    'aria-labelledby': 0,\n    'aria-owns': 0,\n    'aria-posinset': 0,\n    'aria-rowcount': 0,\n    'aria-rowindex': 0,\n    'aria-rowspan': 0,\n    'aria-setsize': 0\n  },\n  DOMAttributeNames: {},\n  DOMPropertyNames: {}\n};\n\nmodule.exports = ARIADOMPropertyConfig;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ARIADOMPropertyConfig.js\n// module id = 87\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ARIADOMPropertyConfig.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = __webpack_require__(4);\n\nvar focusNode = __webpack_require__(74);\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/AutoFocusUtils.js\n// module id = 88\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/AutoFocusUtils.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = __webpack_require__(22);\nvar ExecutionEnvironment = __webpack_require__(6);\nvar FallbackCompositionState = __webpack_require__(95);\nvar SyntheticCompositionEvent = __webpack_require__(132);\nvar SyntheticInputEvent = __webpack_require__(135);\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture'\n    },\n    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case 'topCompositionStart':\n      return eventTypes.compositionStart;\n    case 'topCompositionEnd':\n      return eventTypes.compositionEnd;\n    case 'topCompositionUpdate':\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topKeyUp':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case 'topKeyDown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case 'topKeyPress':\n    case 'topMouseDown':\n    case 'topBlur':\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topCompositionEnd':\n      return getDataFromCustomEvent(nativeEvent);\n    case 'topKeyPress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'topTextInput':\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case 'topPaste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case 'topKeyPress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case 'topCompositionEnd':\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/BeforeInputEventPlugin.js\n// module id = 89\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/BeforeInputEventPlugin.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = __webpack_require__(52);\nvar ExecutionEnvironment = __webpack_require__(6);\nvar ReactInstrumentation = __webpack_require__(7);\n\nvar camelizeStyleName = __webpack_require__(152);\nvar dangerousStyleValue = __webpack_require__(141);\nvar hyphenateStyleName = __webpack_require__(159);\nvar memoizeStringOnly = __webpack_require__(162);\nvar warning = __webpack_require__(3);\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (false) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (false) {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (false) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: component._debugID,\n        type: 'update styles',\n        payload: styles\n      });\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (false) {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSPropertyOperations.js\n// module id = 90\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/CSSPropertyOperations.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = __webpack_require__(21);\nvar EventPropagators = __webpack_require__(22);\nvar ExecutionEnvironment = __webpack_require__(6);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactUpdates = __webpack_require__(8);\nvar SyntheticEvent = __webpack_require__(9);\n\nvar getEventTarget = __webpack_require__(43);\nvar isEventSupported = __webpack_require__(44);\nvar isTextInputElement = __webpack_require__(69);\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topChange') {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topInput') {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topClick') {\n    return targetInst;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ChangeEventPlugin.js\n// module id = 91\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ChangeEventPlugin.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar DOMLazyTree = __webpack_require__(14);\nvar ExecutionEnvironment = __webpack_require__(6);\n\nvar createNodesFromMarkup = __webpack_require__(155);\nvar emptyFunction = __webpack_require__(10);\nvar invariant = __webpack_require__(1);\n\nvar Danger = {\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n\n};\n\nmodule.exports = Danger;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Danger.js\n// module id = 92\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/Danger.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\nvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\nmodule.exports = DefaultEventPluginOrder;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DefaultEventPluginOrder.js\n// module id = 93\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/DefaultEventPluginOrder.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = __webpack_require__(22);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar SyntheticMouseEvent = __webpack_require__(26);\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EnterLeaveEventPlugin.js\n// module id = 94\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/EnterLeaveEventPlugin.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar PooledClass = __webpack_require__(13);\n\nvar getTextContentAccessor = __webpack_require__(67);\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/FallbackCompositionState.js\n// module id = 95\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/FallbackCompositionState.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(15);\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {}\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/HTMLDOMPropertyConfig.js\n// module id = 96\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/HTMLDOMPropertyConfig.js?");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactReconciler = __webpack_require__(16);\n\nvar instantiateReactComponent = __webpack_require__(68);\nvar KeyEscapeUtils = __webpack_require__(35);\nvar shouldUpdateReactComponent = __webpack_require__(45);\nvar traverseAllChildren = __webpack_require__(71);\nvar warning = __webpack_require__(3);\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\"}) && (\"production\") === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = __webpack_require__(76);\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (false) {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (false) {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(82)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactChildReconciler.js\n// module id = 97\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactChildReconciler.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = __webpack_require__(31);\nvar ReactDOMIDOperations = __webpack_require__(105);\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentBrowserEnvironment.js\n// module id = 98\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactComponentBrowserEnvironment.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar React = __webpack_require__(17);\nvar ReactComponentEnvironment = __webpack_require__(37);\nvar ReactCurrentOwner = __webpack_require__(11);\nvar ReactErrorUtils = __webpack_require__(38);\nvar ReactInstanceMap = __webpack_require__(23);\nvar ReactInstrumentation = __webpack_require__(7);\nvar ReactNodeTypes = __webpack_require__(62);\nvar ReactReconciler = __webpack_require__(16);\n\nif (false) {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\n\nvar emptyObject = __webpack_require__(73);\nvar invariant = __webpack_require__(1);\nvar shallowEqual = __webpack_require__(47);\nvar shouldUpdateReactComponent = __webpack_require__(45);\nvar warning = __webpack_require__(3);\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (false) {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (false) {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (false) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (false) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (false) {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (false) {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (false) {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (false) {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (false) {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (false) {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (false) {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (false) {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (false) {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (false) {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (false) {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (false) {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (false) {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (false) {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (false) {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (false) {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (false) {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (false) {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (false) {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (false) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if ((\"production\") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (false) {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactCompositeComponent.js\n// module id = 99\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactCompositeComponent.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactDefaultInjection = __webpack_require__(113);\nvar ReactMount = __webpack_require__(61);\nvar ReactReconciler = __webpack_require__(16);\nvar ReactUpdates = __webpack_require__(8);\nvar ReactVersion = __webpack_require__(126);\n\nvar findDOMNode = __webpack_require__(142);\nvar getHostComponentFromComposite = __webpack_require__(66);\nvar renderSubtreeIntoContainer = __webpack_require__(150);\nvar warning = __webpack_require__(3);\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (false) {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (false) {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n}\n\nmodule.exports = ReactDOM;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOM.js\n// module id = 100\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOM.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar AutoFocusUtils = __webpack_require__(88);\nvar CSSPropertyOperations = __webpack_require__(90);\nvar DOMLazyTree = __webpack_require__(14);\nvar DOMNamespaces = __webpack_require__(32);\nvar DOMProperty = __webpack_require__(15);\nvar DOMPropertyOperations = __webpack_require__(54);\nvar EventPluginHub = __webpack_require__(21);\nvar EventPluginRegistry = __webpack_require__(33);\nvar ReactBrowserEventEmitter = __webpack_require__(25);\nvar ReactDOMComponentFlags = __webpack_require__(55);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactDOMInput = __webpack_require__(106);\nvar ReactDOMOption = __webpack_require__(107);\nvar ReactDOMSelect = __webpack_require__(56);\nvar ReactDOMTextarea = __webpack_require__(110);\nvar ReactInstrumentation = __webpack_require__(7);\nvar ReactMultiChild = __webpack_require__(119);\nvar ReactServerRenderingTransaction = __webpack_require__(124);\n\nvar emptyFunction = __webpack_require__(10);\nvar escapeTextContentForBrowser = __webpack_require__(28);\nvar invariant = __webpack_require__(1);\nvar isEventSupported = __webpack_require__(44);\nvar shallowEqual = __webpack_require__(47);\nvar validateDOMNesting = __webpack_require__(46);\nvar warning = __webpack_require__(3);\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar STYLE = 'style';\nvar HTML = '__html';\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (false) {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (false) {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (false) {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (false) {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (false) {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (false) {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (false) {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        if (false) {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n        DOMLazyTree.queueText(lazyTree, contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (false) {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (false) {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (false) {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (false) {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (false) {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (false) {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponent.js\n// module id = 101\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMComponent.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar validateDOMNesting = __webpack_require__(46);\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (false) {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMContainerInfo.js\n// module id = 102\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMContainerInfo.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar DOMLazyTree = __webpack_require__(14);\nvar ReactDOMComponentTree = __webpack_require__(4);\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMEmptyComponent.js\n// module id = 103\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMEmptyComponent.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true,\n  useFiber: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMFeatureFlags.js\n// module id = 104\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMFeatureFlags.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = __webpack_require__(31);\nvar ReactDOMComponentTree = __webpack_require__(4);\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMIDOperations.js\n// module id = 105\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMIDOperations.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar DOMPropertyOperations = __webpack_require__(54);\nvar LinkedValueUtils = __webpack_require__(36);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactUpdates = __webpack_require__(8);\n\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (false) {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n\n    if (false) {\n      inst._wrapperState.controlled = isControlled(props);\n    }\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (false) {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        node.defaultValue = '' + props.defaultValue;\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMInput.js\n// module id = 106\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMInput.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar React = __webpack_require__(17);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactDOMSelect = __webpack_require__(56);\n\nvar warning = __webpack_require__(3);\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMOption.js\n// module id = 107\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMOption.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(6);\n\nvar getNodeForCharacterOffset = __webpack_require__(147);\nvar getTextContentAccessor = __webpack_require__(67);\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelection.js\n// module id = 108\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMSelection.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar DOMChildrenOperations = __webpack_require__(31);\nvar DOMLazyTree = __webpack_require__(14);\nvar ReactDOMComponentTree = __webpack_require__(4);\n\nvar escapeTextContentForBrowser = __webpack_require__(28);\nvar invariant = __webpack_require__(1);\nvar validateDOMNesting = __webpack_require__(46);\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (false) {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextComponent.js\n// module id = 109\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMTextComponent.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2),\n    _assign = __webpack_require__(5);\n\nvar LinkedValueUtils = __webpack_require__(36);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactUpdates = __webpack_require__(8);\n\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, props, {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (false) {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (false) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.\n    node.value = node.textContent; // Detach value from defaultValue\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextarea.js\n// module id = 110\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMTextarea.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTreeTraversal.js\n// module id = 111\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDOMTreeTraversal.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar ReactUpdates = __webpack_require__(8);\nvar Transaction = __webpack_require__(27);\n\nvar emptyFunction = __webpack_require__(10);\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      return callback(a, b, c, d, e);\n    } else {\n      return transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultBatchingStrategy.js\n// module id = 112\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDefaultBatchingStrategy.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = __webpack_require__(87);\nvar BeforeInputEventPlugin = __webpack_require__(89);\nvar ChangeEventPlugin = __webpack_require__(91);\nvar DefaultEventPluginOrder = __webpack_require__(93);\nvar EnterLeaveEventPlugin = __webpack_require__(94);\nvar HTMLDOMPropertyConfig = __webpack_require__(96);\nvar ReactComponentBrowserEnvironment = __webpack_require__(98);\nvar ReactDOMComponent = __webpack_require__(101);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactDOMEmptyComponent = __webpack_require__(103);\nvar ReactDOMTreeTraversal = __webpack_require__(111);\nvar ReactDOMTextComponent = __webpack_require__(109);\nvar ReactDefaultBatchingStrategy = __webpack_require__(112);\nvar ReactEventListener = __webpack_require__(116);\nvar ReactInjection = __webpack_require__(117);\nvar ReactReconcileTransaction = __webpack_require__(122);\nvar SVGDOMPropertyConfig = __webpack_require__(127);\nvar SelectEventPlugin = __webpack_require__(128);\nvar SimpleEventPlugin = __webpack_require__(129);\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultInjection.js\n// module id = 113\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactDefaultInjection.js?")},function(module,exports){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactElementSymbol.js\n// module id = 114\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactElementSymbol.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = __webpack_require__(21);\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventEmitterMixin.js\n// module id = 115\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactEventEmitterMixin.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar EventListener = __webpack_require__(72);\nvar ExecutionEnvironment = __webpack_require__(6);\nvar PooledClass = __webpack_require__(13);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactUpdates = __webpack_require__(8);\n\nvar getEventTarget = __webpack_require__(43);\nvar getUnboundedScrollPosition = __webpack_require__(157);\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventListener.js\n// module id = 116\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactEventListener.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(15);\nvar EventPluginHub = __webpack_require__(21);\nvar EventPluginUtils = __webpack_require__(34);\nvar ReactComponentEnvironment = __webpack_require__(37);\nvar ReactEmptyComponent = __webpack_require__(57);\nvar ReactBrowserEventEmitter = __webpack_require__(25);\nvar ReactHostComponent = __webpack_require__(59);\nvar ReactUpdates = __webpack_require__(8);\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInjection.js\n// module id = 117\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactInjection.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar adler32 = __webpack_require__(140);\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMarkupChecksum.js\n// module id = 118\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactMarkupChecksum.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar ReactComponentEnvironment = __webpack_require__(37);\nvar ReactInstanceMap = __webpack_require__(23);\nvar ReactInstrumentation = __webpack_require__(7);\n\nvar ReactCurrentOwner = __webpack_require__(11);\nvar ReactReconciler = __webpack_require__(16);\nvar ReactChildReconciler = __webpack_require__(97);\n\nvar emptyFunction = __webpack_require__(10);\nvar flattenChildren = __webpack_require__(143);\nvar invariant = __webpack_require__(1);\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'INSERT_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'MOVE_EXISTING',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'REMOVE_NODE',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'SET_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'TEXT_CONTENT',\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (false) {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (false) {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (false) {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (false) {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (false) {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (false) {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMultiChild.js\n// module id = 119\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactMultiChild.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid owner.\n * @final\n */\nfunction isValidOwner(object) {\n  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n}\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactOwner.js\n// module id = 120\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactOwner.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactPropTypesSecret.js\n// module id = 121\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactPropTypesSecret.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar CallbackQueue = __webpack_require__(53);\nvar PooledClass = __webpack_require__(13);\nvar ReactBrowserEventEmitter = __webpack_require__(25);\nvar ReactInputSelection = __webpack_require__(60);\nvar ReactInstrumentation = __webpack_require__(7);\nvar Transaction = __webpack_require__(27);\nvar ReactUpdateQueue = __webpack_require__(39);\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (false) {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconcileTransaction.js\n// module id = 122\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactReconcileTransaction.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactOwner = __webpack_require__(120);\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevRef = null;\n  var prevOwner = null;\n  if (prevElement !== null && typeof prevElement === 'object') {\n    prevRef = prevElement.ref;\n    prevOwner = prevElement._owner;\n  }\n\n  var nextRef = null;\n  var nextOwner = null;\n  if (nextElement !== null && typeof nextElement === 'object') {\n    nextRef = nextElement.ref;\n    nextOwner = nextElement._owner;\n  }\n\n  return prevRef !== nextRef ||\n  // If owner changes but we have an unchanged function ref, don't update refs\n  typeof nextRef === 'string' && nextOwner !== prevOwner;\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactRef.js\n// module id = 123\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactRef.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(5);\n\nvar PooledClass = __webpack_require__(13);\nvar Transaction = __webpack_require__(27);\nvar ReactInstrumentation = __webpack_require__(7);\nvar ReactServerUpdateQueue = __webpack_require__(125);\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (false) {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerRenderingTransaction.js\n// module id = 124\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactServerRenderingTransaction.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = __webpack_require__(39);\n\nvar warning = __webpack_require__(3);\n\nfunction warnNoop(publicInstance, callerName) {\n  if (false) {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerUpdateQueue.js\n// module id = 125\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactServerUpdateQueue.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.4.1';\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactVersion.js\n// module id = 126\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/ReactVersion.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SVGDOMPropertyConfig.js\n// module id = 127\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SVGDOMPropertyConfig.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = __webpack_require__(22);\nvar ExecutionEnvironment = __webpack_require__(6);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactInputSelection = __webpack_require__(60);\nvar SyntheticEvent = __webpack_require__(9);\n\nvar getActiveElement = __webpack_require__(75);\nvar isTextInputElement = __webpack_require__(69);\nvar shallowEqual = __webpack_require__(47);\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SelectEventPlugin.js\n// module id = 128\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SelectEventPlugin.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar EventListener = __webpack_require__(72);\nvar EventPropagators = __webpack_require__(22);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar SyntheticAnimationEvent = __webpack_require__(130);\nvar SyntheticClipboardEvent = __webpack_require__(131);\nvar SyntheticEvent = __webpack_require__(9);\nvar SyntheticFocusEvent = __webpack_require__(134);\nvar SyntheticKeyboardEvent = __webpack_require__(136);\nvar SyntheticMouseEvent = __webpack_require__(26);\nvar SyntheticDragEvent = __webpack_require__(133);\nvar SyntheticTouchEvent = __webpack_require__(137);\nvar SyntheticTransitionEvent = __webpack_require__(138);\nvar SyntheticUIEvent = __webpack_require__(24);\nvar SyntheticWheelEvent = __webpack_require__(139);\n\nvar emptyFunction = __webpack_require__(10);\nvar getEventCharCode = __webpack_require__(41);\nvar invariant = __webpack_require__(1);\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\n\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp':\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SimpleEventPlugin.js\n// module id = 129\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SimpleEventPlugin.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(9);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticAnimationEvent.js\n// module id = 130\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticAnimationEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(9);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticClipboardEvent.js\n// module id = 131\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticClipboardEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(9);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticCompositionEvent.js\n// module id = 132\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticCompositionEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = __webpack_require__(26);\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticDragEvent.js\n// module id = 133\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticDragEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(24);\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticFocusEvent.js\n// module id = 134\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticFocusEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(9);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticInputEvent.js\n// module id = 135\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticInputEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(24);\n\nvar getEventCharCode = __webpack_require__(41);\nvar getEventKey = __webpack_require__(144);\nvar getEventModifierState = __webpack_require__(42);\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticKeyboardEvent.js\n// module id = 136\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticKeyboardEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(24);\n\nvar getEventModifierState = __webpack_require__(42);\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTouchEvent.js\n// module id = 137\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticTouchEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(9);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTransitionEvent.js\n// module id = 138\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticTransitionEvent.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = __webpack_require__(26);\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticWheelEvent.js\n// module id = 139\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/SyntheticWheelEvent.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/adler32.js\n// module id = 140\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/adler32.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = __webpack_require__(52);\nvar warning = __webpack_require__(3);\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (false) {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/dangerousStyleValue.js\n// module id = 141\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/dangerousStyleValue.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(2);\n\nvar ReactCurrentOwner = __webpack_require__(11);\nvar ReactDOMComponentTree = __webpack_require__(4);\nvar ReactInstanceMap = __webpack_require__(23);\n\nvar getHostComponentFromComposite = __webpack_require__(66);\nvar invariant = __webpack_require__(1);\nvar warning = __webpack_require__(3);\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (false) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/findDOMNode.js\n// module id = 142\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/findDOMNode.js?");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = __webpack_require__(35);\nvar traverseAllChildren = __webpack_require__(71);\nvar warning = __webpack_require__(3);\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\"}) && (\"production\") === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = __webpack_require__(76);\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (false) {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (false) {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(82)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/flattenChildren.js\n// module id = 143\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/flattenChildren.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar getEventCharCode = __webpack_require__(41);\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventKey.js\n// module id = 144\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getEventKey.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getIteratorFn.js\n// module id = 145\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getIteratorFn.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar nextDebugID = 1;\n\nfunction getNextDebugID() {\n  return nextDebugID++;\n}\n\nmodule.exports = getNextDebugID;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getNextDebugID.js\n// module id = 146\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getNextDebugID.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getNodeForCharacterOffset.js\n// module id = 147\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getNodeForCharacterOffset.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(6);\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getVendorPrefixedEventName.js\n// module id = 148\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/getVendorPrefixedEventName.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = __webpack_require__(28);\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/quoteAttributeValueForBrowser.js\n// module id = 149\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/quoteAttributeValueForBrowser.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactMount = __webpack_require__(61);\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/renderSubtreeIntoContainer.js\n// module id = 150\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/lib/renderSubtreeIntoContainer.js?")},function(module,exports){eval('"use strict";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize(\'background-color\')\n *   < "backgroundColor"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/camelize.js\n// module id = 151\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/camelize.js?')},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = __webpack_require__(151);\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/camelizeStyleName.js\n// module id = 152\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/camelizeStyleName.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(161);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/containsNode.js\n// module id = 153\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/containsNode.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = __webpack_require__(1);\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/createArrayFromMixed.js\n// module id = 154\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/createArrayFromMixed.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = __webpack_require__(6);\n\nvar createArrayFromMixed = __webpack_require__(154);\nvar getMarkupWrap = __webpack_require__(156);\nvar invariant = __webpack_require__(1);\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/createNodesFromMarkup.js\n// module id = 155\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/createNodesFromMarkup.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = __webpack_require__(6);\n\nvar invariant = __webpack_require__(1);\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/getMarkupWrap.js\n// module id = 156\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/getMarkupWrap.js?")},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/getUnboundedScrollPosition.js\n// module id = 157\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/getUnboundedScrollPosition.js?")},function(module,exports){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/hyphenate.js\n// module id = 158\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/hyphenate.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = __webpack_require__(158);\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/hyphenateStyleName.js\n// module id = 159\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/hyphenateStyleName.js?");
},function(module,exports){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/isNode.js\n// module id = 160\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/isNode.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(160);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/isTextNode.js\n// module id = 161\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/isTextNode.js?")},function(module,exports){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/memoizeStringOnly.js\n// module id = 162\n// module chunks = 0\n//# sourceURL=webpack:///./~/react-dom/~/fbjs/lib/memoizeStringOnly.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/KeyEscapeUtils.js\n// module id = 163\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/KeyEscapeUtils.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(19);\n\nvar invariant = __webpack_require__(20);\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/PooledClass.js\n// module id = 164\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/PooledClass.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(164);\nvar ReactElement = __webpack_require__(18);\n\nvar emptyFunction = __webpack_require__(50);\nvar traverseAllChildren = __webpack_require__(173);\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactChildren.js\n// module id = 165\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactChildren.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(19),\n    _assign = __webpack_require__(30);\n\nvar ReactComponent = __webpack_require__(48);\nvar ReactElement = __webpack_require__(18);\nvar ReactPropTypeLocationNames = __webpack_require__(78);\nvar ReactNoopUpdateQueue = __webpack_require__(49);\n\nvar emptyObject = __webpack_require__(51);\nvar invariant = __webpack_require__(20);\nvar warning = __webpack_require__(12);\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: 'DEFINE_MANY',\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: 'DEFINE_MANY',\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: 'DEFINE_MANY',\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: 'DEFINE_MANY_MERGED',\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: 'DEFINE_ONCE',\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: 'DEFINE_MANY',\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: 'DEFINE_ONCE',\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: 'DEFINE_MANY',\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: 'OVERRIDE_BASE'\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (false) {\n      validateTypeDef(Constructor, childContextTypes, 'childContext');\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (false) {\n      validateTypeDef(Constructor, contextTypes, 'context');\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (false) {\n      validateTypeDef(Constructor, propTypes, 'prop');\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === 'OVERRIDE_BASE') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (false) {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === 'DEFINE_MANY_MERGED') {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === 'DEFINE_MANY') {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (false) {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (false) {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (false) {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (false) {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (false) {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (false) {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactClass.js\n// module id = 166\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactClass.js?");
},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(18);\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (false) {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactDOMFactories.js\n// module id = 167\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactDOMFactories.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(18);\nvar ReactPropTypeLocationNames = __webpack_require__(78);\nvar ReactPropTypesSecret = __webpack_require__(169);\n\nvar emptyFunction = __webpack_require__(50);\nvar getIteratorFn = __webpack_require__(80);\nvar warning = __webpack_require__(12);\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n  symbol: createPrimitiveTypeChecker('symbol'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n/*eslint-disable no-self-compare*/\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n/*eslint-enable no-self-compare*/\n\n/**\n * We use an Error-like object for backward compatibility as people may call\n * PropTypes directly and inspect their output. However we don't use real\n * Errors anymore. We don't inspect their stack anyway, and creating them\n * is prohibitively expensive if they are created too often, such as what\n * happens in oneOfType() for any type before the one that matched.\n */\nfunction PropTypeError(message) {\n  this.message = message;\n  this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\n\nfunction createChainableTypeChecker(validate) {\n  if (false) {\n    var manualPropTypeCallCache = {};\n  }\n  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (false) {\n      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n        var cacheKey = componentName + ':' + propName;\n        if (!manualPropTypeCallCache[cacheKey]) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;\n          manualPropTypeCallCache[cacheKey] = true;\n        }\n      }\n    }\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        if (props[propName] === null) {\n          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n        }\n        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName, secret) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n    }\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!ReactElement.isValidElement(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (is(propValue, expectedValues[i])) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n    }\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n  if (propValue['@@toStringTag'] === 'Symbol') {\n    return true;\n  }\n\n  // Fallback for non-spec compliant Symbols which are polyfilled.\n  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  if (isSymbol(propType, propValue)) {\n    return 'symbol';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nmodule.exports = ReactPropTypes;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypes.js\n// module id = 168\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactPropTypes.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypesSecret.js\n// module id = 169\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactPropTypesSecret.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = __webpack_require__(30);\n\nvar ReactComponent = __webpack_require__(48);\nvar ReactNoopUpdateQueue = __webpack_require__(49);\n\nvar emptyObject = __webpack_require__(51);\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPureComponent.js\n// module id = 170\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactPureComponent.js?")},function(module,exports){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.4.1';\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactVersion.js\n// module id = 171\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/ReactVersion.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = __webpack_require__(19);\n\nvar ReactElement = __webpack_require__(18);\n\nvar invariant = __webpack_require__(20);\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/onlyChild.js\n// module id = 172\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/onlyChild.js?")},function(module,exports,__webpack_require__){eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = __webpack_require__(19);\n\nvar ReactCurrentOwner = __webpack_require__(11);\nvar REACT_ELEMENT_TYPE = __webpack_require__(77);\n\nvar getIteratorFn = __webpack_require__(80);\nvar invariant = __webpack_require__(20);\nvar KeyEscapeUtils = __webpack_require__(163);\nvar warning = __webpack_require__(12);\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (false) {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (false) {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/traverseAllChildren.js\n// module id = 173\n// module chunks = 0\n//# sourceURL=webpack:///./~/react/lib/traverseAllChildren.js?");
}]);